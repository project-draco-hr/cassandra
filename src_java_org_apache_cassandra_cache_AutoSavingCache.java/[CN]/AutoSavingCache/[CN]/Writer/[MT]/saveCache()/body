{
  logger.debug("Deleting old {} files.",cacheType);
  deleteOldCacheFiles();
  if (keys.size() == 0 || estimatedTotalBytes == 0) {
    logger.debug("Skipping {} save, cache is empty.",cacheType);
    return;
  }
  long start=System.currentTimeMillis();
  HashMap<Pair<String,String>,SequentialWriter> writers=new HashMap<Pair<String,String>,SequentialWriter>();
  try {
    for (    CacheKey key : keys) {
      Pair<String,String> path=key.getPathInfo();
      SequentialWriter writer=writers.get(path);
      if (writer == null) {
        writer=tempCacheFile(path);
        writers.put(path,writer);
      }
      key.write(writer.stream);
      bytesWritten+=key.serializedSize();
    }
  }
  finally {
    for (    SequentialWriter writer : writers.values())     FileUtils.closeQuietly(writer);
  }
  for (  Map.Entry<Pair<String,String>,SequentialWriter> info : writers.entrySet()) {
    Pair<String,String> path=info.getKey();
    SequentialWriter writer=info.getValue();
    File tmpFile=new File(writer.getPath());
    File cacheFile=getCachePath(path.left,path.right);
    cacheFile.delete();
    if (!tmpFile.renameTo(cacheFile))     logger.error("Unable to rename " + tmpFile + " to "+ cacheFile);
  }
  logger.info(String.format("Saved %s (%d items) in %d ms",cacheType,keys.size(),System.currentTimeMillis() - start));
}
