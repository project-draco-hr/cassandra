def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('SlicePredicate')
    if (self.column_names != None):
        oprot.writeFieldBegin('column_names', TType.LIST, 1)
        oprot.writeListBegin(TType.STRING, len(self.column_names))
        for iter20 in self.column_names:
            oprot.writeString(iter20)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.slice_range != None):
        oprot.writeFieldBegin('slice_range', TType.STRUCT, 2)
        self.slice_range.write(oprot)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        return
