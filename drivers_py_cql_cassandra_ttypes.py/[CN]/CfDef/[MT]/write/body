def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('CfDef')
    if (self.keyspace != None):
        oprot.writeFieldBegin('keyspace', TType.STRING, 1)
        oprot.writeString(self.keyspace)
        oprot.writeFieldEnd()
    if (self.name != None):
        oprot.writeFieldBegin('name', TType.STRING, 2)
        oprot.writeString(self.name)
        oprot.writeFieldEnd()
    if (self.column_type != None):
        oprot.writeFieldBegin('column_type', TType.STRING, 3)
        oprot.writeString(self.column_type)
        oprot.writeFieldEnd()
    if (self.comparator_type != None):
        oprot.writeFieldBegin('comparator_type', TType.STRING, 5)
        oprot.writeString(self.comparator_type)
        oprot.writeFieldEnd()
    if (self.subcomparator_type != None):
        oprot.writeFieldBegin('subcomparator_type', TType.STRING, 6)
        oprot.writeString(self.subcomparator_type)
        oprot.writeFieldEnd()
    if (self.comment != None):
        oprot.writeFieldBegin('comment', TType.STRING, 8)
        oprot.writeString(self.comment)
        oprot.writeFieldEnd()
    if (self.row_cache_size != None):
        oprot.writeFieldBegin('row_cache_size', TType.DOUBLE, 9)
        oprot.writeDouble(self.row_cache_size)
        oprot.writeFieldEnd()
    if (self.key_cache_size != None):
        oprot.writeFieldBegin('key_cache_size', TType.DOUBLE, 11)
        oprot.writeDouble(self.key_cache_size)
        oprot.writeFieldEnd()
    if (self.read_repair_chance != None):
        oprot.writeFieldBegin('read_repair_chance', TType.DOUBLE, 12)
        oprot.writeDouble(self.read_repair_chance)
        oprot.writeFieldEnd()
    if (self.column_metadata != None):
        oprot.writeFieldBegin('column_metadata', TType.LIST, 13)
        oprot.writeListBegin(TType.STRUCT, len(self.column_metadata))
        for iter80 in self.column_metadata:
            iter80.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.gc_grace_seconds != None):
        oprot.writeFieldBegin('gc_grace_seconds', TType.I32, 14)
        oprot.writeI32(self.gc_grace_seconds)
        oprot.writeFieldEnd()
    if (self.default_validation_class != None):
        oprot.writeFieldBegin('default_validation_class', TType.STRING, 15)
        oprot.writeString(self.default_validation_class)
        oprot.writeFieldEnd()
    if (self.id != None):
        oprot.writeFieldBegin('id', TType.I32, 16)
        oprot.writeI32(self.id)
        oprot.writeFieldEnd()
    if (self.min_compaction_threshold != None):
        oprot.writeFieldBegin('min_compaction_threshold', TType.I32, 17)
        oprot.writeI32(self.min_compaction_threshold)
        oprot.writeFieldEnd()
    if (self.max_compaction_threshold != None):
        oprot.writeFieldBegin('max_compaction_threshold', TType.I32, 18)
        oprot.writeI32(self.max_compaction_threshold)
        oprot.writeFieldEnd()
    if (self.row_cache_save_period_in_seconds != None):
        oprot.writeFieldBegin('row_cache_save_period_in_seconds', TType.I32, 19)
        oprot.writeI32(self.row_cache_save_period_in_seconds)
        oprot.writeFieldEnd()
    if (self.key_cache_save_period_in_seconds != None):
        oprot.writeFieldBegin('key_cache_save_period_in_seconds', TType.I32, 20)
        oprot.writeI32(self.key_cache_save_period_in_seconds)
        oprot.writeFieldEnd()
    if (self.memtable_throughput_in_mb != None):
        oprot.writeFieldBegin('memtable_throughput_in_mb', TType.I32, 22)
        oprot.writeI32(self.memtable_throughput_in_mb)
        oprot.writeFieldEnd()
    if (self.memtable_operations_in_millions != None):
        oprot.writeFieldBegin('memtable_operations_in_millions', TType.DOUBLE, 23)
        oprot.writeDouble(self.memtable_operations_in_millions)
        oprot.writeFieldEnd()
    if (self.replicate_on_write != None):
        oprot.writeFieldBegin('replicate_on_write', TType.BOOL, 24)
        oprot.writeBool(self.replicate_on_write)
        oprot.writeFieldEnd()
    if (self.merge_shards_chance != None):
        oprot.writeFieldBegin('merge_shards_chance', TType.DOUBLE, 25)
        oprot.writeDouble(self.merge_shards_chance)
        oprot.writeFieldEnd()
    if (self.key_validation_class != None):
        oprot.writeFieldBegin('key_validation_class', TType.STRING, 26)
        oprot.writeString(self.key_validation_class)
        oprot.writeFieldEnd()
    if (self.row_cache_provider != None):
        oprot.writeFieldBegin('row_cache_provider', TType.STRING, 27)
        oprot.writeString(self.row_cache_provider)
        oprot.writeFieldEnd()
    if (self.key_alias != None):
        oprot.writeFieldBegin('key_alias', TType.STRING, 28)
        oprot.writeString(self.key_alias)
        oprot.writeFieldEnd()
    if (self.compaction_strategy != None):
        oprot.writeFieldBegin('compaction_strategy', TType.STRING, 29)
        oprot.writeString(self.compaction_strategy)
        oprot.writeFieldEnd()
    if (self.compaction_strategy_options != None):
        oprot.writeFieldBegin('compaction_strategy_options', TType.MAP, 30)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.compaction_strategy_options))
        for (kiter81, viter82) in self.compaction_strategy_options.items():
            oprot.writeString(kiter81)
            oprot.writeString(viter82)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.row_cache_keys_to_save != None):
        oprot.writeFieldBegin('row_cache_keys_to_save', TType.I32, 31)
        oprot.writeI32(self.row_cache_keys_to_save)
        oprot.writeFieldEnd()
    if (self.compression_options != None):
        oprot.writeFieldBegin('compression_options', TType.MAP, 32)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.compression_options))
        for (kiter83, viter84) in self.compression_options.items():
            oprot.writeString(kiter83)
            oprot.writeString(viter84)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        if (self.keyspace is None):
            raise TProtocol.TProtocolException(message='Required field keyspace is unset!')
        if (self.name is None):
            raise TProtocol.TProtocolException(message='Required field name is unset!')
        return
