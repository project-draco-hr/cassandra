def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('KeyCount')
    if (self.key != None):
        oprot.writeFieldBegin('key', TType.STRING, 1)
        oprot.writeString(self.key)
        oprot.writeFieldEnd()
    if (self.count != None):
        oprot.writeFieldBegin('count', TType.I32, 2)
        oprot.writeI32(self.count)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        if (self.key is None):
            raise TProtocol.TProtocolException(message='Required field key is unset!')
        if (self.count is None):
            raise TProtocol.TProtocolException(message='Required field count is unset!')
        return
