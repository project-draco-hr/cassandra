{
  client.init();
  Collection<SSTableReader> sstables=openSSTables();
  if (sstables.isEmpty()) {
    outputHandler.output("No sstables to stream");
    return new LoaderFuture(0);
  }
  Map<InetAddress,Collection<Range>> endpointToRanges=client.getEndpointToRangesMap();
  outputHandler.output(String.format("Streaming revelant part of %sto %s",names(sstables),endpointToRanges.keySet()));
  LoaderFuture future=new LoaderFuture(endpointToRanges.size());
  for (  Map.Entry<InetAddress,Collection<Range>> entry : endpointToRanges.entrySet()) {
    InetAddress remote=entry.getKey();
    if (toIgnore.contains(remote)) {
      future.latch.countDown();
      continue;
    }
    Collection<Range> ranges=entry.getValue();
    StreamOutSession session=StreamOutSession.create(keyspace,remote,new CountDownCallback(future.latch,remote));
    StreamOut.transferSSTables(session,sstables,ranges,OperationType.BULK_LOAD);
    future.setPendings(remote,session.getFiles());
  }
  return future;
}
