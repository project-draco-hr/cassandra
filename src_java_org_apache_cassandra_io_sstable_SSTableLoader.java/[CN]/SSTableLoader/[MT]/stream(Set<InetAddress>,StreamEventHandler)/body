{
  client.init(keyspace);
  outputHandler.output("Established connection to initial hosts");
  StreamPlan plan=new StreamPlan("Bulk Load",0,connectionsPerHost,false).connectionFactory(client.getConnectionFactory());
  Map<InetAddress,Collection<Range<Token>>> endpointToRanges=client.getEndpointToRangesMap();
  openSSTables(endpointToRanges);
  if (sstables.isEmpty()) {
    return plan.execute();
  }
  outputHandler.output(String.format("Streaming relevant part of %sto %s",names(sstables),endpointToRanges.keySet()));
  for (  Map.Entry<InetAddress,Collection<Range<Token>>> entry : endpointToRanges.entrySet()) {
    InetAddress remote=entry.getKey();
    if (toIgnore.contains(remote))     continue;
    List<StreamSession.SSTableStreamingSections> endpointDetails=new LinkedList<>();
    List<Ref> refs=new ArrayList<>();
    try {
      for (      StreamSession.SSTableStreamingSections details : streamingDetails.get(remote)) {
        Ref ref=details.sstable.tryRef();
        if (ref == null)         throw new IllegalStateException();
        refs.add(ref);
        endpointDetails.add(details);
      }
      plan.transferFiles(remote,endpointDetails);
    }
  finally {
      for (      Ref ref : refs)       ref.release();
    }
  }
  plan.listeners(this,listeners);
  return plan.execute();
}
