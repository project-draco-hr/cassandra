{
  if (dis.available() == 0)   return null;
  String[] names=RowMutation.getColumnAndColumnFamily(name);
  if (names.length == 1) {
    IColumn superColumn=defreezeSuperColumn(dis);
    if (name.equals(superColumn.name())) {
      int size=dis.readInt();
      dis.readInt();
      IColumn column=null;
      for (int i=0; i < size; ++i) {
        column=Column.serializer().deserialize(dis,filter);
        if (column != null) {
          superColumn.addColumn(column.name(),column);
          column=null;
          if (filter.isDone()) {
            break;
          }
        }
      }
      return superColumn;
    }
 else {
      dis.readInt();
      int size=dis.readInt();
      dis.skip(size);
      return null;
    }
  }
  SuperColumn superColumn=defreezeSuperColumn(dis);
  if (!superColumn.isMarkedForDelete()) {
    int size=dis.readInt();
    dis.readInt();
    if (size > 0) {
      for (int i=0; i < size; ++i) {
        IColumn subColumn=Column.serializer().deserialize(dis,names[1],filter);
        if (subColumn != null) {
          superColumn.addColumn(subColumn.name(),subColumn);
          break;
        }
      }
    }
  }
  return superColumn;
}
