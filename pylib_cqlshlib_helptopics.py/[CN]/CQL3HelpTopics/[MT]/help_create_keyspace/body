def help_create_keyspace(self):
    print '\n        CREATE KEYSPACE <ksname>\n            WITH replication = {\'class\':\'<strategy>\' [,\'<option>\':<val>]};\n\n        The CREATE KEYSPACE statement creates a new top-level namespace (aka\n        "keyspace"). Valid names are any string constructed of alphanumeric\n        characters and underscores. Names which do not work as valid\n        identifiers or integers should be quoted as string literals. Properties\n        such as replication strategy and count are specified during creation\n        as key-value pairs in the \'replication\' map:\n\n          class [required]: The name of the replication strategy class\n          which should be used for the new keyspace. Some often-used classes\n          are SimpleStrategy and NetworkTopologyStrategy.\n\n          other options [optional]: Most strategies require additional arguments\n          which can be supplied as key-value pairs in the \'replication\' map.\n\n        Examples:\n\n          To create a keyspace with NetworkTopologyStrategy and strategy option of "DC1"\n          with a value of "1" and "DC2" with a value of "2" you would use\n          the following statement:\n            CREATE KEYSPACE <ksname>\n                WITH replication = {\'class\':\'NetworkTopologyStrategy\', \'DC1\':1, \'DC2\':2};\n\n         To create a keyspace with SimpleStrategy and "replication_factor" option\n         with a value of "3" you would use this statement:\n            CREATE KEYSPACE <ksname>\n                WITH replication = {\'class\':\'SimpleStrategy\', \'replication_factor\':3};\n        '
