def help_create_function(self):
    print "\n        CREATE ( OR REPLACE )? FUNCTION ( IF NOT EXISTS )?\n                            ( <keyspace> '.' )? <function-name>\n                            '(' <arg-name> <arg-type> ( ',' <arg-name> <arg-type> )* ')'\n                            ( CALLED | RETURNS NULL ) ON NULL INPUT\n                            RETURNS <type>\n                            LANGUAGE <language>\n                            AS <body>\n\n        CREATE FUNCTION creates or replaces a user-defined function.\n\n        Signatures are used to distinguish individual functions. The signature consists of:\n\n        The fully qualified function name - i.e keyspace plus function-name\n        The concatenated list of all argument types\n\n        Note that keyspace names, function names and argument types are subject to the default\n        naming conventions and case-sensitivity rules.\n\n        CREATE FUNCTION with the optional OR REPLACE keywords either creates a function or\n        replaces an existing one with the same signature. A CREATE FUNCTION without OR REPLACE\n        fails if a function with the same signature already exists.\n\n        Behavior on invocation with null values must be defined for each function. There are\n        two options:\n\n        RETURNS NULL ON NULL INPUT declares that the function will always return null if any\n        of the input arguments is null. CALLED ON NULL INPUT declares that the function will\n        always be executed.\n\n        If the optional IF NOT EXISTS keywords are used, the function will only be created if\n        another function with the same signature does not exist.\n\n        OR REPLACE and IF NOT EXIST cannot be used together.\n\n        Functions belong to a keyspace. If no keyspace is specified in <function-name>, the\n        current keyspace is used (i.e. the keyspace specified using the USE statement).\n        It is not possible to create a user-defined function in one of the system keyspaces.\n        "
