def help_create_table(self):
    print "\n        CREATE TABLE <cfname> ( <colname> <type> PRIMARY KEY [,\n                                <colname> <type> [, ...]] )\n               [WITH <optionname> = <val> [AND <optionname> = <val> [...]]];\n\n        CREATE TABLE statements create a new CQL table under the current\n        keyspace. Valid table names are strings of alphanumeric characters and\n        underscores, which begin with a letter.\n\n        Each table requires a primary key, which will correspond to the\n        underlying columnfamily key and key validator. It's important to\n        note that the key type you use must be compatible with the partitioner\n        in use. For example, OrderPreservingPartitioner and\n        CollatingOrderPreservingPartitioner both require UTF-8 keys.\n\n        In cql3 mode, a table can have multiple columns composing the primary\n        key (see HELP COMPOSITE_PRIMARY_KEYS).\n\n        For more information, see one of the following:\n\n          HELP CREATE_TABLE_TYPES;\n          HELP CREATE_TABLE_OPTIONS;\n        "
