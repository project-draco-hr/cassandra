def help_select_where(self):
    print '\n        SELECT: Filtering rows\n\n          SELECT ... WHERE <key> = keyname AND name1 = value1\n          SELECT ... WHERE <key> >= startkey and <key> =< endkey AND name1 = value1\n          SELECT ... WHERE <key> IN (\'<key>\', \'<key>\', \'<key>\', ...)\n\n        The WHERE clause provides for filtering the rows that appear in\n        results.  The clause can filter on a key name, or range of keys, and in\n        the case of indexed columns, on column values.  Key filters are\n        specified using the KEY keyword or key alias name, a relational\n        operator (one of =, >, >=, <, and <=), and a term value.  When terms\n        appear on both sides of a relational operator it is assumed the filter\n        applies to an indexed column. With column index filters, the term on\n        the left of the operator is the name, the term on the right is the\n        value to filter _on_.\n\n        Note: The greater-than and less-than operators (> and <) result in key\n        ranges that are inclusive of the terms. There is no supported notion of\n        "strictly" greater-than or less-than; these operators are merely\n        supported as aliases to >= and <=.\n        '
