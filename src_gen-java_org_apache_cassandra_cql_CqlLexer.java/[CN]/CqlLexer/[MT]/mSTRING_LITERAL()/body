{
  try {
    int _type=STRING_LITERAL;
    int _channel=DEFAULT_TOKEN_CHANNEL;
    int c;
{
      match('\'');
      StringBuilder b=new StringBuilder();
      loop4:       do {
        int alt4=3;
        int LA4_0=input.LA(1);
        if ((LA4_0 == '\'')) {
          int LA4_1=input.LA(2);
          if ((LA4_1 == '\'')) {
            alt4=2;
          }
        }
 else         if (((LA4_0 >= '\u0000' && LA4_0 <= '\t') || (LA4_0 >= '\u000B' && LA4_0 <= '\f') || (LA4_0 >= '\u000E' && LA4_0 <= '&')|| (LA4_0 >= '(' && LA4_0 <= '\uFFFF'))) {
          alt4=1;
        }
switch (alt4) {
case 1:
{
            c=input.LA(1);
            if ((input.LA(1) >= '\u0000' && input.LA(1) <= '\t') || (input.LA(1) >= '\u000B' && input.LA(1) <= '\f') || (input.LA(1) >= '\u000E' && input.LA(1) <= '&')|| (input.LA(1) >= '(' && input.LA(1) <= '\uFFFF')) {
              input.consume();
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recover(mse);
              throw mse;
            }
            b.appendCodePoint(c);
          }
        break;
case 2:
{
        match('\'');
        match('\'');
        b.appendCodePoint('\'');
      }
    break;
default :
  break loop4;
}
}
 while (true);
match('\'');
setText(b.toString());
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
