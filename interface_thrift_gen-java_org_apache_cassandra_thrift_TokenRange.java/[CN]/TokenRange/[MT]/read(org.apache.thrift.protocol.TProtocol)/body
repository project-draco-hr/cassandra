{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.STRING) {
        this.start_token=iprot.readString();
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.STRING) {
    this.end_token=iprot.readString();
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
  org.apache.thrift.protocol.TList _list24=iprot.readListBegin();
  this.endpoints=new ArrayList<String>(_list24.size);
  for (int _i25=0; _i25 < _list24.size; ++_i25) {
    String _elem26;
    _elem26=iprot.readString();
    this.endpoints.add(_elem26);
  }
  iprot.readListEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list27=iprot.readListBegin();
this.rpc_endpoints=new ArrayList<String>(_list27.size);
for (int _i28=0; _i28 < _list27.size; ++_i28) {
String _elem29;
_elem29=iprot.readString();
this.rpc_endpoints.add(_elem29);
}
iprot.readListEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 5:
if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list30=iprot.readListBegin();
this.endpoint_details=new ArrayList<EndpointDetails>(_list30.size);
for (int _i31=0; _i31 < _list30.size; ++_i31) {
EndpointDetails _elem32;
_elem32=new EndpointDetails();
_elem32.read(iprot);
this.endpoint_details.add(_elem32);
}
iprot.readListEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
