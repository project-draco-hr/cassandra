{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.STRING) {
        this.start_token=iprot.readString();
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.STRING) {
    this.end_token=iprot.readString();
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
  org.apache.thrift.protocol.TList _list20=iprot.readListBegin();
  this.endpoints=new ArrayList<String>(_list20.size);
  for (int _i21=0; _i21 < _list20.size; ++_i21) {
    String _elem22;
    _elem22=iprot.readString();
    this.endpoints.add(_elem22);
  }
  iprot.readListEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list23=iprot.readListBegin();
this.rpc_endpoints=new ArrayList<String>(_list23.size);
for (int _i24=0; _i24 < _list23.size; ++_i24) {
String _elem25;
_elem25=iprot.readString();
this.rpc_endpoints.add(_elem25);
}
iprot.readListEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 5:
if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list26=iprot.readListBegin();
this.endpoint_details=new ArrayList<EndpointDetails>(_list26.size);
for (int _i27=0; _i27 < _list26.size; ++_i27) {
EndpointDetails _elem28;
_elem28=new EndpointDetails();
_elem28.read(iprot);
this.endpoint_details.add(_elem28);
}
iprot.readListEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
