{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
        struct.start_token=iprot.readString();
        struct.setStart_tokenIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
    struct.end_token=iprot.readString();
    struct.setEnd_tokenIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
  org.apache.thrift.protocol.TList _list56=iprot.readListBegin();
  struct.endpoints=new ArrayList<String>(_list56.size);
  for (int _i57=0; _i57 < _list56.size; ++_i57) {
    String _elem58;
    _elem58=iprot.readString();
    struct.endpoints.add(_elem58);
  }
  iprot.readListEnd();
}
struct.setEndpointsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list59=iprot.readListBegin();
struct.rpc_endpoints=new ArrayList<String>(_list59.size);
for (int _i60=0; _i60 < _list59.size; ++_i60) {
String _elem61;
_elem61=iprot.readString();
struct.rpc_endpoints.add(_elem61);
}
iprot.readListEnd();
}
struct.setRpc_endpointsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 5:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list62=iprot.readListBegin();
struct.endpoint_details=new ArrayList<EndpointDetails>(_list62.size);
for (int _i63=0; _i63 < _list62.size; ++_i63) {
EndpointDetails _elem64;
_elem64=new EndpointDetails();
_elem64.read(iprot);
struct.endpoint_details.add(_elem64);
}
iprot.readListEnd();
}
struct.setEndpoint_detailsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
