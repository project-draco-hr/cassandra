{
  TypeSizes sizes=TypeSizes.NATIVE;
  long size=ByteBufferUtil.serializedSizeWithShortLength(expression.column().name.bytes,sizes) + expression.operator.serializedSize();
switch (expression.kind()) {
case SIMPLE:
    size+=ByteBufferUtil.serializedSizeWithShortLength(((SimpleExpression)expression).value,sizes);
  break;
case MAP_EQUALITY:
MapEqualityExpression mexpr=(MapEqualityExpression)expression;
if (version < MessagingService.VERSION_30) size+=ByteBufferUtil.serializedSizeWithShortLength(mexpr.getIndexValue(),sizes);
 else size+=ByteBufferUtil.serializedSizeWithShortLength(mexpr.key,sizes) + ByteBufferUtil.serializedSizeWithShortLength(mexpr.value,sizes);
break;
case THRIFT_DYN_EXPR:
size+=ByteBufferUtil.serializedSizeWithShortLength(((ThriftExpression)expression).value,sizes);
break;
}
return size;
}
