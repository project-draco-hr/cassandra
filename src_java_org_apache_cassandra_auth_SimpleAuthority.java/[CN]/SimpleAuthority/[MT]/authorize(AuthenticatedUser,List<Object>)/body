{
  if (resource.size() < 2 || !Resources.ROOT.equals(resource.get(0)) || !Resources.KEYSPACES.equals(resource.get(1)))   return Permission.NONE;
  String keyspace;
  EnumSet<Permission> authorized;
  if (resource.size() < 3) {
    keyspace=KEYSPACES_WRITE_PROPERTY;
    authorized=EnumSet.of(Permission.READ);
  }
 else {
    keyspace=(String)resource.get(2);
    authorized=Permission.NONE;
  }
  String afilename=System.getProperty(ACCESS_FILENAME_PROPERTY);
  try {
    FileInputStream in=new FileInputStream(afilename);
    Properties props=new Properties();
    props.load(in);
    in.close();
    if (null == props.getProperty(keyspace))     return authorized;
    for (    String allow : props.getProperty(keyspace).split(","))     if (allow.equals(user.username))     authorized=Permission.ALL;
  }
 catch (  IOException e) {
    throw new RuntimeException(String.format("Authorization table file '%s' could not be opened: %s",afilename,e.getMessage()));
  }
  return authorized;
}
