{
  this.parker=parker;
  this.logger=logger;
  this.displayName=displayName;
  if (DEBUG_COALESCING) {
    new Thread(displayName + " debug thread"){
      @Override public void run(){
        while (true) {
          try {
            Thread.sleep(5000);
          }
 catch (          InterruptedException e) {
            throw new AssertionError();
          }
          shouldLogAverage=true;
        }
      }
    }
.start();
  }
  RandomAccessFile rasTemp=null;
  ByteBuffer logBufferTemp=null;
  if (DEBUG_COALESCING) {
    try {
      File outFile=File.createTempFile("coalescing_" + this.displayName + "_",".log",new File(DEBUG_COALESCING_PATH));
      rasTemp=new RandomAccessFile(outFile,"rw");
      logBufferTemp=ras.getChannel().map(MapMode.READ_WRITE,0,Integer.MAX_VALUE);
      logBufferTemp.putLong(0);
    }
 catch (    Exception e) {
      logger.error("Unable to create output file for debugging coalescing",e);
    }
  }
  ras=rasTemp;
  logBuffer=logBufferTemp;
}
