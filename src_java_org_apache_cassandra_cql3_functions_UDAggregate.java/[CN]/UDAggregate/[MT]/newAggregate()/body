{
  return new Aggregate(){
    private long stateFunctionCount;
    private long stateFunctionDuration;
    private ByteBuffer state;
{
      reset();
    }
    public void addInput(    int protocolVersion,    List<ByteBuffer> values) throws InvalidRequestException {
      long startTime=System.nanoTime();
      stateFunctionCount++;
      List<ByteBuffer> fArgs=new ArrayList<>(values.size() + 1);
      fArgs.add(state);
      fArgs.addAll(values);
      if (stateFunction instanceof UDFunction) {
        UDFunction udf=(UDFunction)stateFunction;
        if (udf.isCallableWrtNullable(fArgs))         state=udf.execute(protocolVersion,fArgs);
      }
 else {
        state=stateFunction.execute(protocolVersion,fArgs);
      }
      stateFunctionDuration+=(System.nanoTime() - startTime) / 1000;
    }
    public ByteBuffer compute(    int protocolVersion) throws InvalidRequestException {
      Tracing.trace("Executed UDA {}: {} call(s) to state function {} in {}\u03bcs",name(),stateFunctionCount,stateFunction.name(),stateFunctionDuration);
      if (finalFunction == null)       return state;
      List<ByteBuffer> fArgs=Collections.singletonList(state);
      ByteBuffer result=finalFunction.execute(protocolVersion,fArgs);
      return result;
    }
    public void reset(){
      state=initcond != null ? initcond.duplicate() : null;
      stateFunctionDuration=0;
      stateFunctionCount=0;
    }
  }
;
}
