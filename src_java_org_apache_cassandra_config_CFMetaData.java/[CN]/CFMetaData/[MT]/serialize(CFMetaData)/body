{
  ByteArrayOutputStream bout=new ByteArrayOutputStream();
  DataOutputStream dout=new DataOutputStream(bout);
  dout.writeUTF(cfm.tableName);
  dout.writeUTF(cfm.cfName);
  dout.writeUTF(cfm.cfType.name());
  dout.writeUTF(cfm.clockType.name());
  dout.writeUTF(cfm.comparator.getClass().getName());
  dout.writeBoolean(cfm.subcolumnComparator != null);
  if (cfm.subcolumnComparator != null)   dout.writeUTF(cfm.subcolumnComparator.getClass().getName());
  dout.writeUTF(cfm.reconciler.getClass().getName());
  dout.writeBoolean(cfm.comment != null);
  if (cfm.comment != null)   dout.writeUTF(cfm.comment);
  dout.writeDouble(cfm.rowCacheSize);
  dout.writeBoolean(cfm.preloadRowCache);
  dout.writeDouble(cfm.keyCacheSize);
  dout.writeDouble(cfm.readRepairChance);
  dout.writeInt(cfm.cfId);
  dout.writeInt(cfm.column_metadata.size());
  for (  ColumnDefinition cd : cfm.column_metadata.values()) {
    byte[] cdBytes=ColumnDefinition.serialize(cd);
    dout.writeInt(cdBytes.length);
    dout.write(cdBytes);
  }
  dout.close();
  return bout.toByteArray();
}
