{
  org.apache.cassandra.db.migration.avro.CfDef def=new org.apache.cassandra.db.migration.avro.CfDef();
  def.name=cfm.cfName;
  def.keyspace=cfm.ksName;
  def.id=cfm.cfId;
  def.column_type=cfm.cfType.name();
  def.comparator_type=cfm.comparator.getClass().getName();
  if (cfm.subcolumnComparator != null) {
    def.subcomparator_type=cfm.subcolumnComparator.getClass().getName();
    def.column_type="Super";
  }
  def.comment=enforceCommentNotNull(cfm.comment);
  def.row_cache_size=cfm.rowCacheSize;
  def.key_cache_size=cfm.keyCacheSize;
  def.read_repair_chance=cfm.readRepairChance;
  def.replicate_on_write=cfm.replicateOnWrite;
  def.gc_grace_seconds=cfm.gcGraceSeconds;
  def.default_validation_class=cfm.defaultValidator == null ? null : cfm.defaultValidator.getClass().getName();
  def.min_compaction_threshold=cfm.minCompactionThreshold;
  def.max_compaction_threshold=cfm.maxCompactionThreshold;
  def.row_cache_save_period_in_seconds=cfm.rowCacheSavePeriodInSeconds;
  def.key_cache_save_period_in_seconds=cfm.keyCacheSavePeriodInSeconds;
  def.memtable_flush_after_mins=cfm.memtableFlushAfterMins;
  def.memtable_throughput_in_mb=cfm.memtableThroughputInMb;
  def.memtable_operations_in_millions=cfm.memtableOperationsInMillions;
  def.merge_shards_chance=cfm.mergeShardsChance;
  def.key_validation_class=cfm.keyValidator.getClass().getName();
  List<org.apache.cassandra.db.migration.avro.ColumnDef> column_meta=new ArrayList<org.apache.cassandra.db.migration.avro.ColumnDef>(cfm.column_metadata.size());
  for (  ColumnDefinition cd : cfm.column_metadata.values()) {
    org.apache.cassandra.db.migration.avro.ColumnDef tcd=new org.apache.cassandra.db.migration.avro.ColumnDef();
    tcd.index_name=cd.getIndexName();
    tcd.index_type=cd.getIndexType() == null ? null : org.apache.cassandra.db.migration.avro.IndexType.valueOf(cd.getIndexType().name());
    tcd.name=ByteBufferUtil.clone(cd.name);
    tcd.validation_class=cd.validator.getClass().getName();
    column_meta.add(tcd);
  }
  def.column_metadata=column_meta;
  def.row_cache_provider=new Utf8(cfm.rowCacheProvider.getClass().getName());
  return def;
}
