{
  AbstractType comparator;
  AbstractType subcolumnComparator=null;
  AbstractType validator;
  try {
    comparator=DatabaseDescriptor.getComparator(cf.comparator_type.toString());
    if (cf.subcomparator_type != null)     subcolumnComparator=DatabaseDescriptor.getComparator(cf.subcomparator_type.toString());
    validator=cf.default_validation_class == null ? BytesType.instance : DatabaseDescriptor.getComparator(cf.default_validation_class.toString());
  }
 catch (  Exception ex) {
    throw new RuntimeException("Could not inflate CFMetaData for " + cf,ex);
  }
  Map<byte[],ColumnDefinition> column_metadata=new TreeMap<byte[],ColumnDefinition>(FBUtilities.byteArrayComparator);
  for (  ColumnDef aColumn_metadata : cf.column_metadata) {
    ColumnDefinition cd=ColumnDefinition.inflate(aColumn_metadata);
    column_metadata.put(cd.name,cd);
  }
  Integer minct=cf.min_compaction_threshold == null ? DEFAULT_MIN_COMPACTION_THRESHOLD : cf.min_compaction_threshold;
  Integer maxct=cf.max_compaction_threshold == null ? DEFAULT_MAX_COMPACTION_THRESHOLD : cf.max_compaction_threshold;
  return new CFMetaData(cf.keyspace.toString(),cf.name.toString(),ColumnFamilyType.create(cf.column_type.toString()),ClockType.Timestamp,comparator,subcolumnComparator,TimestampReconciler.instance,cf.comment.toString(),cf.row_cache_size,cf.preload_row_cache,cf.key_cache_size,cf.read_repair_chance,cf.gc_grace_seconds,validator,minct,maxct,cf.id,column_metadata);
}
