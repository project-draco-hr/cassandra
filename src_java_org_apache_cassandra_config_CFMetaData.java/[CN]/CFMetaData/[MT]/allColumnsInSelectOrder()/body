{
  final boolean isStaticCompactTable=isStaticCompactTable();
  final boolean noNonPkColumns=isCompactTable() && CompactTables.hasEmptyCompactValue(this);
  return new AbstractIterator<ColumnDefinition>(){
    private final Iterator<ColumnDefinition> partitionKeyIter=partitionKeyColumns.iterator();
    private final Iterator<ColumnDefinition> clusteringIter=isStaticCompactTable ? Collections.<ColumnDefinition>emptyIterator() : clusteringColumns.iterator();
    private final Iterator<ColumnDefinition> otherColumns=noNonPkColumns ? Collections.<ColumnDefinition>emptyIterator() : (isStaticCompactTable ? partitionColumns.statics.selectOrderIterator() : partitionColumns.selectOrderIterator());
    protected ColumnDefinition computeNext(){
      if (partitionKeyIter.hasNext())       return partitionKeyIter.next();
      if (clusteringIter.hasNext())       return clusteringIter.next();
      return otherColumns.hasNext() ? otherColumns.next() : endOfData();
    }
  }
;
}
