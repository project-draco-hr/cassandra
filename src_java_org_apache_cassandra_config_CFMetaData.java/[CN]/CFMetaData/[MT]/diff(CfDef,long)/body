{
  CfDef curState=toThrift();
  RowMutation m=new RowMutation(Table.SYSTEM_TABLE,SystemTable.getSchemaKSKey(ksName));
  for (  CfDef._Fields field : CfDef._Fields.values()) {
    if (field.equals(CfDef._Fields.COLUMN_METADATA))     continue;
    Object curValue=curState.isSet(field) ? curState.getFieldValue(field) : null;
    Object newValue=newState.isSet(field) ? newState.getFieldValue(field) : null;
    if (Objects.equal(curValue,newValue))     continue;
    m.add(new QueryPath(SystemTable.SCHEMA_COLUMNFAMILIES_CF,null,compositeNameFor(curState.name,field.getFieldName())),valueAsBytes(newValue),modificationTimestamp);
  }
  AbstractType nameComparator=cfType.equals(ColumnFamilyType.Super) ? subcolumnComparator : comparator;
  MapDifference<ByteBuffer,ColumnDefinition> columnDiff=Maps.difference(column_metadata,ColumnDefinition.fromThrift(newState.column_metadata));
  Map<ByteBuffer,ColumnDef> columnDefMap=ColumnDefinition.toMap(newState.column_metadata);
  for (  ByteBuffer name : columnDiff.entriesOnlyOnLeft().keySet())   ColumnDefinition.deleteFromSchema(m,curState.name,nameComparator,name,modificationTimestamp);
  for (  ByteBuffer name : columnDiff.entriesOnlyOnRight().keySet())   ColumnDefinition.addToSchema(m,curState.name,nameComparator,columnDefMap.get(name),modificationTimestamp);
  for (  ByteBuffer name : columnDiff.entriesDiffering().keySet())   ColumnDefinition.addToSchema(m,curState.name,nameComparator,columnDefMap.get(name),modificationTimestamp);
  return m;
}
