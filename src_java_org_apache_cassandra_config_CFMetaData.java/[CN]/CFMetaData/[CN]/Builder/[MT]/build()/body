{
  if (tableId == null)   tableId=UUIDGen.getTimeUUID();
  List<ColumnDefinition> partitions=new ArrayList<>(partitionKeys.size());
  List<ColumnDefinition> clusterings=new ArrayList<>(clusteringColumns.size());
  PartitionColumns.Builder builder=PartitionColumns.builder();
  for (int i=0; i < partitionKeys.size(); i++) {
    Pair<ColumnIdentifier,AbstractType> p=partitionKeys.get(i);
    Integer componentIndex=partitionKeys.size() == 1 ? null : i;
    partitions.add(new ColumnDefinition(keyspace,table,p.left,p.right,componentIndex,ColumnDefinition.Kind.PARTITION_KEY));
  }
  for (int i=0; i < clusteringColumns.size(); i++) {
    Pair<ColumnIdentifier,AbstractType> p=clusteringColumns.get(i);
    clusterings.add(new ColumnDefinition(keyspace,table,p.left,p.right,i,ColumnDefinition.Kind.CLUSTERING));
  }
  for (int i=0; i < regularColumns.size(); i++) {
    Pair<ColumnIdentifier,AbstractType> p=regularColumns.get(i);
    builder.add(new ColumnDefinition(keyspace,table,p.left,p.right,null,ColumnDefinition.Kind.REGULAR));
  }
  for (int i=0; i < staticColumns.size(); i++) {
    Pair<ColumnIdentifier,AbstractType> p=staticColumns.get(i);
    builder.add(new ColumnDefinition(keyspace,table,p.left,p.right,null,ColumnDefinition.Kind.STATIC));
  }
  return new CFMetaData(keyspace,table,tableId,isSuper,isCounter,isDense,isCompound,isMaterializedView,partitions,clusterings,builder.build());
}
