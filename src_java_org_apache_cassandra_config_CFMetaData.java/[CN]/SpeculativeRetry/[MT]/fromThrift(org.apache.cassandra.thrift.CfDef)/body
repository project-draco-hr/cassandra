{
  ColumnFamilyType cfType=ColumnFamilyType.create(cf_def.column_type);
  if (cfType == null) {
    throw new InvalidRequestException("Invalid column type " + cf_def.column_type);
  }
  applyImplicitDefaults(cf_def);
  try {
    CFMetaData newCFMD=new CFMetaData(cf_def.keyspace,cf_def.name,cfType,TypeParser.parse(cf_def.comparator_type),cf_def.subcomparator_type == null ? null : TypeParser.parse(cf_def.subcomparator_type));
    if (cf_def.isSetGc_grace_seconds()) {
      newCFMD.gcGraceSeconds(cf_def.gc_grace_seconds);
    }
    if (cf_def.isSetMin_compaction_threshold()) {
      newCFMD.minCompactionThreshold(cf_def.min_compaction_threshold);
    }
    if (cf_def.isSetMax_compaction_threshold()) {
      newCFMD.maxCompactionThreshold(cf_def.max_compaction_threshold);
    }
    if (cf_def.isSetCompaction_strategy())     newCFMD.compactionStrategyClass=createCompactionStrategy(cf_def.compaction_strategy);
    if (cf_def.isSetCompaction_strategy_options())     newCFMD.compactionStrategyOptions(new HashMap<String,String>(cf_def.compaction_strategy_options));
    if (cf_def.isSetBloom_filter_fp_chance())     newCFMD.bloomFilterFpChance(cf_def.bloom_filter_fp_chance);
    if (cf_def.isSetMemtable_flush_period_in_ms())     newCFMD.memtableFlushPeriod(cf_def.memtable_flush_period_in_ms);
    if (cf_def.isSetCaching())     newCFMD.caching(Caching.fromString(cf_def.caching));
    if (cf_def.isSetRead_repair_chance())     newCFMD.readRepairChance(cf_def.read_repair_chance);
    if (cf_def.isSetDefault_time_to_live())     newCFMD.defaultTimeToLive(cf_def.default_time_to_live);
    if (cf_def.isSetDclocal_read_repair_chance())     newCFMD.dcLocalReadRepairChance(cf_def.dclocal_read_repair_chance);
    if (cf_def.isSetIndex_interval())     newCFMD.indexInterval(cf_def.index_interval);
    if (cf_def.isSetSpeculative_retry())     newCFMD.speculativeRetry(SpeculativeRetry.fromString(cf_def.speculative_retry));
    if (cf_def.isSetPopulate_io_cache_on_flush())     newCFMD.populateIoCacheOnFlush(cf_def.populate_io_cache_on_flush);
    CompressionParameters cp=CompressionParameters.create(cf_def.compression_options);
    if (cf_def.isSetKey_validation_class()) {
      newCFMD.keyValidator(TypeParser.parse(cf_def.key_validation_class));
    }
    if (cf_def.isSetKey_alias() && !(newCFMD.keyValidator instanceof CompositeType)) {
      newCFMD.column_metadata.put(cf_def.key_alias,ColumnDefinition.partitionKeyDef(cf_def.key_alias,newCFMD.keyValidator,null));
    }
    return newCFMD.comment(cf_def.comment).replicateOnWrite(cf_def.replicate_on_write).defaultValidator(TypeParser.parse(cf_def.default_validation_class)).columnMetadata(ColumnDefinition.fromThrift(cf_def.column_metadata,newCFMD.isSuper())).compressionParameters(cp).updateCfDef();
  }
 catch (  SyntaxException e) {
    throw new ConfigurationException(e.getMessage());
  }
catch (  MarshalException e) {
    throw new ConfigurationException(e.getMessage());
  }
}
