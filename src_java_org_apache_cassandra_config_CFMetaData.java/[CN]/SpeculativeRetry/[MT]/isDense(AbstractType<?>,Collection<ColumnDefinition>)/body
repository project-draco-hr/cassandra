{
  boolean hasRegular=false;
  int maxClusteringIdx=-1;
  for (  ColumnDefinition def : defs) {
switch (def.kind) {
case CLUSTERING_COLUMN:
      maxClusteringIdx=Math.max(maxClusteringIdx,def.position());
    break;
case REGULAR:
  hasRegular=true;
break;
}
}
return maxClusteringIdx >= 0 ? maxClusteringIdx == comparator.componentsCount() - 1 : !hasRegular && !isCQL3OnlyPKComparator(comparator);
}
