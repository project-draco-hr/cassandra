{
  final SlicePredicate predicate=new SlicePredicate().setSlice_range(new SliceRange(ByteBufferUtil.EMPTY_BYTE_BUFFER,ByteBufferUtil.EMPTY_BYTE_BUFFER,false,state.settings.columns.maxColumnsPerKey));
  final ByteBuffer start=getKey();
  final KeyRange range=new KeyRange(state.settings.columns.maxColumnsPerKey).setStart_key(start).setEnd_key(ByteBufferUtil.EMPTY_BYTE_BUFFER).setCount(((SettingsCommandMulti)state.settings.command).keysAtOnce);
  for (  final ColumnParent parent : state.columnParents) {
    timeWithRetry(new RunOp(){
      private int count=0;
      @Override public boolean run() throws Exception {
        return (count=client.get_range_slices(parent,predicate,range,state.settings.command.consistencyLevel).size()) != 0;
      }
      @Override public String key(){
        return new String(range.bufferForStart_key().array());
      }
      @Override public int keyCount(){
        return count;
      }
    }
);
  }
}
