{
  int depth=clusteringComponents.length - 1;
  long parentSeed=clusteringSeeds[depth];
  long rowSeed=seed(clusteringComponents[depth].peek(),generator.clusteringComponents.get(depth).type,parentSeed);
  Row result=row.copy();
  double valueColumn=0.0;
  for (int i=clusteringSeeds.length; i < row.row.length; i++) {
    Generator gen=generator.valueComponents.get(i - clusteringSeeds.length);
    if (++valueColumn / totalValueColumns > rowPopulationRatio) {
      result.row[i]=null;
    }
 else {
      gen.setSeed(rowSeed);
      result.row[i]=gen.generate();
    }
  }
  setHasNext(advance(depth,false));
  return result;
}
