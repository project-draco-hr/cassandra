{
  CommandLineParser parser=new GnuParser();
  try {
    CommandLine cmd=parser.parse(options,args,false);
    if (cmd.hasOption(HOST_OPTION)) {
      css.hostName=cmd.getOptionValue(HOST_OPTION);
    }
 else {
      css.hostName=DEFAULT_HOST;
    }
    if (cmd.hasOption(UNFRAME_OPTION)) {
      css.framed=false;
    }
    if (cmd.hasOption(DEBUG_OPTION)) {
      css.debug=true;
    }
    if (cmd.hasOption(PORT_OPTION)) {
      css.thriftPort=Integer.parseInt(cmd.getOptionValue(PORT_OPTION));
    }
 else {
      css.thriftPort=DEFAULT_THRIFT_PORT;
    }
    if (cmd.hasOption(USERNAME_OPTION)) {
      css.username=cmd.getOptionValue(USERNAME_OPTION);
    }
 else {
      css.username="default";
    }
    if (cmd.hasOption(PASSWORD_OPTION)) {
      css.password=cmd.getOptionValue(PASSWORD_OPTION);
    }
 else {
      css.password="";
    }
    if (cmd.hasOption(KEYSPACE_OPTION)) {
      css.keyspace=cmd.getOptionValue(KEYSPACE_OPTION);
    }
    if (cmd.hasOption(BATCH_OPTION)) {
      css.batch=true;
    }
    if (cmd.hasOption(FILE_OPTION)) {
      css.filename=cmd.getOptionValue(FILE_OPTION);
    }
    if (cmd.hasOption(JMX_PORT_OPTION)) {
      css.jmxPort=Integer.parseInt(cmd.getOptionValue(JMX_PORT_OPTION));
    }
    if (cmd.hasOption(HELP_OPTION)) {
      printUsage();
      System.exit(1);
    }
    if (cmd.hasOption(VERBOSE_OPTION)) {
      css.verbose=true;
    }
    if (cmd.hasOption(SCHEMA_MIGRATION_WAIT_TIME)) {
      css.schema_mwt=Integer.parseInt(cmd.getOptionValue(SCHEMA_MIGRATION_WAIT_TIME)) * 1000;
    }
    if (cmd.getArgs().length > 0) {
      System.err.printf("Unknown argument: %s\n",cmd.getArgs()[0]);
      System.err.println();
      printUsage();
      System.exit(1);
    }
  }
 catch (  ParseException e) {
    System.err.println(e.getMessage());
    System.err.println();
    printUsage();
    System.exit(1);
  }
}
