{
  if (term.remaining() == 0)   return null;
  try {
    if (validator instanceof Int32Type && term.remaining() == 2) {
      return Int32Type.instance.decompose((int)term.getShort(term.position()));
    }
 else     if (validator instanceof LongType) {
      long upcastToken;
switch (term.remaining()) {
case 2:
        upcastToken=(long)term.getShort(term.position());
      break;
case 4:
    upcastToken=(long)Int32Type.instance.compose(term);
  break;
default :
upcastToken=Long.valueOf(UTF8Type.instance.getString(term));
}
return LongType.instance.decompose(upcastToken);
}
 else if (validator instanceof DoubleType && term.remaining() == 4) {
return DoubleType.instance.decompose((double)FloatType.instance.compose(term));
}
return validator.fromString(UTF8Type.instance.getString(term));
}
 catch (Exception e) {
return null;
}
}
