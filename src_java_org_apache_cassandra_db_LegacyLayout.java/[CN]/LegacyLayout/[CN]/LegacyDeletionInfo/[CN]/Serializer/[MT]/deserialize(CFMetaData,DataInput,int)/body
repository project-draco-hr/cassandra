{
  DeletionTime topLevel=DeletionTime.serializer.deserialize(in);
  int rangeCount=in.readInt();
  if (rangeCount == 0)   return from(new DeletionInfo(topLevel));
  RangeTombstoneList ranges=new RangeTombstoneList(metadata.comparator,rangeCount);
  List<LegacyRangeTombstone> inRowTombsones=new ArrayList<>();
  for (int i=0; i < rangeCount; i++) {
    LegacyBound start=decodeBound(metadata,ByteBufferUtil.readWithShortLength(in),true);
    LegacyBound end=decodeBound(metadata,ByteBufferUtil.readWithShortLength(in),false);
    int delTime=in.readInt();
    long markedAt=in.readLong();
    LegacyRangeTombstone tombstone=new LegacyRangeTombstone(start,end,new SimpleDeletionTime(markedAt,delTime));
    if (tombstone.isCollectionTombstone() || tombstone.isRowDeletion(metadata))     inRowTombsones.add(tombstone);
 else     ranges.add(start.bound,end.bound,markedAt,delTime);
  }
  return new LegacyDeletionInfo(new DeletionInfo(topLevel,ranges),inRowTombsones);
}
