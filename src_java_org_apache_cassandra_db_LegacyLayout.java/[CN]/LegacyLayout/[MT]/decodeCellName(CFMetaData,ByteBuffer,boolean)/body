{
  Clustering clustering=decodeClustering(metadata,cellname);
  if (metadata.isSuper())   return decodeForSuperColumn(metadata,clustering,CompositeType.extractComponent(cellname,1));
  if (metadata.isDense() || (metadata.isCompactTable() && readAllAsDynamic))   return new LegacyCellName(clustering,metadata.compactValueColumn(),null);
  ByteBuffer column=metadata.isCompound() ? CompositeType.extractComponent(cellname,metadata.comparator.size()) : cellname;
  if (column == null)   throw new IllegalArgumentException("No column name component found in cell name");
  if (!column.hasRemaining())   return new LegacyCellName(clustering,null,null);
  ColumnDefinition def=metadata.getColumnDefinition(column);
  if (def == null) {
    if (metadata.isCompactTable())     return new LegacyCellName(new Clustering(column),metadata.compactValueColumn(),null);
    throw new UnknownColumnException(metadata,column);
  }
  ByteBuffer collectionElement=metadata.isCompound() ? CompositeType.extractComponent(cellname,metadata.comparator.size() + 1) : null;
  return new LegacyCellName(def.isStatic() ? Clustering.STATIC_CLUSTERING : clustering,def,collectionElement);
}
