{
  Collections.sort(points);
  IntervalTree<I,V,Interval<I,V>> tree=IntervalTree.build(intervals);
  OverlapIterator<I,V> iter=new OverlapIterator<>(intervals);
  int initPoint=points.size() / initCount;
  int i=0;
  for (  I point : points) {
    if (i++ == initPoint)     iter=new OverlapIterator<>(intervals);
    iter.update(point);
    TreeSet<V> act=new TreeSet<>(iter.overlaps);
    TreeSet<V> exp=new TreeSet<>(tree.search(point));
    TreeSet<V> extra=new TreeSet<>(act);
    extra.removeAll(exp);
    TreeSet<V> missing=new TreeSet<>(exp);
    missing.removeAll(act);
    assertTrue(extra.isEmpty());
    assertTrue(missing.isEmpty());
  }
}
