{
  Iterator<InetAddress> hostiter=hosts.iterator();
  while (hostiter.hasNext()) {
    try {
      InetAddress host=hostiter.next();
      Cassandra.Client client=createThriftClient(host.getHostAddress(),rpcPort);
      List<TokenRange> tokenRanges=client.describe_ring(keyspace);
      List<KsDef> ksDefs=client.describe_keyspaces();
      setPartitioner(client.describe_partitioner());
      Token.TokenFactory tkFactory=getPartitioner().getTokenFactory();
      for (      TokenRange tr : tokenRanges) {
        Range range=new Range(tkFactory.fromString(tr.start_token),tkFactory.fromString(tr.end_token));
        for (        String ep : tr.endpoints) {
          addRangeForEndpoint(range,InetAddress.getByName(ep));
        }
      }
      for (      KsDef ksDef : ksDefs) {
        Set<String> cfs=new HashSet<String>();
        for (        CfDef cfDef : ksDef.cf_defs)         cfs.add(cfDef.name);
        knownCfs.put(ksDef.name,cfs);
      }
      break;
    }
 catch (    Exception e) {
      if (!hostiter.hasNext())       throw new RuntimeException("Could not retrieve endpoint ranges: ",e);
    }
  }
}
