{
  Map<String,String> options=new HashMap<>();
  if (transportFactory.supportedOptions().contains(SSLTransportFactory.TRUSTSTORE))   options.put(SSLTransportFactory.TRUSTSTORE,opts.encOptions.truststore);
  if (transportFactory.supportedOptions().contains(SSLTransportFactory.TRUSTSTORE_PASSWORD))   options.put(SSLTransportFactory.TRUSTSTORE_PASSWORD,opts.encOptions.truststore_password);
  if (transportFactory.supportedOptions().contains(SSLTransportFactory.PROTOCOL))   options.put(SSLTransportFactory.PROTOCOL,opts.encOptions.protocol);
  if (transportFactory.supportedOptions().contains(SSLTransportFactory.CIPHER_SUITES))   options.put(SSLTransportFactory.CIPHER_SUITES,Joiner.on(',').join(opts.encOptions.cipher_suites));
  if (transportFactory.supportedOptions().contains(SSLTransportFactory.KEYSTORE) && opts.encOptions.require_client_auth)   options.put(SSLTransportFactory.KEYSTORE,opts.encOptions.keystore);
  if (transportFactory.supportedOptions().contains(SSLTransportFactory.KEYSTORE_PASSWORD) && opts.encOptions.require_client_auth)   options.put(SSLTransportFactory.KEYSTORE_PASSWORD,opts.encOptions.keystore_password);
  for (  String optionKey : transportFactory.supportedOptions())   if (System.getProperty(optionKey) != null)   options.put(optionKey,System.getProperty(optionKey));
  transportFactory.setOptions(options);
}
