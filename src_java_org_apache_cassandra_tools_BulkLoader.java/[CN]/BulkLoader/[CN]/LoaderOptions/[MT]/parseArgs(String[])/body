{
  CommandLineParser parser=new GnuParser();
  CmdLineOptions options=getCmdLineOptions();
  try {
    CommandLine cmd=parser.parse(options,cmdArgs,false);
    if (cmd.hasOption(HELP_OPTION)) {
      printUsage(options);
      System.exit(0);
    }
    String[] args=cmd.getArgs();
    if (args.length == 0) {
      System.err.println("Missing sstable directory argument");
      printUsage(options);
      System.exit(1);
    }
    if (args.length > 1) {
      System.err.println("Too many arguments");
      printUsage(options);
      System.exit(1);
    }
    String dirname=args[0];
    File dir=new File(dirname);
    if (!dir.exists())     errorMsg("Unknown directory: " + dirname,options);
    if (!dir.isDirectory())     errorMsg(dirname + " is not a directory",options);
    LoaderOptions opts=new LoaderOptions(dir);
    opts.verbose=cmd.hasOption(VERBOSE_OPTION);
    opts.noProgress=cmd.hasOption(NOPROGRESS_OPTION);
    if (cmd.hasOption(NATIVE_PORT_OPTION))     opts.nativePort=Integer.parseInt(cmd.getOptionValue(NATIVE_PORT_OPTION));
    if (cmd.hasOption(USER_OPTION))     opts.user=cmd.getOptionValue(USER_OPTION);
    if (cmd.hasOption(PASSWD_OPTION))     opts.passwd=cmd.getOptionValue(PASSWD_OPTION);
    if (cmd.hasOption(INITIAL_HOST_ADDRESS_OPTION)) {
      String[] nodes=cmd.getOptionValue(INITIAL_HOST_ADDRESS_OPTION).split(",");
      try {
        for (        String node : nodes) {
          opts.hosts.add(InetAddress.getByName(node.trim()));
        }
      }
 catch (      UnknownHostException e) {
        errorMsg("Unknown host: " + e.getMessage(),options);
      }
    }
 else {
      System.err.println("Initial hosts must be specified (-d)");
      printUsage(options);
      System.exit(1);
    }
    if (cmd.hasOption(IGNORE_NODES_OPTION)) {
      String[] nodes=cmd.getOptionValue(IGNORE_NODES_OPTION).split(",");
      try {
        for (        String node : nodes) {
          opts.ignores.add(InetAddress.getByName(node.trim()));
        }
      }
 catch (      UnknownHostException e) {
        errorMsg("Unknown host: " + e.getMessage(),options);
      }
    }
    if (cmd.hasOption(CONNECTIONS_PER_HOST))     opts.connectionsPerHost=Integer.parseInt(cmd.getOptionValue(CONNECTIONS_PER_HOST));
    Config config;
    if (cmd.hasOption(CONFIG_PATH)) {
      File configFile=new File(cmd.getOptionValue(CONFIG_PATH));
      if (!configFile.exists()) {
        errorMsg("Config file not found",options);
      }
      config=new YamlConfigurationLoader().loadConfig(configFile.toURI().toURL());
    }
 else {
      config=new Config();
      config.stream_throughput_outbound_megabits_per_sec=0;
      config.inter_dc_stream_throughput_outbound_megabits_per_sec=0;
    }
    opts.storagePort=config.storage_port;
    opts.sslStoragePort=config.ssl_storage_port;
    opts.throttle=config.stream_throughput_outbound_megabits_per_sec;
    opts.interDcThrottle=config.inter_dc_stream_throughput_outbound_megabits_per_sec;
    opts.clientEncOptions=config.client_encryption_options;
    opts.serverEncOptions=config.server_encryption_options;
    if (cmd.hasOption(THROTTLE_MBITS)) {
      opts.throttle=Integer.parseInt(cmd.getOptionValue(THROTTLE_MBITS));
    }
    if (cmd.hasOption(INTER_DC_THROTTLE_MBITS)) {
      opts.interDcThrottle=Integer.parseInt(cmd.getOptionValue(INTER_DC_THROTTLE_MBITS));
    }
    if (cmd.hasOption(SSL_TRUSTSTORE) || cmd.hasOption(SSL_TRUSTSTORE_PW) || cmd.hasOption(SSL_KEYSTORE)|| cmd.hasOption(SSL_KEYSTORE_PW)) {
      opts.clientEncOptions.enabled=true;
    }
    if (cmd.hasOption(SSL_TRUSTSTORE)) {
      opts.clientEncOptions.truststore=cmd.getOptionValue(SSL_TRUSTSTORE);
    }
    if (cmd.hasOption(SSL_TRUSTSTORE_PW)) {
      opts.clientEncOptions.truststore_password=cmd.getOptionValue(SSL_TRUSTSTORE_PW);
    }
    if (cmd.hasOption(SSL_KEYSTORE)) {
      opts.clientEncOptions.keystore=cmd.getOptionValue(SSL_KEYSTORE);
      opts.clientEncOptions.require_client_auth=true;
    }
    if (cmd.hasOption(SSL_KEYSTORE_PW)) {
      opts.clientEncOptions.keystore_password=cmd.getOptionValue(SSL_KEYSTORE_PW);
    }
    if (cmd.hasOption(SSL_PROTOCOL)) {
      opts.clientEncOptions.protocol=cmd.getOptionValue(SSL_PROTOCOL);
    }
    if (cmd.hasOption(SSL_ALGORITHM)) {
      opts.clientEncOptions.algorithm=cmd.getOptionValue(SSL_ALGORITHM);
    }
    if (cmd.hasOption(SSL_STORE_TYPE)) {
      opts.clientEncOptions.store_type=cmd.getOptionValue(SSL_STORE_TYPE);
    }
    if (cmd.hasOption(SSL_CIPHER_SUITES)) {
      opts.clientEncOptions.cipher_suites=cmd.getOptionValue(SSL_CIPHER_SUITES).split(",");
    }
    return opts;
  }
 catch (  ParseException|ConfigurationException|MalformedURLException e) {
    errorMsg(e.getMessage(),options);
    return null;
  }
}
