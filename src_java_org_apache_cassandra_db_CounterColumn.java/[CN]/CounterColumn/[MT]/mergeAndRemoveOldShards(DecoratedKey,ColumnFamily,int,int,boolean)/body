{
  ColumnFamily remoteMerger=null;
  for (  Column c : cf) {
    if (!(c instanceof CounterColumn))     continue;
    CounterColumn cc=(CounterColumn)c;
    CounterColumn shardMerger=cc.computeOldShardMerger(mergeBefore);
    CounterColumn merged=cc;
    if (shardMerger != null) {
      merged=(CounterColumn)cc.reconcile(shardMerger);
      if (remoteMerger == null)       remoteMerger=cf.cloneMeShallow();
      remoteMerger.addColumn(merged);
    }
    CounterColumn cleaned=merged.removeOldShards(gcBefore);
    if (cleaned != cc) {
      cf.replace(cc,cleaned);
    }
  }
  if (remoteMerger != null && sendToOtherReplica) {
    try {
      sendToOtherReplica(key,remoteMerger);
    }
 catch (    Exception e) {
      logger.error("Error while sending shard merger mutation to remote endpoints",e);
    }
  }
}
