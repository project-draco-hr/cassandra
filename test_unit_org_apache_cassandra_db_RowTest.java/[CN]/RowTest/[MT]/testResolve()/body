{
  ColumnDefinition defA=cfm.getColumnDefinition(new ColumnIdentifier("a",true));
  ColumnDefinition defB=cfm.getColumnDefinition(new ColumnIdentifier("b",true));
  Row.Builder builder=BTreeRow.unsortedBuilder(cfm.partitionColumns().regulars,nowInSeconds);
  builder.newRow(cfm.comparator.make("c1"));
  writeSimpleCellValue(builder,cfm,defA,"a1",0);
  writeSimpleCellValue(builder,cfm,defA,"a2",1);
  writeSimpleCellValue(builder,cfm,defB,"b1",1);
  Row row=builder.build();
  PartitionUpdate update=PartitionUpdate.singleRowUpdate(cfm,dk,row);
  Unfiltered unfiltered=update.unfilteredIterator().next();
  assertTrue(unfiltered.kind() == Unfiltered.Kind.ROW);
  row=(Row)unfiltered;
  assertEquals("a2",defA.cellValueType().getString(row.getCell(defA).value()));
  assertEquals("b1",defB.cellValueType().getString(row.getCell(defB).value()));
  assertEquals(2,row.columns().columnCount());
}
