{
  ColumnDefinition defA=cfm.getColumnDefinition(new ColumnIdentifier("a",true));
  ColumnDefinition defB=cfm.getColumnDefinition(new ColumnIdentifier("b",true));
  PartitionUpdate update=new PartitionUpdate(cfm,dk,cfm.partitionColumns(),1);
  Rows.writeClustering(update.metadata().comparator.make("c1"),update.writer());
  writeSimpleCellValue(update.writer(),cfm,defA,"a1",0,nowInSeconds);
  writeSimpleCellValue(update.writer(),cfm,defA,"a2",1,nowInSeconds);
  writeSimpleCellValue(update.writer(),cfm,defB,"b1",1,nowInSeconds);
  update.writer().endOfRow();
  Unfiltered unfiltered=update.unfilteredIterator().next();
  assertTrue(unfiltered.kind() == Unfiltered.Kind.ROW);
  Row row=(Row)unfiltered;
  assertEquals("a2",defA.cellValueType().getString(row.getCell(defA).value()));
  assertEquals("b1",defB.cellValueType().getString(row.getCell(defB).value()));
  assertEquals(2,row.columns().columnCount());
}
