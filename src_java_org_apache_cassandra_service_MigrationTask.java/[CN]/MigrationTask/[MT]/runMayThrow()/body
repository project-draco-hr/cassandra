{
  MessageOut message=new MessageOut(MessagingService.Verb.MIGRATION_REQUEST,null,MigrationManager.MigrationsSerializer.instance);
  int retries=0;
  while (retries < MigrationManager.MIGRATION_REQUEST_RETRIES) {
    if (!FailureDetector.instance.isAlive(endpoint)) {
      logger.error("Can't send migration request: node {} is down.",endpoint);
      return;
    }
    IAsyncResult<Collection<RowMutation>> iar=MessagingService.instance().sendRR(message,endpoint);
    try {
      Collection<RowMutation> schema=iar.get(DatabaseDescriptor.getRpcTimeout(),TimeUnit.MILLISECONDS);
      DefsTable.mergeSchema(schema);
      return;
    }
 catch (    TimeoutException e) {
      retries++;
    }
  }
}
