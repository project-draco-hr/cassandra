{
  int replicas=getReplicationFactor();
  List<InetAddress> endpoints=new ArrayList<InetAddress>(replicas);
  ArrayList<Token> tokens=metadata.sortedTokens();
  if (tokens.isEmpty())   return endpoints;
  Iterator<Token> iter=TokenMetadata.ringIterator(tokens,token,false);
  Token primaryToken=iter.next();
  endpoints.add(metadata.getEndpoint(primaryToken));
  boolean bDataCenter=false;
  boolean bOtherRack=false;
  while (endpoints.size() < replicas && iter.hasNext()) {
    Token t=iter.next();
    if (!snitch.getDatacenter(metadata.getEndpoint(primaryToken)).equals(snitch.getDatacenter(metadata.getEndpoint(t)))) {
      if (!bDataCenter) {
        endpoints.add(metadata.getEndpoint(t));
        bDataCenter=true;
      }
      continue;
    }
    if (!snitch.getRack(metadata.getEndpoint(primaryToken)).equals(snitch.getRack(metadata.getEndpoint(t))) && snitch.getDatacenter(metadata.getEndpoint(primaryToken)).equals(snitch.getDatacenter(metadata.getEndpoint(t)))) {
      if (!bOtherRack) {
        endpoints.add(metadata.getEndpoint(t));
        bOtherRack=true;
      }
    }
  }
  if (endpoints.size() < replicas) {
    iter=TokenMetadata.ringIterator(tokens,token,false);
    while (endpoints.size() < replicas && iter.hasNext()) {
      Token t=iter.next();
      if (!endpoints.contains(metadata.getEndpoint(t)))       endpoints.add(metadata.getEndpoint(t));
    }
  }
  return endpoints;
}
