{
  Keyspace keyspace=Keyspace.open(KEYSPACE);
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(CF_SMALL_MAX_VALUE);
  truncate(cfs);
  File dir=cfs.getDirectories().getDirectoryForNewSSTables();
  LifecycleTransaction txn=LifecycleTransaction.offline(OperationType.STREAM);
  try (SSTableWriter writer1=getWriter(cfs,dir,txn)){
    UpdateBuilder largeValue=UpdateBuilder.create(cfs.metadata,"large_value").withTimestamp(1);
    largeValue.newRow("clustering").add("val",ByteBuffer.allocate(2 * 1024 * 1024));
    writer1.append(largeValue.build().unfilteredIterator());
    SSTableReader sstable=writer1.finish(true);
    txn.update(sstable,false);
    try {
      DecoratedKey dk=Util.dk("large_value");
      UnfilteredRowIterator rowIter=sstable.iterator(dk,ColumnFilter.all(cfs.metadata),false,false);
      while (rowIter.hasNext()) {
        rowIter.next();
      }
      fail("Expected a CorruptSSTableException to be thrown");
    }
 catch (    CorruptSSTableException e) {
    }
    txn.abort();
    LifecycleTransaction.waitForDeletions();
  }
 }
