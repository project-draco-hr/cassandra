{
  Map<Token,Float> ownerships=new HashMap<Token,Float>();
  Iterator<Token> i=sortedTokens.iterator();
  if (!i.hasNext())   throw new RuntimeException("No nodes present in the cluster. Has this node finished starting up?");
  if (sortedTokens.size() == 1)   ownerships.put((Token)i.next(),new Float(1.0));
 else {
    final BigInteger ri=BigInteger.valueOf(MAXIMUM).subtract(BigInteger.valueOf(MINIMUM.token + 1));
    final BigDecimal r=new BigDecimal(ri);
    Token start=i.next();
    BigInteger ti=BigInteger.valueOf(((LongToken)start).token);
    Token t;
    BigInteger tim1=ti;
    while (i.hasNext()) {
      t=(Token)i.next();
      ti=BigInteger.valueOf(((LongToken)t).token);
      float age=new BigDecimal(ti.subtract(tim1).add(ri).mod(ri)).divide(r,6,BigDecimal.ROUND_HALF_EVEN).floatValue();
      ownerships.put(t,age);
      tim1=ti;
    }
    float x=new BigDecimal(BigInteger.valueOf(((LongToken)start).token).subtract(ti).add(ri).mod(ri)).divide(r,6,BigDecimal.ROUND_HALF_EVEN).floatValue();
    ownerships.put(start,x);
  }
  return ownerships;
}
