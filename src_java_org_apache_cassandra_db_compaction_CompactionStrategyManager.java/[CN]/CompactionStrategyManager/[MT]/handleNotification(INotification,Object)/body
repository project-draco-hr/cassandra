{
  maybeReload(cfs.metadata);
  if (notification instanceof SSTableAddedNotification) {
    SSTableAddedNotification flushedNotification=(SSTableAddedNotification)notification;
    for (    SSTableReader sstable : flushedNotification.added)     getCompactionStrategyFor(sstable).addSSTable(sstable);
  }
 else   if (notification instanceof SSTableListChangedNotification) {
    SSTableListChangedNotification listChangedNotification=(SSTableListChangedNotification)notification;
    Directories.DataDirectory[] locations=cfs.getDirectories().getWriteableLocations();
    int locationSize=cfs.getPartitioner().splitter().isPresent() ? locations.length : 1;
    List<Set<SSTableReader>> repairedRemoved=new ArrayList<>(locationSize);
    List<Set<SSTableReader>> repairedAdded=new ArrayList<>(locationSize);
    List<Set<SSTableReader>> unrepairedRemoved=new ArrayList<>(locationSize);
    List<Set<SSTableReader>> unrepairedAdded=new ArrayList<>(locationSize);
    for (int i=0; i < locationSize; i++) {
      repairedRemoved.add(new HashSet<>());
      repairedAdded.add(new HashSet<>());
      unrepairedRemoved.add(new HashSet<>());
      unrepairedAdded.add(new HashSet<>());
    }
    for (    SSTableReader sstable : listChangedNotification.removed) {
      int i=getCompactionStrategyIndex(cfs,getDirectories(),sstable);
      if (sstable.isRepaired())       repairedRemoved.get(i).add(sstable);
 else       unrepairedRemoved.get(i).add(sstable);
    }
    for (    SSTableReader sstable : listChangedNotification.added) {
      int i=getCompactionStrategyIndex(cfs,getDirectories(),sstable);
      if (sstable.isRepaired())       repairedAdded.get(i).add(sstable);
 else       unrepairedAdded.get(i).add(sstable);
    }
    for (int i=0; i < locationSize; i++) {
      if (!repairedRemoved.get(i).isEmpty())       repaired.get(i).replaceSSTables(repairedRemoved.get(i),repairedAdded.get(i));
 else {
        for (        SSTableReader sstable : repairedAdded.get(i))         repaired.get(i).addSSTable(sstable);
      }
      if (!unrepairedRemoved.get(i).isEmpty())       unrepaired.get(i).replaceSSTables(unrepairedRemoved.get(i),unrepairedAdded.get(i));
 else {
        for (        SSTableReader sstable : unrepairedAdded.get(i))         unrepaired.get(i).addSSTable(sstable);
      }
    }
  }
 else   if (notification instanceof SSTableRepairStatusChanged) {
    for (    SSTableReader sstable : ((SSTableRepairStatusChanged)notification).sstable) {
      int index=getCompactionStrategyIndex(cfs,getDirectories(),sstable);
      if (sstable.isRepaired()) {
        unrepaired.get(index).removeSSTable(sstable);
        repaired.get(index).addSSTable(sstable);
      }
 else {
        repaired.get(index).removeSSTable(sstable);
        unrepaired.get(index).addSSTable(sstable);
      }
    }
  }
 else   if (notification instanceof SSTableDeletingNotification) {
    SSTableReader sstable=((SSTableDeletingNotification)notification).deleting;
    getCompactionStrategyFor(sstable).removeSSTable(sstable);
  }
}
