{
  System.out.printf("testLCS(lc=%d,lm=%d,o=%.2f,L0=%d*%d)\n",levelCount,levelMultiplier,levelOverlap,countOfL0,countOfL0 == 0 ? 0 : sizeOfL0 / countOfL0);
  final Random r=new Random();
  Reducer<Integer,Counted<Integer>> reducer=new Counter<Integer>();
  List<List<Integer>> lists=new LCSGenerator<Integer>(Ordering.<Integer>natural(),levelCount,levelMultiplier,levelOverlap){
    @Override public Integer newItem(){
      return r.nextInt();
    }
  }
.result;
  if (sizeOfL0 > 0 && countOfL0 > 0)   lists.addAll(new NaturalListGenerator<Integer>(countOfL0,sizeOfL0 / countOfL0){
    Integer next(){
      return r.nextInt();
    }
  }
.result);
  testMergeIterator(reducer,lists);
}
