{
  if (field == null) {
    throw new IllegalArgumentException();
  }
switch (field) {
case KEYSPACE:
    return isSetKeyspace();
case NAME:
  return isSetName();
case COLUMN_TYPE:
return isSetColumn_type();
case COMPARATOR_TYPE:
return isSetComparator_type();
case SUBCOMPARATOR_TYPE:
return isSetSubcomparator_type();
case COMMENT:
return isSetComment();
case READ_REPAIR_CHANCE:
return isSetRead_repair_chance();
case COLUMN_METADATA:
return isSetColumn_metadata();
case GC_GRACE_SECONDS:
return isSetGc_grace_seconds();
case DEFAULT_VALIDATION_CLASS:
return isSetDefault_validation_class();
case ID:
return isSetId();
case MIN_COMPACTION_THRESHOLD:
return isSetMin_compaction_threshold();
case MAX_COMPACTION_THRESHOLD:
return isSetMax_compaction_threshold();
case REPLICATE_ON_WRITE:
return isSetReplicate_on_write();
case MERGE_SHARDS_CHANCE:
return isSetMerge_shards_chance();
case KEY_VALIDATION_CLASS:
return isSetKey_validation_class();
case KEY_ALIAS:
return isSetKey_alias();
case COMPACTION_STRATEGY:
return isSetCompaction_strategy();
case COMPACTION_STRATEGY_OPTIONS:
return isSetCompaction_strategy_options();
case COMPRESSION_OPTIONS:
return isSetCompression_options();
case BLOOM_FILTER_FP_CHANCE:
return isSetBloom_filter_fp_chance();
case CACHING:
return isSetCaching();
}
throw new IllegalStateException();
}
