{
switch (field) {
case KEYSPACE:
    return getKeyspace();
case NAME:
  return getName();
case COLUMN_TYPE:
return getColumn_type();
case COMPARATOR_TYPE:
return getComparator_type();
case SUBCOMPARATOR_TYPE:
return getSubcomparator_type();
case COMMENT:
return getComment();
case READ_REPAIR_CHANCE:
return new Double(getRead_repair_chance());
case COLUMN_METADATA:
return getColumn_metadata();
case GC_GRACE_SECONDS:
return new Integer(getGc_grace_seconds());
case DEFAULT_VALIDATION_CLASS:
return getDefault_validation_class();
case ID:
return new Integer(getId());
case MIN_COMPACTION_THRESHOLD:
return new Integer(getMin_compaction_threshold());
case MAX_COMPACTION_THRESHOLD:
return new Integer(getMax_compaction_threshold());
case REPLICATE_ON_WRITE:
return new Boolean(isReplicate_on_write());
case MERGE_SHARDS_CHANCE:
return new Double(getMerge_shards_chance());
case KEY_VALIDATION_CLASS:
return getKey_validation_class();
case KEY_ALIAS:
return getKey_alias();
case COMPACTION_STRATEGY:
return getCompaction_strategy();
case COMPACTION_STRATEGY_OPTIONS:
return getCompaction_strategy_options();
case COMPRESSION_OPTIONS:
return getCompression_options();
case BLOOM_FILTER_FP_CHANCE:
return new Double(getBloom_filter_fp_chance());
}
throw new IllegalStateException();
}
