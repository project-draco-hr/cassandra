{
switch (fieldId) {
case 1:
    return KEYSPACE;
case 2:
  return NAME;
case 3:
return COLUMN_TYPE;
case 5:
return COMPARATOR_TYPE;
case 6:
return SUBCOMPARATOR_TYPE;
case 8:
return COMMENT;
case 12:
return READ_REPAIR_CHANCE;
case 13:
return COLUMN_METADATA;
case 14:
return GC_GRACE_SECONDS;
case 15:
return DEFAULT_VALIDATION_CLASS;
case 16:
return ID;
case 17:
return MIN_COMPACTION_THRESHOLD;
case 18:
return MAX_COMPACTION_THRESHOLD;
case 24:
return REPLICATE_ON_WRITE;
case 26:
return KEY_VALIDATION_CLASS;
case 28:
return KEY_ALIAS;
case 29:
return COMPACTION_STRATEGY;
case 30:
return COMPACTION_STRATEGY_OPTIONS;
case 32:
return COMPRESSION_OPTIONS;
case 33:
return BLOOM_FILTER_FP_CHANCE;
case 34:
return CACHING;
case 37:
return DCLOCAL_READ_REPAIR_CHANCE;
case 38:
return MEMTABLE_FLUSH_PERIOD_IN_MS;
case 39:
return DEFAULT_TIME_TO_LIVE;
case 40:
return INDEX_INTERVAL;
case 9:
return ROW_CACHE_SIZE;
case 11:
return KEY_CACHE_SIZE;
case 19:
return ROW_CACHE_SAVE_PERIOD_IN_SECONDS;
case 20:
return KEY_CACHE_SAVE_PERIOD_IN_SECONDS;
case 21:
return MEMTABLE_FLUSH_AFTER_MINS;
case 22:
return MEMTABLE_THROUGHPUT_IN_MB;
case 23:
return MEMTABLE_OPERATIONS_IN_MILLIONS;
case 25:
return MERGE_SHARDS_CHANCE;
case 27:
return ROW_CACHE_PROVIDER;
case 31:
return ROW_CACHE_KEYS_TO_SAVE;
default :
return null;
}
}
