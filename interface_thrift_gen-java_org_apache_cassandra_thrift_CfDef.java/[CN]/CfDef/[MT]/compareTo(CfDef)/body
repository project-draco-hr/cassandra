{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  CfDef typedOther=(CfDef)other;
  lastComparison=Boolean.valueOf(isSetKeyspace()).compareTo(typedOther.isSetKeyspace());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKeyspace()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.keyspace,typedOther.keyspace);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetName()).compareTo(typedOther.isSetName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.name,typedOther.name);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumn_type()).compareTo(typedOther.isSetColumn_type());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumn_type()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.column_type,typedOther.column_type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetComparator_type()).compareTo(typedOther.isSetComparator_type());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetComparator_type()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.comparator_type,typedOther.comparator_type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSubcomparator_type()).compareTo(typedOther.isSetSubcomparator_type());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSubcomparator_type()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.subcomparator_type,typedOther.subcomparator_type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetComment()).compareTo(typedOther.isSetComment());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetComment()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.comment,typedOther.comment);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow_cache_size()).compareTo(typedOther.isSetRow_cache_size());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow_cache_size()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.row_cache_size,typedOther.row_cache_size);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetKey_cache_size()).compareTo(typedOther.isSetKey_cache_size());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey_cache_size()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key_cache_size,typedOther.key_cache_size);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRead_repair_chance()).compareTo(typedOther.isSetRead_repair_chance());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRead_repair_chance()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.read_repair_chance,typedOther.read_repair_chance);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumn_metadata()).compareTo(typedOther.isSetColumn_metadata());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumn_metadata()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.column_metadata,typedOther.column_metadata);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetGc_grace_seconds()).compareTo(typedOther.isSetGc_grace_seconds());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetGc_grace_seconds()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.gc_grace_seconds,typedOther.gc_grace_seconds);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDefault_validation_class()).compareTo(typedOther.isSetDefault_validation_class());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDefault_validation_class()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.default_validation_class,typedOther.default_validation_class);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.id,typedOther.id);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMin_compaction_threshold()).compareTo(typedOther.isSetMin_compaction_threshold());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMin_compaction_threshold()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.min_compaction_threshold,typedOther.min_compaction_threshold);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMax_compaction_threshold()).compareTo(typedOther.isSetMax_compaction_threshold());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMax_compaction_threshold()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.max_compaction_threshold,typedOther.max_compaction_threshold);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow_cache_save_period_in_seconds()).compareTo(typedOther.isSetRow_cache_save_period_in_seconds());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow_cache_save_period_in_seconds()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.row_cache_save_period_in_seconds,typedOther.row_cache_save_period_in_seconds);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetKey_cache_save_period_in_seconds()).compareTo(typedOther.isSetKey_cache_save_period_in_seconds());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey_cache_save_period_in_seconds()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key_cache_save_period_in_seconds,typedOther.key_cache_save_period_in_seconds);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMemtable_flush_after_mins()).compareTo(typedOther.isSetMemtable_flush_after_mins());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMemtable_flush_after_mins()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.memtable_flush_after_mins,typedOther.memtable_flush_after_mins);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMemtable_throughput_in_mb()).compareTo(typedOther.isSetMemtable_throughput_in_mb());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMemtable_throughput_in_mb()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.memtable_throughput_in_mb,typedOther.memtable_throughput_in_mb);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMemtable_operations_in_millions()).compareTo(typedOther.isSetMemtable_operations_in_millions());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMemtable_operations_in_millions()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.memtable_operations_in_millions,typedOther.memtable_operations_in_millions);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetReplicate_on_write()).compareTo(typedOther.isSetReplicate_on_write());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetReplicate_on_write()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.replicate_on_write,typedOther.replicate_on_write);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMerge_shards_chance()).compareTo(typedOther.isSetMerge_shards_chance());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMerge_shards_chance()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.merge_shards_chance,typedOther.merge_shards_chance);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetKey_validation_class()).compareTo(typedOther.isSetKey_validation_class());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey_validation_class()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key_validation_class,typedOther.key_validation_class);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow_cache_provider()).compareTo(typedOther.isSetRow_cache_provider());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow_cache_provider()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.row_cache_provider,typedOther.row_cache_provider);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetKey_alias()).compareTo(typedOther.isSetKey_alias());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey_alias()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key_alias,typedOther.key_alias);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
