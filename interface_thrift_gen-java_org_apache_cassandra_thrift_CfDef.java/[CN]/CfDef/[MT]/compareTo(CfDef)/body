{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetKeyspace()).compareTo(other.isSetKeyspace());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKeyspace()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.keyspace,other.keyspace);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetName()).compareTo(other.isSetName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.name,other.name);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumn_type()).compareTo(other.isSetColumn_type());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumn_type()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.column_type,other.column_type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetComparator_type()).compareTo(other.isSetComparator_type());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetComparator_type()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.comparator_type,other.comparator_type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSubcomparator_type()).compareTo(other.isSetSubcomparator_type());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSubcomparator_type()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.subcomparator_type,other.subcomparator_type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetComment()).compareTo(other.isSetComment());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetComment()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.comment,other.comment);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRead_repair_chance()).compareTo(other.isSetRead_repair_chance());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRead_repair_chance()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.read_repair_chance,other.read_repair_chance);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumn_metadata()).compareTo(other.isSetColumn_metadata());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumn_metadata()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.column_metadata,other.column_metadata);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetGc_grace_seconds()).compareTo(other.isSetGc_grace_seconds());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetGc_grace_seconds()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.gc_grace_seconds,other.gc_grace_seconds);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDefault_validation_class()).compareTo(other.isSetDefault_validation_class());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDefault_validation_class()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.default_validation_class,other.default_validation_class);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetId()).compareTo(other.isSetId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.id,other.id);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMin_compaction_threshold()).compareTo(other.isSetMin_compaction_threshold());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMin_compaction_threshold()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.min_compaction_threshold,other.min_compaction_threshold);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMax_compaction_threshold()).compareTo(other.isSetMax_compaction_threshold());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMax_compaction_threshold()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.max_compaction_threshold,other.max_compaction_threshold);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetKey_validation_class()).compareTo(other.isSetKey_validation_class());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey_validation_class()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key_validation_class,other.key_validation_class);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetKey_alias()).compareTo(other.isSetKey_alias());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey_alias()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key_alias,other.key_alias);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCompaction_strategy()).compareTo(other.isSetCompaction_strategy());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCompaction_strategy()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.compaction_strategy,other.compaction_strategy);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCompaction_strategy_options()).compareTo(other.isSetCompaction_strategy_options());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCompaction_strategy_options()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.compaction_strategy_options,other.compaction_strategy_options);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCompression_options()).compareTo(other.isSetCompression_options());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCompression_options()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.compression_options,other.compression_options);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBloom_filter_fp_chance()).compareTo(other.isSetBloom_filter_fp_chance());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBloom_filter_fp_chance()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.bloom_filter_fp_chance,other.bloom_filter_fp_chance);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCaching()).compareTo(other.isSetCaching());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCaching()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.caching,other.caching);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDclocal_read_repair_chance()).compareTo(other.isSetDclocal_read_repair_chance());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDclocal_read_repair_chance()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dclocal_read_repair_chance,other.dclocal_read_repair_chance);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPopulate_io_cache_on_flush()).compareTo(other.isSetPopulate_io_cache_on_flush());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPopulate_io_cache_on_flush()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.populate_io_cache_on_flush,other.populate_io_cache_on_flush);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMemtable_flush_period_in_ms()).compareTo(other.isSetMemtable_flush_period_in_ms());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMemtable_flush_period_in_ms()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.memtable_flush_period_in_ms,other.memtable_flush_period_in_ms);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDefault_time_to_live()).compareTo(other.isSetDefault_time_to_live());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDefault_time_to_live()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.default_time_to_live,other.default_time_to_live);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIndex_interval()).compareTo(other.isSetIndex_interval());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIndex_interval()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.index_interval,other.index_interval);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSpeculative_retry()).compareTo(other.isSetSpeculative_retry());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSpeculative_retry()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.speculative_retry,other.speculative_retry);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTriggers()).compareTo(other.isSetTriggers());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTriggers()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.triggers,other.triggers);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCells_per_row_to_cache()).compareTo(other.isSetCells_per_row_to_cache());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCells_per_row_to_cache()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.cells_per_row_to_cache,other.cells_per_row_to_cache);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow_cache_size()).compareTo(other.isSetRow_cache_size());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow_cache_size()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.row_cache_size,other.row_cache_size);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetKey_cache_size()).compareTo(other.isSetKey_cache_size());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey_cache_size()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key_cache_size,other.key_cache_size);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow_cache_save_period_in_seconds()).compareTo(other.isSetRow_cache_save_period_in_seconds());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow_cache_save_period_in_seconds()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.row_cache_save_period_in_seconds,other.row_cache_save_period_in_seconds);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetKey_cache_save_period_in_seconds()).compareTo(other.isSetKey_cache_save_period_in_seconds());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey_cache_save_period_in_seconds()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key_cache_save_period_in_seconds,other.key_cache_save_period_in_seconds);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMemtable_flush_after_mins()).compareTo(other.isSetMemtable_flush_after_mins());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMemtable_flush_after_mins()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.memtable_flush_after_mins,other.memtable_flush_after_mins);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMemtable_throughput_in_mb()).compareTo(other.isSetMemtable_throughput_in_mb());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMemtable_throughput_in_mb()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.memtable_throughput_in_mb,other.memtable_throughput_in_mb);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMemtable_operations_in_millions()).compareTo(other.isSetMemtable_operations_in_millions());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMemtable_operations_in_millions()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.memtable_operations_in_millions,other.memtable_operations_in_millions);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetReplicate_on_write()).compareTo(other.isSetReplicate_on_write());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetReplicate_on_write()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.replicate_on_write,other.replicate_on_write);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMerge_shards_chance()).compareTo(other.isSetMerge_shards_chance());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMerge_shards_chance()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.merge_shards_chance,other.merge_shards_chance);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow_cache_provider()).compareTo(other.isSetRow_cache_provider());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow_cache_provider()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.row_cache_provider,other.row_cache_provider);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow_cache_keys_to_save()).compareTo(other.isSetRow_cache_keys_to_save());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow_cache_keys_to_save()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.row_cache_keys_to_save,other.row_cache_keys_to_save);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
