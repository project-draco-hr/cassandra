{
  validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (this.keyspace != null) {
    oprot.writeFieldBegin(KEYSPACE_FIELD_DESC);
    oprot.writeString(this.keyspace);
    oprot.writeFieldEnd();
  }
  if (this.name != null) {
    oprot.writeFieldBegin(NAME_FIELD_DESC);
    oprot.writeString(this.name);
    oprot.writeFieldEnd();
  }
  if (this.column_type != null) {
    if (isSetColumn_type()) {
      oprot.writeFieldBegin(COLUMN_TYPE_FIELD_DESC);
      oprot.writeString(this.column_type);
      oprot.writeFieldEnd();
    }
  }
  if (this.comparator_type != null) {
    if (isSetComparator_type()) {
      oprot.writeFieldBegin(COMPARATOR_TYPE_FIELD_DESC);
      oprot.writeString(this.comparator_type);
      oprot.writeFieldEnd();
    }
  }
  if (this.subcomparator_type != null) {
    if (isSetSubcomparator_type()) {
      oprot.writeFieldBegin(SUBCOMPARATOR_TYPE_FIELD_DESC);
      oprot.writeString(this.subcomparator_type);
      oprot.writeFieldEnd();
    }
  }
  if (this.comment != null) {
    if (isSetComment()) {
      oprot.writeFieldBegin(COMMENT_FIELD_DESC);
      oprot.writeString(this.comment);
      oprot.writeFieldEnd();
    }
  }
  if (isSetRow_cache_size()) {
    oprot.writeFieldBegin(ROW_CACHE_SIZE_FIELD_DESC);
    oprot.writeDouble(this.row_cache_size);
    oprot.writeFieldEnd();
  }
  if (isSetKey_cache_size()) {
    oprot.writeFieldBegin(KEY_CACHE_SIZE_FIELD_DESC);
    oprot.writeDouble(this.key_cache_size);
    oprot.writeFieldEnd();
  }
  if (isSetRead_repair_chance()) {
    oprot.writeFieldBegin(READ_REPAIR_CHANCE_FIELD_DESC);
    oprot.writeDouble(this.read_repair_chance);
    oprot.writeFieldEnd();
  }
  if (this.column_metadata != null) {
    if (isSetColumn_metadata()) {
      oprot.writeFieldBegin(COLUMN_METADATA_FIELD_DESC);
{
        oprot.writeListBegin(new TList(TType.STRUCT,this.column_metadata.size()));
        for (        ColumnDef _iter32 : this.column_metadata) {
          _iter32.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (isSetGc_grace_seconds()) {
    oprot.writeFieldBegin(GC_GRACE_SECONDS_FIELD_DESC);
    oprot.writeI32(this.gc_grace_seconds);
    oprot.writeFieldEnd();
  }
  if (this.default_validation_class != null) {
    if (isSetDefault_validation_class()) {
      oprot.writeFieldBegin(DEFAULT_VALIDATION_CLASS_FIELD_DESC);
      oprot.writeString(this.default_validation_class);
      oprot.writeFieldEnd();
    }
  }
  if (isSetId()) {
    oprot.writeFieldBegin(ID_FIELD_DESC);
    oprot.writeI32(this.id);
    oprot.writeFieldEnd();
  }
  if (isSetMin_compaction_threshold()) {
    oprot.writeFieldBegin(MIN_COMPACTION_THRESHOLD_FIELD_DESC);
    oprot.writeI32(this.min_compaction_threshold);
    oprot.writeFieldEnd();
  }
  if (isSetMax_compaction_threshold()) {
    oprot.writeFieldBegin(MAX_COMPACTION_THRESHOLD_FIELD_DESC);
    oprot.writeI32(this.max_compaction_threshold);
    oprot.writeFieldEnd();
  }
  if (isSetRow_cache_save_period_in_seconds()) {
    oprot.writeFieldBegin(ROW_CACHE_SAVE_PERIOD_IN_SECONDS_FIELD_DESC);
    oprot.writeI32(this.row_cache_save_period_in_seconds);
    oprot.writeFieldEnd();
  }
  if (isSetKey_cache_save_period_in_seconds()) {
    oprot.writeFieldBegin(KEY_CACHE_SAVE_PERIOD_IN_SECONDS_FIELD_DESC);
    oprot.writeI32(this.key_cache_save_period_in_seconds);
    oprot.writeFieldEnd();
  }
  if (isSetMemtable_flush_after_mins()) {
    oprot.writeFieldBegin(MEMTABLE_FLUSH_AFTER_MINS_FIELD_DESC);
    oprot.writeI32(this.memtable_flush_after_mins);
    oprot.writeFieldEnd();
  }
  if (isSetMemtable_throughput_in_mb()) {
    oprot.writeFieldBegin(MEMTABLE_THROUGHPUT_IN_MB_FIELD_DESC);
    oprot.writeI32(this.memtable_throughput_in_mb);
    oprot.writeFieldEnd();
  }
  if (isSetMemtable_operations_in_millions()) {
    oprot.writeFieldBegin(MEMTABLE_OPERATIONS_IN_MILLIONS_FIELD_DESC);
    oprot.writeDouble(this.memtable_operations_in_millions);
    oprot.writeFieldEnd();
  }
  if (isSetReplicate_on_write()) {
    oprot.writeFieldBegin(REPLICATE_ON_WRITE_FIELD_DESC);
    oprot.writeBool(this.replicate_on_write);
    oprot.writeFieldEnd();
  }
  if (isSetMerge_shards_chance()) {
    oprot.writeFieldBegin(MERGE_SHARDS_CHANCE_FIELD_DESC);
    oprot.writeDouble(this.merge_shards_chance);
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
