{
  __isset_bit_vector.clear();
  __isset_bit_vector.or(other.__isset_bit_vector);
  if (other.isSetKeyspace()) {
    this.keyspace=other.keyspace;
  }
  if (other.isSetName()) {
    this.name=other.name;
  }
  if (other.isSetColumn_type()) {
    this.column_type=other.column_type;
  }
  if (other.isSetComparator_type()) {
    this.comparator_type=other.comparator_type;
  }
  if (other.isSetSubcomparator_type()) {
    this.subcomparator_type=other.subcomparator_type;
  }
  if (other.isSetComment()) {
    this.comment=other.comment;
  }
  this.read_repair_chance=other.read_repair_chance;
  if (other.isSetColumn_metadata()) {
    List<ColumnDef> __this__column_metadata=new ArrayList<ColumnDef>();
    for (    ColumnDef other_element : other.column_metadata) {
      __this__column_metadata.add(new ColumnDef(other_element));
    }
    this.column_metadata=__this__column_metadata;
  }
  this.gc_grace_seconds=other.gc_grace_seconds;
  if (other.isSetDefault_validation_class()) {
    this.default_validation_class=other.default_validation_class;
  }
  this.id=other.id;
  this.min_compaction_threshold=other.min_compaction_threshold;
  this.max_compaction_threshold=other.max_compaction_threshold;
  this.replicate_on_write=other.replicate_on_write;
  if (other.isSetKey_validation_class()) {
    this.key_validation_class=other.key_validation_class;
  }
  if (other.isSetKey_alias()) {
    this.key_alias=org.apache.thrift.TBaseHelper.copyBinary(other.key_alias);
    ;
  }
  if (other.isSetCompaction_strategy()) {
    this.compaction_strategy=other.compaction_strategy;
  }
  if (other.isSetCompaction_strategy_options()) {
    Map<String,String> __this__compaction_strategy_options=new HashMap<String,String>();
    for (    Map.Entry<String,String> other_element : other.compaction_strategy_options.entrySet()) {
      String other_element_key=other_element.getKey();
      String other_element_value=other_element.getValue();
      String __this__compaction_strategy_options_copy_key=other_element_key;
      String __this__compaction_strategy_options_copy_value=other_element_value;
      __this__compaction_strategy_options.put(__this__compaction_strategy_options_copy_key,__this__compaction_strategy_options_copy_value);
    }
    this.compaction_strategy_options=__this__compaction_strategy_options;
  }
  if (other.isSetCompression_options()) {
    Map<String,String> __this__compression_options=new HashMap<String,String>();
    for (    Map.Entry<String,String> other_element : other.compression_options.entrySet()) {
      String other_element_key=other_element.getKey();
      String other_element_value=other_element.getValue();
      String __this__compression_options_copy_key=other_element_key;
      String __this__compression_options_copy_value=other_element_value;
      __this__compression_options.put(__this__compression_options_copy_key,__this__compression_options_copy_value);
    }
    this.compression_options=__this__compression_options;
  }
  this.bloom_filter_fp_chance=other.bloom_filter_fp_chance;
  if (other.isSetCaching()) {
    this.caching=other.caching;
  }
  if (other.isSetColumn_aliases()) {
    List<ByteBuffer> __this__column_aliases=new ArrayList<ByteBuffer>();
    for (    ByteBuffer other_element : other.column_aliases) {
      ByteBuffer temp_binary_element=org.apache.thrift.TBaseHelper.copyBinary(other_element);
      ;
      __this__column_aliases.add(temp_binary_element);
    }
    this.column_aliases=__this__column_aliases;
  }
  if (other.isSetValue_alias()) {
    this.value_alias=org.apache.thrift.TBaseHelper.copyBinary(other.value_alias);
    ;
  }
  this.dclocal_read_repair_chance=other.dclocal_read_repair_chance;
}
