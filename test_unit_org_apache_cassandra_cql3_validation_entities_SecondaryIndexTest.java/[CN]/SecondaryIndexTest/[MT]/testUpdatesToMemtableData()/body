{
  createTable("CREATE TABLE %s (k int, c int, v1 int, v2 int, PRIMARY KEY (k,c))");
  createIndex(String.format("CREATE CUSTOM INDEX test_index ON %%s() USING '%s'",StubIndex.class.getName()));
  execute("INSERT INTO %s (k, c, v1, v2) VALUES (0, 0, 0, 0) USING TIMESTAMP 0");
  ColumnDefinition v1=getCurrentColumnFamilyStore().metadata.getColumnDefinition(new ColumnIdentifier("v1",true));
  ColumnDefinition v2=getCurrentColumnFamilyStore().metadata.getColumnDefinition(new ColumnIdentifier("v2",true));
  StubIndex index=(StubIndex)getCurrentColumnFamilyStore().indexManager.getIndexByName("test_index");
  assertEquals(1,index.rowsInserted.size());
  execute("UPDATE %s USING TIMESTAMP 1 SET v1=1 WHERE k=0 AND c=0");
  assertEquals(1,index.rowsUpdated.size());
  Row oldRow=index.rowsUpdated.get(0).left;
  assertEquals(1,oldRow.size());
  validateCell(oldRow.getCell(v1),v1,ByteBufferUtil.bytes(0),0);
  Row newRow=index.rowsUpdated.get(0).right;
  assertEquals(1,newRow.size());
  validateCell(newRow.getCell(v1),v1,ByteBufferUtil.bytes(1),1);
  index.reset();
  execute("UPDATE %s USING TIMESTAMP 2 SET v1=2, v2=2 WHERE k=0 AND c=0");
  assertEquals(1,index.rowsUpdated.size());
  oldRow=index.rowsUpdated.get(0).left;
  assertEquals(2,oldRow.size());
  validateCell(oldRow.getCell(v1),v1,ByteBufferUtil.bytes(1),1);
  validateCell(oldRow.getCell(v2),v2,ByteBufferUtil.bytes(0),0);
  newRow=index.rowsUpdated.get(0).right;
  assertEquals(2,newRow.size());
  validateCell(newRow.getCell(v1),v1,ByteBufferUtil.bytes(2),2);
  validateCell(newRow.getCell(v2),v2,ByteBufferUtil.bytes(2),2);
  index.reset();
  execute("DELETE v1 FROM %s USING TIMESTAMP 3 WHERE k=0 AND c=0");
  assertEquals(1,index.rowsUpdated.size());
  oldRow=index.rowsUpdated.get(0).left;
  assertEquals(1,oldRow.size());
  validateCell(oldRow.getCell(v1),v1,ByteBufferUtil.bytes(2),2);
  newRow=index.rowsUpdated.get(0).right;
  assertEquals(1,newRow.size());
  Cell newCell=newRow.getCell(v1);
  assertTrue(newCell.isTombstone());
  assertEquals(3,newCell.timestamp());
  index.reset();
  execute("INSERT INTO %s(k, c) VALUES (0, 0) USING TIMESTAMP 4");
  assertEquals(1,index.rowsUpdated.size());
  oldRow=index.rowsUpdated.get(0).left;
  assertEquals(0,oldRow.size());
  assertEquals(0,oldRow.primaryKeyLivenessInfo().timestamp());
  newRow=index.rowsUpdated.get(0).right;
  assertEquals(0,newRow.size());
  assertEquals(4,newRow.primaryKeyLivenessInfo().timestamp());
}
