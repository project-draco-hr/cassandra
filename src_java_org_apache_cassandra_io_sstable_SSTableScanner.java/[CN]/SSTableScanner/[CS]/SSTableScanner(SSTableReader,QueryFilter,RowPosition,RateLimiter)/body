{
  this(sstable,filter,limiter);
  long indexPosition=sstable.getIndexScanPosition(startWith);
  if (indexPosition == -1)   indexPosition=0;
  ifile.seek(indexPosition);
  try {
    while (!ifile.isEOF()) {
      indexPosition=ifile.getFilePointer();
      DecoratedKey indexDecoratedKey=sstable.partitioner.decorateKey(ByteBufferUtil.readWithShortLength(ifile));
      int comparison=indexDecoratedKey.compareTo(startWith);
      if (comparison >= 0) {
        long dataPosition=ifile.readLong();
        ifile.seek(indexPosition);
        dfile.seek(dataPosition);
        break;
      }
 else {
        RowIndexEntry.serializer.skip(ifile);
      }
    }
  }
 catch (  IOException e) {
    sstable.markSuspect();
    throw new CorruptSSTableException(e,sstable.getFilename());
  }
}
