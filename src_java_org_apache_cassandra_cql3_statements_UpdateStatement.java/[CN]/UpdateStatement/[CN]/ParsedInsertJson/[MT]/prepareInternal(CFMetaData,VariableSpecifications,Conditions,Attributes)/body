{
  checkFalse(cfm.isCounter(),"INSERT statements are not allowed on counter tables, use UPDATE instead");
  Collection<ColumnDefinition> defs=cfm.allColumns();
  Json.Prepared prepared=jsonValue.prepareAndCollectMarkers(cfm,defs,boundNames);
  WhereClause.Builder whereClause=new WhereClause.Builder();
  Operations operations=new Operations(type);
  boolean hasClusteringColumnsSet=false;
  for (  ColumnDefinition def : defs) {
    if (def.isClusteringColumn())     hasClusteringColumnsSet=true;
    Term.Raw raw=prepared.getRawTermForColumn(def,defaultUnset);
    if (def.isPrimaryKeyColumn()) {
      whereClause.add(new SingleColumnRelation(ColumnDefinition.Raw.forColumn(def),Operator.EQ,raw));
    }
 else {
      Operation operation=new Operation.SetValue(raw).prepare(cfm,def);
      operation.collectMarkerSpecification(boundNames);
      operations.add(operation);
    }
  }
  boolean applyOnlyToStaticColumns=!hasClusteringColumnsSet && appliesOnlyToStaticColumns(operations,conditions);
  StatementRestrictions restrictions=new StatementRestrictions(type,cfm,whereClause.build(),boundNames,applyOnlyToStaticColumns,false,false,false);
  return new UpdateStatement(type,boundNames.size(),cfm,operations,restrictions,conditions,attrs);
}
