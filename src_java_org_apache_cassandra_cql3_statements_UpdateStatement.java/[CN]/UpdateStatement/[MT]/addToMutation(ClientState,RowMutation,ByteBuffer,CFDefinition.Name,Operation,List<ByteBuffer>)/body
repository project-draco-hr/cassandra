{
  if (value.isUnary()) {
    ByteBuffer valueBytes=value.value.getByteBuffer(valueDef.type,variables);
    validateColumnName(colName);
    rm.add(new QueryPath(columnFamily(),null,colName),valueBytes,getTimestamp(clientState),getTimeToLive());
    return false;
  }
 else {
    if (!valueDef.name.equals(value.ident))     throw new InvalidRequestException("Only expressions like X = X + <long> are supported.");
    long val;
    try {
      val=ByteBufferUtil.toLong(value.value.getByteBuffer(LongType.instance,variables));
    }
 catch (    NumberFormatException e) {
      throw new InvalidRequestException(String.format("'%s' is an invalid value, should be a long.",value.value.getText()));
    }
    if (value.type == Operation.Type.MINUS) {
      if (val == Long.MIN_VALUE)       throw new InvalidRequestException("The negation of " + val + " overflows supported integer precision (signed 8 bytes integer)");
 else       val=-val;
    }
    rm.addCounter(new QueryPath(columnFamily(),null,colName),val);
    return true;
  }
}
