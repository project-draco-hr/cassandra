{
  if (updatesRegularRows()) {
    params.newRow(cbuilder.build());
    if (type == StatementType.INSERT && cfm.isCQLTable())     params.addPrimaryKeyLivenessInfo();
    List<Operation> updates=getRegularOperations();
    if (cfm.isCompactTable() && updates.isEmpty()) {
      if (CompactTables.hasEmptyCompactValue(cfm))       updates=Collections.<Operation>singletonList(new Constants.Setter(cfm.compactValueColumn(),EMPTY));
 else       throw new InvalidRequestException(String.format("Column %s is mandatory for this COMPACT STORAGE table",cfm.compactValueColumn().name));
    }
    for (    Operation op : updates)     op.execute(update.partitionKey(),params);
    update.add(params.buildRow());
  }
  if (updatesStaticRow()) {
    params.newRow(Clustering.STATIC_CLUSTERING);
    for (    Operation op : getStaticOperations())     op.execute(update.partitionKey(),params);
    update.add(params.buildRow());
  }
  params.validateIndexedColumns(update);
}
