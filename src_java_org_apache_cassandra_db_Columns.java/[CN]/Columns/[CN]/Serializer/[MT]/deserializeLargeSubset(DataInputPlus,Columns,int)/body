{
  int supersetCount=superset.columnCount();
  int columnCount=supersetCount - delta;
  BTree.Builder<ColumnDefinition> builder=BTree.builder(Comparator.naturalOrder());
  if (columnCount < supersetCount / 2) {
    for (int i=0; i < columnCount; i++) {
      int idx=(int)in.readUnsignedVInt();
      builder.add(BTree.findByIndex(superset.columns,idx));
    }
  }
 else {
    Iterator<ColumnDefinition> iter=superset.iterator();
    int idx=0;
    int skipped=0;
    while (true) {
      int nextMissingIndex=skipped < delta ? (int)in.readUnsignedVInt() : supersetCount;
      while (idx < nextMissingIndex) {
        ColumnDefinition def=iter.next();
        builder.add(def);
        idx++;
      }
      if (idx == supersetCount)       break;
      iter.next();
      idx++;
      skipped++;
    }
  }
  return new Columns(builder.build());
}
