{
  return new AbstractIterator<ColumnDefinition>(){
    private int regular;
    private int complex=complexIdx;
    protected ColumnDefinition computeNext(){
      if (complex >= columns.length)       return regular >= complexIdx ? endOfData() : columns[regular++];
      if (regular >= complexIdx)       return columns[complex++];
      return ByteBufferUtil.compareUnsigned(columns[regular].name.bytes,columns[complex].name.bytes) < 0 ? columns[regular++] : columns[complex++];
    }
  }
;
}
