{
  if (logger.isDebugEnabled())   logger.debug("applying mutation of row {}",ByteBufferUtil.bytesToHex(mutation.key()));
  switchLock.readLock().lock();
  try {
    if (writeCommitLog)     CommitLog.instance.add(mutation);
    DecoratedKey<?> key=StorageService.getPartitioner().decorateKey(mutation.key());
    for (    ColumnFamily cf : mutation.getColumnFamilies()) {
      ColumnFamilyStore cfs=columnFamilyStores.get(cf.id());
      if (cfs == null) {
        logger.error("Attempting to mutate non-existant column family " + cf.id());
        continue;
      }
      SortedSet<ByteBuffer> mutatedIndexedColumns=null;
      for (      ByteBuffer column : cfs.indexManager.getIndexedColumns()) {
        if (cf.getColumnNames().contains(column) || cf.isMarkedForDelete()) {
          if (mutatedIndexedColumns == null)           mutatedIndexedColumns=new TreeSet<ByteBuffer>();
          mutatedIndexedColumns.add(column);
          if (logger.isDebugEnabled()) {
            ByteBuffer value=cf.getColumn(column) == null ? null : cf.getColumn(column).value();
            logger.debug(String.format("mutating indexed column %s value %s",cf.getComparator().getString(column),value == null ? "null" : ByteBufferUtil.bytesToHex(value)));
          }
        }
      }
      if (mutatedIndexedColumns == null) {
        cfs.apply(key,cf);
        continue;
      }
synchronized (indexLockFor(mutation.key())) {
        ColumnFamily oldIndexedColumns=readCurrentIndexedColumns(key,cfs,mutatedIndexedColumns);
        logger.debug("Pre-mutation index row is {}",oldIndexedColumns);
        ignoreObsoleteMutations(cf,mutatedIndexedColumns,oldIndexedColumns);
        cfs.apply(key,cf);
        applyIndexUpdates(mutation.key(),cf,cfs,mutatedIndexedColumns,oldIndexedColumns);
      }
    }
  }
  finally {
    switchLock.readLock().unlock();
  }
}
