{
  byte[] body=message.getMessageBody();
  DataInputBuffer bufIn=new DataInputBuffer();
  bufIn.reset(body,body.length);
  try {
    BootstrapInitiateMessage biMsg=BootstrapInitiateMessage.serializer().deserialize(bufIn);
    StreamContextManager.StreamContext[] streamContexts=biMsg.getStreamContext();
    Map<String,String> fileNames=getNewNames(streamContexts);
    for (    StreamContextManager.StreamContext streamContext : streamContexts) {
      StreamContextManager.StreamStatus streamStatus=new StreamContextManager.StreamStatus(streamContext.getTargetFile(),streamContext.getExpectedBytes());
      String file=getNewFileNameFromOldContextAndNames(fileNames,streamContext);
      if (logger_.isDebugEnabled())       logger_.debug("Received Data from  : " + message.getFrom() + " "+ streamContext.getTargetFile()+ " "+ file);
      streamContext.setTargetFile(file);
      addStreamContext(message.getFrom().getHost(),streamContext,streamStatus);
    }
    StreamContextManager.registerStreamCompletionHandler(message.getFrom().getHost(),new Table.BootstrapCompletionHandler());
    if (logger_.isDebugEnabled())     logger_.debug("Sending a bootstrap initiate done message ...");
    Message doneMessage=new Message(StorageService.getLocalStorageEndPoint(),"",StorageService.bootStrapInitiateDoneVerbHandler_,new byte[0]);
    MessagingService.getMessagingInstance().sendOneWay(doneMessage,message.getFrom());
  }
 catch (  IOException ex) {
    logger_.info(LogUtil.throwableToString(ex));
  }
}
