{
  List<String> cfamsSeen=new ArrayList<String>();
  List<RowMutation> rowMutations=new ArrayList<RowMutation>();
  for (  Map.Entry<ByteBuffer,Map<String,List<Mutation>>> mutationEntry : mutation_map.entrySet()) {
    ByteBuffer key=mutationEntry.getKey();
    Map<String,List<Mutation>> columnFamilyToMutations=mutationEntry.getValue();
    for (    Map.Entry<String,List<Mutation>> columnFamilyMutations : columnFamilyToMutations.entrySet()) {
      String cfName=columnFamilyMutations.getKey();
      CFMetaData metadata=ThriftValidation.validateColumnFamily(state().getKeyspace(),cfName,isCommutativeOp);
      ThriftValidation.validateKey(metadata,key);
      if (!(cfamsSeen.contains(cfName))) {
        state().hasColumnFamilyAccess(cfName,Permission.WRITE);
        cfamsSeen.add(cfName);
      }
      if (isCommutativeOp)       ThriftValidation.validateCommutativeForWrite(metadata,consistency_level);
      for (      Mutation mutation : columnFamilyMutations.getValue()) {
        ThriftValidation.validateMutation(metadata,mutation);
      }
    }
    RowMutation rm=RowMutation.getRowMutationFromMutations(state().getKeyspace(),key,columnFamilyToMutations);
    if (!rm.isEmpty())     rowMutations.add(rm);
  }
  doInsert(consistency_level,rowMutations);
}
