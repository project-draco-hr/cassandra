{
  CFMetaData metadata=ThriftValidation.validateColumnFamily(keyspace,column_parent.column_family);
  ThriftValidation.validateColumnParent(metadata,column_parent);
  ThriftValidation.validatePredicate(metadata,column_parent,predicate);
  org.apache.cassandra.db.ConsistencyLevel consistencyLevel=ThriftConversion.fromThrift(consistency_level);
  consistencyLevel.validateForRead(keyspace);
  List<SinglePartitionReadCommand<?>> commands=new ArrayList<>(keys.size());
  ColumnFilter columnFilter=makeColumnFilter(metadata,column_parent,predicate);
  ClusteringIndexFilter filter=toInternalFilter(metadata,column_parent,predicate);
  DataLimits limits=getLimits(1,metadata.isSuper() && !column_parent.isSetSuper_column(),predicate);
  for (  ByteBuffer key : keys) {
    ThriftValidation.validateKey(metadata,key);
    DecoratedKey dk=metadata.decorateKey(key);
    commands.add(SinglePartitionReadCommand.create(true,metadata,nowInSec,columnFilter,RowFilter.NONE,limits,dk,filter));
  }
  return getSlice(commands,column_parent.isSetSuper_column(),limits.perPartitionCount(),consistencyLevel,cState);
}
