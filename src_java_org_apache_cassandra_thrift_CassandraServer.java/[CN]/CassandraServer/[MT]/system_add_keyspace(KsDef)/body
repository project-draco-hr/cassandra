{
  logger.trace("add_keyspace");
  try {
    ThriftValidation.validateKeyspaceNotSystem(ks_def.name);
    state().hasAllKeyspacesAccess(Permission.CREATE);
    ThriftValidation.validateKeyspaceNotYetExisting(ks_def.name);
    for (    CfDef cf : ks_def.cf_defs) {
      if (!cf.getKeyspace().equals(ks_def.getName())) {
        throw new InvalidRequestException("CfDef (" + cf.getName() + ") had a keyspace definition that did not match KsDef");
      }
    }
    Collection<CFMetaData> cfDefs=new ArrayList<CFMetaData>(ks_def.cf_defs.size());
    for (    CfDef cf_def : ks_def.cf_defs) {
      cf_def.unsetId();
      CFMetaData cfm=ThriftConversion.fromThrift(cf_def);
      cfm.addDefaultIndexNames();
      if (!cfm.getTriggers().isEmpty())       state().ensureIsSuper("Only superusers are allowed to add triggers.");
      cfDefs.add(cfm);
    }
    MigrationManager.announceNewKeyspace(ThriftConversion.fromThrift(ks_def,cfDefs.toArray(new CFMetaData[cfDefs.size()])));
    return Schema.instance.getVersion().toString();
  }
 catch (  RequestValidationException e) {
    throw ThriftConversion.toThrift(e);
  }
}
