{
  if (!(DatabaseDescriptor.getAuthenticator() instanceof AllowAllAuthenticator))   throw new InvalidRequestException("Unable to create new keyspace while authentication is enabled.");
  if (StageManager.getStage(StageManager.MIGRATION_STAGE).getQueue().size() > 0)   throw new InvalidRequestException("This node appears to be handling gossiped migrations.");
  try {
    Collection<CFMetaData> cfDefs=new ArrayList<CFMetaData>(ks_def.cf_defs.size());
    for (    CfDef cfDef : ks_def.cf_defs) {
      ColumnFamilyType cfType=ColumnFamilyType.create(cfDef.column_type);
      if (cfType == null) {
        throw new InvalidRequestException("Invalid column type " + cfDef.column_type);
      }
      CFMetaData cfm=new CFMetaData(cfDef.table,cfDef.name,cfType,DatabaseDescriptor.getComparator(cfDef.comparator_type),cfDef.subcomparator_type.length() == 0 ? null : DatabaseDescriptor.getComparator(cfDef.subcomparator_type),cfDef.comment,cfDef.row_cache_size,cfDef.preload_row_cache,cfDef.key_cache_size);
      cfDefs.add(cfm);
    }
    KSMetaData ksm=new KSMetaData(ks_def.name,(Class<? extends AbstractReplicationStrategy>)Class.forName(ks_def.strategy_class),ks_def.replication_factor,cfDefs.toArray(new CFMetaData[cfDefs.size()]));
    AddKeyspace add=new AddKeyspace(ksm);
    add.apply();
    add.announce();
  }
 catch (  ClassNotFoundException e) {
    InvalidRequestException ex=new InvalidRequestException(e.getMessage());
    ex.initCause(e);
    throw ex;
  }
catch (  ConfigurationException e) {
    InvalidRequestException ex=new InvalidRequestException(e.getMessage());
    ex.initCause(e);
    throw ex;
  }
catch (  IOException e) {
    InvalidRequestException ex=new InvalidRequestException(e.getMessage());
    ex.initCause(e);
    throw ex;
  }
}
