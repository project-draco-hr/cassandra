{
  ThriftClientState cState=state();
  String keyspace=cState.getKeyspace();
  cState.hasColumnFamilyAccess(keyspace,column_path.column_family,Permission.MODIFY);
  CFMetaData metadata=ThriftValidation.validateColumnFamily(keyspace,column_path.column_family,isCommutativeOp);
  if (metadata.isView())   throw new org.apache.cassandra.exceptions.InvalidRequestException("Cannot modify Materialized Views directly");
  ThriftValidation.validateKey(metadata,key);
  ThriftValidation.validateColumnPathOrParent(metadata,column_path);
  if (isCommutativeOp)   ThriftConversion.fromThrift(consistency_level).validateCounterForWrite(metadata);
  DecoratedKey dk=metadata.decorateKey(key);
  int nowInSec=FBUtilities.nowInSeconds();
  PartitionUpdate update;
  if (column_path.super_column == null && column_path.column == null) {
    update=PartitionUpdate.fullPartitionDelete(metadata,dk,timestamp,nowInSec);
  }
 else   if (column_path.super_column != null && column_path.column == null) {
    Row row=BTreeRow.emptyDeletedRow(new Clustering(column_path.super_column),Row.Deletion.regular(new DeletionTime(timestamp,nowInSec)));
    update=PartitionUpdate.singleRowUpdate(metadata,dk,row);
  }
 else {
    try {
      LegacyLayout.LegacyCellName name=LegacyLayout.decodeCellName(metadata,column_path.super_column,column_path.column);
      CellPath path=name.collectionElement == null ? null : CellPath.create(name.collectionElement);
      Cell cell=BufferCell.tombstone(name.column,timestamp,nowInSec,path);
      update=PartitionUpdate.singleRowUpdate(metadata,dk,BTreeRow.singleCellRow(name.clustering,cell));
    }
 catch (    UnknownColumnException e) {
      throw new org.apache.cassandra.exceptions.InvalidRequestException(e.getMessage());
    }
  }
  org.apache.cassandra.db.Mutation mutation=new org.apache.cassandra.db.Mutation(update);
  if (isCommutativeOp)   doInsert(consistency_level,Collections.singletonList(new CounterMutation(mutation,ThriftConversion.fromThrift(consistency_level))));
 else   doInsert(consistency_level,Collections.singletonList(mutation));
}
