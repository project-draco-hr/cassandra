{
  ThriftClientState cState=state();
  String keyspace=cState.getKeyspace();
  cState.hasColumnFamilyAccess(keyspace,column_path.column_family,Permission.MODIFY);
  CFMetaData metadata=ThriftValidation.validateColumnFamily(keyspace,column_path.column_family,isCommutativeOp);
  ThriftValidation.validateKey(metadata,key);
  ThriftValidation.validateColumnPathOrParent(metadata,column_path);
  if (isCommutativeOp)   ThriftConversion.fromThrift(consistency_level).validateCounterForWrite(metadata);
  org.apache.cassandra.db.Mutation mutation=new org.apache.cassandra.db.Mutation(keyspace,key);
  if (column_path.super_column == null && column_path.column == null)   mutation.delete(column_path.column_family,timestamp);
 else   if (column_path.super_column == null)   mutation.delete(column_path.column_family,metadata.comparator.cellFromByteBuffer(column_path.column),timestamp);
 else   if (column_path.column == null)   mutation.deleteRange(column_path.column_family,SuperColumns.startOf(column_path.super_column),SuperColumns.endOf(column_path.super_column),timestamp);
 else   mutation.delete(column_path.column_family,metadata.comparator.makeCellName(column_path.super_column,column_path.column),timestamp);
  if (isCommutativeOp)   doInsert(consistency_level,Arrays.asList(new CounterMutation(mutation,ThriftConversion.fromThrift(consistency_level))));
 else   doInsert(consistency_level,Arrays.asList(mutation));
}
