{
  List<String> cfamsSeen=new ArrayList<String>();
  List<IMutation> rowMutations=new ArrayList<IMutation>();
  ClientState cState=state();
  String keyspace=cState.getKeyspace();
  for (  Map.Entry<ByteBuffer,Map<String,List<Mutation>>> mutationEntry : mutation_map.entrySet()) {
    ByteBuffer key=mutationEntry.getKey();
    RowMutation rmStandard=null;
    RowMutation rmCounter=null;
    Map<String,List<Mutation>> columnFamilyToMutations=mutationEntry.getValue();
    for (    Map.Entry<String,List<Mutation>> columnFamilyMutations : columnFamilyToMutations.entrySet()) {
      String cfName=columnFamilyMutations.getKey();
      if (!(cfamsSeen.contains(cfName))) {
        cState.hasColumnFamilyAccess(cfName,Permission.UPDATE);
        cfamsSeen.add(cfName);
      }
      CFMetaData metadata=ThriftValidation.validateColumnFamily(keyspace,cfName);
      ThriftValidation.validateKey(metadata,key);
      RowMutation rm;
      if (metadata.getDefaultValidator().isCommutative()) {
        ThriftValidation.validateCommutativeForWrite(metadata,consistency_level);
        rmCounter=rmCounter == null ? new RowMutation(keyspace,key) : rmCounter;
        rm=rmCounter;
      }
 else {
        rmStandard=rmStandard == null ? new RowMutation(keyspace,key) : rmStandard;
        rm=rmStandard;
      }
      for (      Mutation mutation : columnFamilyMutations.getValue()) {
        ThriftValidation.validateMutation(metadata,mutation);
        if (mutation.deletion != null) {
          rm.deleteColumnOrSuperColumn(cfName,mutation.deletion);
        }
        if (mutation.column_or_supercolumn != null) {
          rm.addColumnOrSuperColumn(cfName,mutation.column_or_supercolumn);
        }
      }
    }
    if (rmStandard != null && !rmStandard.isEmpty())     rowMutations.add(rmStandard);
    if (rmCounter != null && !rmCounter.isEmpty())     rowMutations.add(new org.apache.cassandra.db.CounterMutation(rmCounter,consistency_level));
  }
  doInsert(consistency_level,rowMutations);
}
