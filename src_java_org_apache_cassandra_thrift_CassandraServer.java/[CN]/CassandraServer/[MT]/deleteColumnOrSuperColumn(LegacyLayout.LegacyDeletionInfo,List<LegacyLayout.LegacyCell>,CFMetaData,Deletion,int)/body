{
  if (del.predicate != null && del.predicate.column_names != null) {
    for (    ByteBuffer c : del.predicate.column_names) {
      try {
        if (del.super_column == null && cfm.isSuper())         addRange(cfm,delInfo,ClusteringBound.inclusiveStartOf(c),ClusteringBound.inclusiveEndOf(c),del.timestamp,nowInSec);
 else         if (del.super_column != null)         cells.add(toLegacyDeletion(cfm,del.super_column,c,del.timestamp,nowInSec));
 else         cells.add(toLegacyDeletion(cfm,c,del.timestamp,nowInSec));
      }
 catch (      UnknownColumnException e) {
        throw new InvalidRequestException(e.getMessage());
      }
    }
  }
 else   if (del.predicate != null && del.predicate.slice_range != null) {
    if (del.super_column == null) {
      LegacyLayout.LegacyBound start=LegacyLayout.decodeBound(cfm,del.predicate.getSlice_range().start,true);
      LegacyLayout.LegacyBound end=LegacyLayout.decodeBound(cfm,del.predicate.getSlice_range().finish,false);
      delInfo.add(cfm,new LegacyLayout.LegacyRangeTombstone(start,end,new DeletionTime(del.timestamp,nowInSec)));
    }
 else {
      throw new InvalidRequestException("Cannot delete a range of subcolumns in a super column");
    }
  }
 else {
    if (del.super_column != null)     addRange(cfm,delInfo,ClusteringBound.inclusiveStartOf(del.super_column),ClusteringBound.inclusiveEndOf(del.super_column),del.timestamp,nowInSec);
 else     delInfo.add(new DeletionTime(del.timestamp,nowInSec));
  }
}
