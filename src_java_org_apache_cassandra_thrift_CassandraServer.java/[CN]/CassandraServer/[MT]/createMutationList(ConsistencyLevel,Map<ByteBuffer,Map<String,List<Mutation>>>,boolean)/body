{
  List<IMutation> mutations=new ArrayList<>();
  ThriftClientState cState=state();
  String keyspace=cState.getKeyspace();
  for (  Map.Entry<ByteBuffer,Map<String,List<Mutation>>> mutationEntry : mutation_map.entrySet()) {
    ByteBuffer key=mutationEntry.getKey();
    org.apache.cassandra.db.Mutation standardMutation=null;
    org.apache.cassandra.db.Mutation counterMutation=null;
    Map<String,List<Mutation>> columnFamilyToMutations=mutationEntry.getValue();
    for (    Map.Entry<String,List<Mutation>> columnFamilyMutations : columnFamilyToMutations.entrySet()) {
      String cfName=columnFamilyMutations.getKey();
      cState.hasColumnFamilyAccess(keyspace,cfName,Permission.MODIFY);
      CFMetaData metadata=ThriftValidation.validateColumnFamily(keyspace,cfName);
      ThriftValidation.validateKey(metadata,key);
      org.apache.cassandra.db.Mutation mutation;
      if (metadata.getDefaultValidator().isCommutative()) {
        ThriftConversion.fromThrift(consistency_level).validateCounterForWrite(metadata);
        counterMutation=counterMutation == null ? new org.apache.cassandra.db.Mutation(keyspace,key) : counterMutation;
        mutation=counterMutation;
      }
 else {
        standardMutation=standardMutation == null ? new org.apache.cassandra.db.Mutation(keyspace,key) : standardMutation;
        mutation=standardMutation;
      }
      for (      Mutation m : columnFamilyMutations.getValue()) {
        ThriftValidation.validateMutation(metadata,m);
        if (m.deletion != null) {
          deleteColumnOrSuperColumn(mutation,metadata,m.deletion);
        }
        if (m.column_or_supercolumn != null) {
          addColumnOrSuperColumn(mutation,metadata,m.column_or_supercolumn);
        }
      }
    }
    if (standardMutation != null && !standardMutation.isEmpty())     mutations.add(standardMutation);
    if (counterMutation != null && !counterMutation.isEmpty()) {
      if (allowCounterMutations)       mutations.add(new CounterMutation(counterMutation,ThriftConversion.fromThrift(consistency_level)));
 else       throw new org.apache.cassandra.exceptions.InvalidRequestException("Counter mutations are not allowed in atomic batches");
    }
  }
  return mutations;
}
