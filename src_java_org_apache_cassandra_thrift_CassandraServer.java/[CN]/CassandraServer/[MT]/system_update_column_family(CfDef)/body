{
  logger.debug("update_column_family");
  try {
    if (cf_def.keyspace == null || cf_def.name == null)     throw new InvalidRequestException("Keyspace and CF name must be set.");
    state().hasColumnFamilyAccess(cf_def.keyspace,cf_def.name,Permission.ALTER);
    CFMetaData oldCfm=Schema.instance.getCFMetaData(cf_def.keyspace,cf_def.name);
    if (oldCfm == null)     throw new InvalidRequestException("Could not find table definition to modify.");
    if (oldCfm.isMaterializedView())     throw new InvalidRequestException("Cannot modify Materialized View table " + oldCfm.cfName + " as it may break the schema. You should use cqlsh to modify Materialized View tables instead.");
    if (!oldCfm.getMaterializedViews().isEmpty())     throw new InvalidRequestException("Cannot modify table with Materialized View " + oldCfm.cfName + " as it may break the schema. You should use cqlsh to modify tables with Materialized Views instead.");
    if (!oldCfm.isThriftCompatible())     throw new InvalidRequestException("Cannot modify CQL3 table " + oldCfm.cfName + " as it may break the schema. You should use cqlsh to modify CQL3 tables instead.");
    CFMetaData cfm=ThriftConversion.fromThriftForUpdate(cf_def,oldCfm);
    cfm.params.compaction.validate();
    if (!oldCfm.getTriggers().equals(cfm.getTriggers()))     state().ensureIsSuper("Only superusers are allowed to add or remove triggers.");
    MigrationManager.announceColumnFamilyUpdate(cfm,true);
    return Schema.instance.getVersion().toString();
  }
 catch (  RequestValidationException e) {
    throw ThriftConversion.toThrift(e);
  }
}
