{
  ThriftClientState cState=state();
  String keyspace=cState.getKeyspace();
  cState.hasColumnFamilyAccess(keyspace,column_parent.column_family,Permission.MODIFY);
  CFMetaData metadata=ThriftValidation.validateColumnFamily(keyspace,column_parent.column_family,false);
  ThriftValidation.validateKey(metadata,key);
  ThriftValidation.validateColumnParent(metadata,column_parent);
  if (metadata.cfType == ColumnFamilyType.Super && column_parent.super_column == null) {
    throw new org.apache.cassandra.exceptions.InvalidRequestException("missing mandatory super column name for super CF " + column_parent.column_family);
  }
  ThriftValidation.validateColumnNames(metadata,column_parent,Arrays.asList(column.name));
  ThriftValidation.validateColumnData(metadata,key,column,column_parent.super_column != null);
  RowMutation rm;
  try {
    ByteBuffer name=column.name;
    if (metadata.isSuper())     name=CompositeType.build(column_parent.super_column,name);
    ColumnFamily cf=ArrayBackedSortedColumns.factory.create(cState.getKeyspace(),column_parent.column_family);
    cf.addColumn(name,column.value,column.timestamp,column.ttl);
    rm=new RowMutation(cState.getKeyspace(),key,cf);
  }
 catch (  MarshalException e) {
    throw new org.apache.cassandra.exceptions.InvalidRequestException(e.getMessage());
  }
  doInsert(consistency_level,Arrays.asList(rm));
}
