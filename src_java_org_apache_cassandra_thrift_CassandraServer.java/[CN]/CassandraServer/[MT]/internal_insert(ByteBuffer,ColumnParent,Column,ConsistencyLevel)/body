{
  ThriftClientState cState=state();
  String keyspace=cState.getKeyspace();
  cState.hasColumnFamilyAccess(keyspace,column_parent.column_family,Permission.MODIFY);
  CFMetaData metadata=ThriftValidation.validateColumnFamily(keyspace,column_parent.column_family,false);
  if (metadata.isMaterializedView())   throw new org.apache.cassandra.exceptions.InvalidRequestException("Cannot modify Materialized Views directly");
  ThriftValidation.validateKey(metadata,key);
  ThriftValidation.validateColumnParent(metadata,column_parent);
  if (metadata.isSuper() && column_parent.super_column == null) {
    throw new org.apache.cassandra.exceptions.InvalidRequestException("missing mandatory super column name for super CF " + column_parent.column_family);
  }
  ThriftValidation.validateColumnNames(metadata,column_parent,Collections.singletonList(column.name));
  ThriftValidation.validateColumnData(metadata,column_parent.super_column,column);
  org.apache.cassandra.db.Mutation mutation;
  try {
    DecoratedKey dk=StorageService.getPartitioner().decorateKey(key);
    LegacyLayout.LegacyCellName name=LegacyLayout.decodeCellName(metadata,column_parent.super_column,column.name);
    Cell cell=cellFromColumn(metadata,name,column);
    PartitionUpdate update=PartitionUpdate.singleRowUpdate(metadata,dk,BTreeBackedRow.singleCellRow(name.clustering,cell));
    mutation=new org.apache.cassandra.db.Mutation(update);
  }
 catch (  MarshalException|UnknownColumnException e) {
    throw new org.apache.cassandra.exceptions.InvalidRequestException(e.getMessage());
  }
  doInsert(consistency_level,Collections.singletonList(mutation));
}
