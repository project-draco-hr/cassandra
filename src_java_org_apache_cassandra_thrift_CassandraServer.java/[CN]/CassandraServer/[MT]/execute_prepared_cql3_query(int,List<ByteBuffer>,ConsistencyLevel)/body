{
  long queryStartNanoTime=System.nanoTime();
  if (startSessionIfRequested()) {
    Tracing.instance.begin("execute_prepared_cql3_query",ImmutableMap.of("consistency_level",cLevel.name()));
  }
 else {
    logger.trace("execute_prepared_cql3_query");
  }
  try {
    ThriftClientState cState=state();
    ParsedStatement.Prepared prepared=ClientState.getCQLQueryHandler().getPreparedForThrift(itemId);
    if (prepared == null)     throw new InvalidRequestException(String.format("Prepared query with ID %d not found" + " (either the query was not prepared on this host (maybe the host has been restarted?)" + " or you have prepared too many queries and it has been evicted from the internal cache)",itemId));
    logger.trace("Retrieved prepared statement #{} with {} bind markers",itemId,prepared.statement.getBoundTerms());
    return ClientState.getCQLQueryHandler().processPrepared(prepared.statement,cState.getQueryState(),QueryOptions.fromThrift(ThriftConversion.fromThrift(cLevel),bindVariables),null,queryStartNanoTime).toThriftResult();
  }
 catch (  RequestExecutionException e) {
    throw ThriftConversion.rethrow(e);
  }
catch (  RequestValidationException e) {
    throw ThriftConversion.toThrift(e);
  }
 finally {
    Tracing.instance.stopSession();
  }
}
