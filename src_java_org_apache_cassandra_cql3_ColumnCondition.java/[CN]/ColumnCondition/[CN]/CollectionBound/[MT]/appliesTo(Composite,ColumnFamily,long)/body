{
  CollectionType type=(CollectionType)column.type;
  if (type.isMultiCell()) {
    Iterator<Cell> iter=collectionColumns(current.metadata().comparator.create(rowPrefix,column),current,now);
    if (value == null) {
      if (operator == Operator.EQ)       return !iter.hasNext();
 else       if (operator == Operator.NEQ)       return iter.hasNext();
 else       throw new InvalidRequestException(String.format("Invalid comparison with null for operator \"%s\"",operator));
    }
    return valueAppliesTo(type,iter,value,operator);
  }
  Cell cell=current.getColumn(current.metadata().comparator.create(rowPrefix,column));
  if (value == null) {
    if (operator == Operator.EQ)     return cell == null || !cell.isLive(now);
 else     if (operator == Operator.NEQ)     return cell != null && cell.isLive(now);
 else     throw new InvalidRequestException(String.format("Invalid comparison with null for operator \"%s\"",operator));
  }
  ByteBuffer conditionValue;
  if (type.kind == CollectionType.Kind.LIST)   conditionValue=((Lists.Value)value).getWithProtocolVersion(Server.VERSION_3);
 else   if (type.kind == CollectionType.Kind.SET)   conditionValue=((Sets.Value)value).getWithProtocolVersion(Server.VERSION_3);
 else   conditionValue=((Maps.Value)value).getWithProtocolVersion(Server.VERSION_3);
  return compareWithOperator(operator,type,conditionValue,cell.value());
}
