{
  ColumnNameBuilder collectionPrefix=copyOrUpdatePrefix(current.metadata(),rowPrefix).add(column.name.key);
  ColumnSlice[] collectionSlice=new ColumnSlice[]{new ColumnSlice(collectionPrefix.build(),collectionPrefix.buildAsEndOfRange())};
  Iterator<Column> iter=Iterators.filter(current.iterator(collectionSlice),new Predicate<Column>(){
    public boolean apply(    Column c){
      return c.isLive(now);
    }
  }
);
  Term.Terminal v=value.bind(variables);
  if (v == null)   return !iter.hasNext();
switch (type.kind) {
case LIST:
    return listAppliesTo((ListType)type,current.metadata(),iter,((Lists.Value)v).elements);
case SET:
  return setAppliesTo((SetType)type,current.metadata(),iter,((Sets.Value)v).elements);
case MAP:
return mapAppliesTo((MapType)type,current.metadata(),iter,((Maps.Value)v).map);
}
throw new AssertionError();
}
