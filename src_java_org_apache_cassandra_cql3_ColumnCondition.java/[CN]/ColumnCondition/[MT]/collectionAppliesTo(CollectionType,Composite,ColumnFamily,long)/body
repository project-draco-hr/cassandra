{
  CellName name=current.metadata().comparator.create(rowPrefix,column);
  ColumnSlice[] collectionSlice=new ColumnSlice[]{name.slice()};
  Iterator<Cell> iter=Iterators.filter(current.iterator(collectionSlice),new Predicate<Cell>(){
    public boolean apply(    Cell c){
      return c.isLive(now);
    }
  }
);
  Term.Terminal v=value.bind(variables);
  if (v == null)   return !iter.hasNext();
switch (type.kind) {
case LIST:
    return listAppliesTo(iter,((Lists.Value)v).elements);
case SET:
  return setAppliesTo(iter,((Sets.Value)v).elements);
case MAP:
return mapAppliesTo(iter,((Maps.Value)v).map);
}
throw new AssertionError();
}
