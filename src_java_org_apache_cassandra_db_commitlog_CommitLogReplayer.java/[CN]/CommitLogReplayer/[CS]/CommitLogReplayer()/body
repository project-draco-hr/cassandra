{
  this.keyspacesRecovered=new NonBlockingHashSet<Keyspace>();
  this.futures=new ArrayList<Future<?>>();
  this.buffer=new byte[4096];
  this.invalidMutations=new HashMap<UUID,AtomicInteger>();
  this.replayedCount=new AtomicInteger();
  this.checksum=new PureJavaCrc32();
  cfPositions=new HashMap<UUID,ReplayPosition>();
  Ordering<ReplayPosition> replayPositionOrdering=Ordering.from(ReplayPosition.comparator);
  Map<UUID,Pair<ReplayPosition,Long>> truncationPositions=SystemKeyspace.getTruncationRecords();
  for (  ColumnFamilyStore cfs : ColumnFamilyStore.all()) {
    ReplayPosition rp=ReplayPosition.getReplayPosition(cfs.getSSTables());
    Pair<ReplayPosition,Long> truncateRecord=truncationPositions.get(cfs.metadata.cfId);
    ReplayPosition truncatedAt=truncateRecord == null ? null : truncateRecord.left;
    if (truncatedAt != null)     rp=replayPositionOrdering.max(Arrays.asList(rp,truncatedAt));
    cfPositions.put(cfs.metadata.cfId,rp);
  }
  globalPosition=replayPositionOrdering.min(cfPositions.values());
  logger.debug("Global replay position is {} from columnfamilies {}",globalPosition,FBUtilities.toString(cfPositions));
}
