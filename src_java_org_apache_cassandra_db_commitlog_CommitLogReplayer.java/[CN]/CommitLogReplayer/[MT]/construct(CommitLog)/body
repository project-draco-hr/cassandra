{
  Map<UUID,ReplayPosition.ReplayFilter> cfPersisted=new HashMap<>();
  ReplayFilter replayFilter=ReplayFilter.create();
  ReplayPosition globalPosition=null;
  for (  ColumnFamilyStore cfs : ColumnFamilyStore.all()) {
    ReplayPosition truncatedAt=SystemKeyspace.getTruncatedPosition(cfs.metadata.cfId);
    if (truncatedAt != null) {
      long restoreTime=commitLog.archiver.restorePointInTime;
      long truncatedTime=SystemKeyspace.getTruncatedAt(cfs.metadata.cfId);
      if (truncatedTime > restoreTime) {
        if (replayFilter.includes(cfs.metadata)) {
          logger.info("Restore point in time is before latest truncation of table {}.{}. Clearing truncation record.",cfs.metadata.ksName,cfs.metadata.cfName);
          SystemKeyspace.removeTruncationRecord(cfs.metadata.cfId);
          truncatedAt=null;
        }
      }
    }
    ReplayPosition.ReplayFilter filter=new ReplayPosition.ReplayFilter(cfs.getSSTables(),truncatedAt);
    if (!filter.isEmpty())     cfPersisted.put(cfs.metadata.cfId,filter);
 else     globalPosition=ReplayPosition.NONE;
  }
  if (globalPosition == null)   globalPosition=ReplayPosition.firstNotCovered(cfPersisted.values());
  logger.debug("Global replay position is {} from columnfamilies {}",globalPosition,FBUtilities.toString(cfPersisted));
  return new CommitLogReplayer(commitLog,globalPosition,cfPersisted,replayFilter);
}
