{
  if (args.length != 3) {
    System.out.println("Usage : java com.facebook.infrastructure.tools.TokenUpdater <ip:port> <token> <file containing node token info>");
    System.exit(1);
  }
  String ipPort=args[0];
  IPartitioner p=StorageService.getPartitioner();
  Token token=p.getTokenFactory().fromString(args[1]);
  String file=args[2];
  String[] ipPortPair=ipPort.split(":");
  EndPoint target=new EndPoint(ipPortPair[0],Integer.valueOf(ipPortPair[1]));
  ByteArrayOutputStream bos=new ByteArrayOutputStream();
  DataOutputStream dos=new DataOutputStream(bos);
  Token.serializer().serialize(token,dos);
  Message tokenUpdateMessage=new Message(new EndPoint(FBUtilities.getHostName(),port_),"",StorageService.tokenVerbHandler_,new Object[]{bos.toByteArray()});
  BufferedReader bufReader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));
  String line=null;
  while ((line=bufReader.readLine()) != null) {
    String[] nodeTokenPair=line.split(" ");
    Token nodeToken=p.getTokenFactory().fromString(nodeTokenPair[1]);
    tokenUpdateMessage.addHeader(nodeTokenPair[0],p.getTokenFactory().toByteArray(nodeToken));
  }
  System.out.println("Sending a token update message to " + target);
  MessagingService.getMessagingInstance().sendOneWay(tokenUpdateMessage,target);
  Thread.sleep(TokenUpdater.waitTime_);
  System.out.println("Done sending the update message");
}
