{
  ContextState state=ContextState.allocate(3,3,3,HeapAllocator.instance);
  state.writeGlobal(CounterId.fromInt(1),1L,1L);
  state.writeRemote(CounterId.fromInt(2),2L,2L);
  state.writeLocal(CounterId.fromInt(3),3L,3L);
  state.writeGlobal(CounterId.fromInt(4),4L,4L);
  state.writeRemote(CounterId.fromInt(5),5L,5L);
  state.writeLocal(CounterId.fromInt(6),6L,6L);
  state.writeGlobal(CounterId.fromInt(7),7L,7L);
  state.writeRemote(CounterId.fromInt(8),8L,8L);
  state.writeLocal(CounterId.fromInt(9),9L,9L);
  int headerLength=headerSizeLength + 6 * headerEltLength;
  assertEquals(headerLength,cc.findPositionOf(state.context,CounterId.fromInt(1)));
  assertEquals(headerLength + stepLength,cc.findPositionOf(state.context,CounterId.fromInt(2)));
  assertEquals(headerLength + 2 * stepLength,cc.findPositionOf(state.context,CounterId.fromInt(3)));
  assertEquals(headerLength + 3 * stepLength,cc.findPositionOf(state.context,CounterId.fromInt(4)));
  assertEquals(headerLength + 4 * stepLength,cc.findPositionOf(state.context,CounterId.fromInt(5)));
  assertEquals(headerLength + 5 * stepLength,cc.findPositionOf(state.context,CounterId.fromInt(6)));
  assertEquals(headerLength + 6 * stepLength,cc.findPositionOf(state.context,CounterId.fromInt(7)));
  assertEquals(headerLength + 7 * stepLength,cc.findPositionOf(state.context,CounterId.fromInt(8)));
  assertEquals(headerLength + 8 * stepLength,cc.findPositionOf(state.context,CounterId.fromInt(9)));
  assertEquals(-1,cc.findPositionOf(state.context,CounterId.fromInt(0)));
  assertEquals(-1,cc.findPositionOf(state.context,CounterId.fromInt(10)));
  assertEquals(-1,cc.findPositionOf(state.context,CounterId.fromInt(15)));
  assertEquals(-1,cc.findPositionOf(state.context,CounterId.fromInt(20)));
}
