{
  InetAddress from=message.getFrom();
  if (logger_.isTraceEnabled())   logger_.trace("Received a GossipDigestSynMessage from {}",from);
  if (!Gossiper.instance.isEnabled()) {
    if (logger_.isTraceEnabled())     logger_.trace("Ignoring GossipDigestSynMessage because gossip is disabled");
    return;
  }
  byte[] bytes=message.getMessageBody();
  DataInputStream dis=new DataInputStream(new ByteArrayInputStream(bytes));
  try {
    GossipDigestSynMessage gDigestMessage=GossipDigestSynMessage.serializer().deserialize(dis);
    if (!gDigestMessage.clusterId_.equals(DatabaseDescriptor.getClusterName())) {
      logger_.warn("ClusterName mismatch from " + from + " "+ gDigestMessage.clusterId_+ "!="+ DatabaseDescriptor.getClusterName());
      return;
    }
    List<GossipDigest> gDigestList=gDigestMessage.getGossipDigests();
    if (logger_.isTraceEnabled()) {
      StringBuilder sb=new StringBuilder();
      for (      GossipDigest gDigest : gDigestList) {
        sb.append(gDigest);
        sb.append(" ");
      }
      logger_.trace("Gossip syn digests are : " + sb.toString());
    }
    Gossiper.instance.notifyFailureDetector(gDigestList);
    doSort(gDigestList);
    List<GossipDigest> deltaGossipDigestList=new ArrayList<GossipDigest>();
    Map<InetAddress,EndpointState> deltaEpStateMap=new HashMap<InetAddress,EndpointState>();
    Gossiper.instance.examineGossiper(gDigestList,deltaGossipDigestList,deltaEpStateMap);
    GossipDigestAckMessage gDigestAck=new GossipDigestAckMessage(deltaGossipDigestList,deltaEpStateMap);
    Message gDigestAckMessage=Gossiper.instance.makeGossipDigestAckMessage(gDigestAck,message.getVersion());
    if (logger_.isTraceEnabled())     logger_.trace("Sending a GossipDigestAckMessage to {}",from);
    MessagingService.instance().sendOneWay(gDigestAckMessage,from);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
