{
  List<Row> serializedSchema=getSchemaPartitionsForTable(KEYSPACES);
  List<KSMetaData> keyspaces=new ArrayList<>(serializedSchema.size());
  for (  Row partition : serializedSchema) {
    if (isEmptySchemaPartition(partition) || isSystemKeyspaceSchemaPartition(partition))     continue;
    keyspaces.add(createKeyspaceFromSchemaPartitions(partition,readSchemaPartitionForKeyspace(COLUMNFAMILIES,partition.key),readSchemaPartitionForKeyspace(USERTYPES,partition.key)));
    for (    UDFunction function : createFunctionsFromFunctionsPartition(readSchemaPartitionForKeyspace(FUNCTIONS,partition.key)).values())     org.apache.cassandra.cql3.functions.Functions.addFunction(function);
    for (    UDAggregate aggregate : createAggregatesFromAggregatesPartition(readSchemaPartitionForKeyspace(AGGREGATES,partition.key)).values())     org.apache.cassandra.cql3.functions.Functions.addFunction(aggregate);
  }
  return keyspaces;
}
