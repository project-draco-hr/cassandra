{
  ColumnFamily cells=mutation.addOrGet(Aggregates);
  Composite prefix=Aggregates.comparator.make(aggregate.name().name,functionSignatureWithTypes(aggregate));
  CFRowAdder adder=new CFRowAdder(cells,prefix,timestamp);
  adder.resetCollection("argument_types");
  adder.add("return_type",aggregate.returnType().toString());
  adder.add("state_func",aggregate.stateFunction().name().toString());
  if (aggregate.stateType() != null)   adder.add("state_type",aggregate.stateType().toString());
  if (aggregate.finalFunction() != null)   adder.add("final_func",aggregate.finalFunction().name().toString());
  if (aggregate.initialCondition() != null)   adder.add("initcond",aggregate.initialCondition());
  for (  AbstractType<?> argType : aggregate.argTypes())   adder.addListEntry("argument_types",argType.toString());
}
