{
  final SequentialWriter w=createTempFile("brafClose");
  byte[] data=generateByteArray(RandomAccessReader.DEFAULT_BUFFER_SIZE + 20);
  w.write(data);
  w.close();
  final RandomAccessReader r=RandomAccessReader.open(new File(w.getPath()));
  r.close();
  expectException(new Callable<Object>(){
    public Object call() throws IOException {
      return r.read();
    }
  }
,ClosedChannelException.class);
  expectException(new Callable<Object>(){
    public Object call() throws IOException {
      w.write(generateByteArray(1));
      return null;
    }
  }
,ClosedChannelException.class);
  RandomAccessReader copy=RandomAccessReader.open(new File(r.getPath()));
  ByteBuffer contents=copy.readBytes((int)copy.length());
  assertEquals(contents.limit(),data.length);
  assertEquals(ByteBufferUtil.compare(contents,data),0);
}
