{
  int listenPort=DatabaseDescriptor.getThriftPort();
  Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
    public void uncaughtException(    Thread t,    Throwable e){
      logger.error("Fatal exception in thread " + t,e);
    }
  }
);
  CassandraServer peerStorageServer=new CassandraServer();
  peerStorageServer.start();
  Cassandra.Processor processor=new Cassandra.Processor(peerStorageServer);
  TServerSocket tServerSocket=null;
  try {
    ServerSocket serverSocket=new ServerSocket();
    serverSocket.setReuseAddress(true);
    serverSocket.bind(new InetSocketAddress(DatabaseDescriptor.getListenAddress(),listenPort));
    tServerSocket=new TServerSocket(serverSocket);
  }
 catch (  IOException ioe) {
    throw new TTransportException("Could not create ServerSocket on address " + DatabaseDescriptor.getListenAddress() + ".");
  }
  TProtocolFactory tProtocolFactory=new TBinaryProtocol.Factory();
  TThreadPoolServer.Options options=new TThreadPoolServer.Options();
  options.minWorkerThreads=64;
  serverEngine=new TThreadPoolServer(new TProcessorFactory(processor),tServerSocket,new TTransportFactory(),new TTransportFactory(),tProtocolFactory,tProtocolFactory,options);
}
