{
  UUID sessionId=UUIDGen.makeType1UUIDFromHost(FBUtilities.getLocalAddress());
  StreamHeader sh0=new StreamHeader("Keyspace1",sessionId,makePendingFile(true,100,OperationType.BOOTSTRAP));
  StreamHeader sh1=new StreamHeader("Keyspace1",sessionId,makePendingFile(false,100,OperationType.BOOTSTRAP));
  Collection<PendingFile> files=new ArrayList<PendingFile>();
  for (int i=0; i < 50; i++)   files.add(makePendingFile(i % 2 == 0,100,OperationType.BOOTSTRAP));
  StreamHeader sh2=new StreamHeader("Keyspace1",sessionId,makePendingFile(true,100,OperationType.BOOTSTRAP),files);
  StreamHeader sh3=new StreamHeader("Keyspace1",sessionId,null,files);
  StreamHeader sh4=new StreamHeader("Keyspace1",sessionId,makePendingFile(true,100,OperationType.BOOTSTRAP),new ArrayList<PendingFile>());
  DataOutputStream out=getOutput("streaming.StreamHeader.bin");
  StreamHeader.serializer.serialize(sh0,out,getVersion());
  StreamHeader.serializer.serialize(sh1,out,getVersion());
  StreamHeader.serializer.serialize(sh2,out,getVersion());
  StreamHeader.serializer.serialize(sh3,out,getVersion());
  StreamHeader.serializer.serialize(sh4,out,getVersion());
  out.close();
  testSerializedSize(sh0,StreamHeader.serializer);
  testSerializedSize(sh1,StreamHeader.serializer);
  testSerializedSize(sh2,StreamHeader.serializer);
  testSerializedSize(sh3,StreamHeader.serializer);
  testSerializedSize(sh4,StreamHeader.serializer);
}
