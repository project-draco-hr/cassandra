{
  boolean isCommutative=metadata.getDefaultValidator().isCommutative();
  int nulls=0;
  if (cosc.column == null)   nulls++;
  if (cosc.super_column == null)   nulls++;
  if (cosc.counter_column == null)   nulls++;
  if (cosc.counter_super_column == null)   nulls++;
  if (nulls != 3)   throw new org.apache.cassandra.exceptions.InvalidRequestException("ColumnOrSuperColumn must have one (and only one) of column, super_column, counter and counter_super_column");
  if (cosc.column != null) {
    if (isCommutative)     throw new org.apache.cassandra.exceptions.InvalidRequestException("invalid operation for commutative columnfamily " + metadata.cfName);
    validateTtl(cosc.column);
    validateColumnPath(metadata,new ColumnPath(metadata.cfName).setSuper_column((ByteBuffer)null).setColumn(cosc.column.name));
    validateColumnData(metadata,key,cosc.column,false);
  }
  if (cosc.super_column != null) {
    if (isCommutative)     throw new org.apache.cassandra.exceptions.InvalidRequestException("invalid operation for commutative columnfamily " + metadata.cfName);
    for (    Column c : cosc.super_column.columns) {
      validateColumnPath(metadata,new ColumnPath(metadata.cfName).setSuper_column(cosc.super_column.name).setColumn(c.name));
      validateColumnData(metadata,key,c,true);
    }
  }
  if (cosc.counter_column != null) {
    if (!isCommutative)     throw new org.apache.cassandra.exceptions.InvalidRequestException("invalid operation for non commutative columnfamily " + metadata.cfName);
    validateColumnPath(metadata,new ColumnPath(metadata.cfName).setSuper_column((ByteBuffer)null).setColumn(cosc.counter_column.name));
  }
  if (cosc.counter_super_column != null) {
    if (!isCommutative)     throw new org.apache.cassandra.exceptions.InvalidRequestException("invalid operation for non commutative columnfamily " + metadata.cfName);
    for (    CounterColumn c : cosc.counter_super_column.columns)     validateColumnPath(metadata,new ColumnPath(metadata.cfName).setSuper_column(cosc.counter_super_column.name).setColumn(c.name));
  }
}
