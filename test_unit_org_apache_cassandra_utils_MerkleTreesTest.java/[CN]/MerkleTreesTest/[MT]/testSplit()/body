{
  mts.split(tok(4));
  mts.split(tok(6));
  mts.split(tok(7));
  assertEquals(4,mts.size());
  assertEquals(new Range<>(tok(7),tok(-1)),mts.get(tok(-1)));
  assertEquals(new Range<>(tok(-1),tok(4)),mts.get(tok(3)));
  assertEquals(new Range<>(tok(-1),tok(4)),mts.get(tok(4)));
  assertEquals(new Range<>(tok(4),tok(6)),mts.get(tok(6)));
  assertEquals(new Range<>(tok(6),tok(7)),mts.get(tok(7)));
  assertEquals((byte)1,mts.get(tok(4)).depth);
  assertEquals((byte)2,mts.get(tok(6)).depth);
  assertEquals((byte)3,mts.get(tok(7)).depth);
  assertEquals((byte)3,mts.get(tok(-1)).depth);
  try {
    mts.split(tok(-1));
    fail("Shouldn't be able to split outside the initial range.");
  }
 catch (  AssertionError e) {
  }
}
