{
  typeName=createType("CREATE TYPE %s (f1 int, f2 text)");
  tableName=createTable("CREATE TABLE %s (" + " k int PRIMARY KEY," + " v1 int,"+ " v2 ascii,"+ " v3 frozen<" + typeName + ">)");
  userType=Schema.instance.getKSMetaData(KEYSPACE).types.get(ByteBufferUtil.bytes(typeName)).get().freeze();
  functionName=createFunction(KEYSPACE,"int, ascii","CREATE FUNCTION %s (i int, a ascii) " + "CALLED ON NULL INPUT " + "RETURNS int "+ "LANGUAGE java "+ "AS 'return Integer.valueOf(i);'");
  execute("INSERT INTO %s (k, v1 ,v2, v3) VALUES (1, 1, 'foo', {f1:1, f2:'bar'})");
  testSimpleTypes();
  testWildcard();
  testSimpleTypesWithAliases();
  testUserTypes();
  testUserTypesWithAliases();
  testWritetimeAndTTL();
  testWritetimeAndTTLWithAliases();
  testFunction();
  testNoArgFunction();
  testUserDefinedFunction();
  testOverloadedFunction();
  testFunctionWithAlias();
  testNoArgumentFunction();
  testNestedFunctions();
  testNestedFunctionsWithArguments();
  testCount();
  testDuplicateFunctionsWithoutAliases();
  testDuplicateFunctionsWithAliases();
  testSelectDistinct();
  testMultipleAliasesOnSameColumn();
  testMixedColumnTypes();
  testMultipleUnaliasedSelectionOfSameColumn();
  testUserDefinedAggregate();
}
