{
  IndexSummary.KeyPosition sampledPosition=getIndexScanPosition(decoratedKey);
  if (sampledPosition == null)   return 0;
  Iterator<FileDataInput> segiter=ifile.iterator(sampledPosition.indexPosition,INDEX_FILE_BUFFER_BYTES);
  while (segiter.hasNext()) {
    FileDataInput input=segiter.next();
    try {
      while (!input.isEOF()) {
        DecoratedKey indexDecoratedKey=partitioner.convertFromDiskFormat(FBUtilities.readShortByteArray(input));
        long position=input.readLong();
        int v=indexDecoratedKey.compareTo(decoratedKey);
        if (v >= 0)         return position;
      }
    }
 catch (    IOException e) {
      throw new IOError(e);
    }
 finally {
      try {
        input.close();
      }
 catch (      IOException e) {
        logger.error("error closing file",e);
      }
    }
  }
  return -1;
}
