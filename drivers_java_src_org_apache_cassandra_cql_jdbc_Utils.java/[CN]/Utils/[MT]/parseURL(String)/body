{
  Properties props=new Properties();
  if (!(url == null)) {
    props.setProperty(TAG_PORT_NUMBER,"" + DEFAULT_PORT);
    String rawUri=url.substring(PROTOCOL.length());
    URI uri=null;
    try {
      uri=new URI(rawUri);
    }
 catch (    URISyntaxException e) {
      throw new SQLSyntaxErrorException(e);
    }
    String host=uri.getHost();
    if (host == null)     throw new SQLNonTransientConnectionException(HOST_IN_URL);
    props.setProperty(TAG_SERVER_NAME,host);
    int port=uri.getPort() >= 0 ? uri.getPort() : DEFAULT_PORT;
    props.setProperty(TAG_PORT_NUMBER,"" + port);
    String keyspace=uri.getPath();
    if ((keyspace != null) && (!keyspace.isEmpty())) {
      if (keyspace.startsWith("/"))       keyspace=keyspace.substring(1);
      if (!keyspace.matches("[a-zA-Z]\\w+"))       throw new SQLNonTransientConnectionException(String.format(BAD_KEYSPACE,keyspace));
      props.setProperty(TAG_DATABASE_NAME,keyspace);
    }
    if (uri.getUserInfo() != null)     throw new SQLNonTransientConnectionException(URI_IS_SIMPLE);
  }
  if (logger.isTraceEnabled())   logger.trace("URL : '{}' parses to: {}",url,props);
  return props;
}
