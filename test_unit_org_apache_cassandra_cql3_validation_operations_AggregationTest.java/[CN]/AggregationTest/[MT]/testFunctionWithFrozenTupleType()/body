{
  createTable("CREATE TABLE %s (a int PRIMARY KEY, b frozen<tuple<int, int>>)");
  createIndex("CREATE INDEX ON %s (b)");
  execute("INSERT INTO %s (a, b) VALUES (?, ?)",0,tuple());
  execute("INSERT INTO %s (a, b) VALUES (?, ?)",1,tuple(1,2));
  execute("INSERT INTO %s (a, b) VALUES (?, ?)",2,tuple(4,5));
  execute("INSERT INTO %s (a, b) VALUES (?, ?)",3,tuple(7,8));
  String fState=createFunction(KEYSPACE,"tuple<int, int>","CREATE FUNCTION %s (state tuple<int, int>, values tuple<int, int>) " + "CALLED ON NULL INPUT " + "RETURNS tuple<int, int> "+ "LANGUAGE java\n"+ "AS 'return values;';");
  String fFinal=createFunction(KEYSPACE,"tuple<int, int>","CREATE FUNCTION %s(state tuple<int, int>) " + "CALLED ON NULL INPUT " + "RETURNS tuple<int, int> "+ "LANGUAGE java "+ "AS 'return state;'");
  assertInvalidMessage("The function state type should not be frozen","CREATE AGGREGATE %s(tuple<int, int>) " + "SFUNC " + fState + " "+ "STYPE frozen<tuple<int, int>> "+ "FINALFUNC "+ fFinal+ " "+ "INITCOND null");
  String aggregation=createAggregate(KEYSPACE,"tuple<int, int>","CREATE AGGREGATE %s(tuple<int, int>) " + "SFUNC " + fState + " "+ "STYPE tuple<int, int> "+ "FINALFUNC "+ fFinal+ " "+ "INITCOND null");
  assertRows(execute("SELECT " + aggregation + "(b) FROM %s"),row(tuple(7,8)));
  assertInvalidMessage("The function arguments should not be frozen","DROP AGGREGATE %s (frozen<tuple<int, int>>);");
}
