{
  final ByteBuffer buf=ByteBuffer.wrap(bytes);
  return new ReadableByteChannel(){
    @Override public boolean isOpen(){
      return false;
    }
    @Override public void close() throws IOException {
    }
    @Override public int read(    ByteBuffer dst) throws IOException {
      int read=Math.min(dst.remaining(),buf.remaining());
      buf.limit(buf.position() + read);
      dst.put(buf);
      buf.limit(buf.capacity());
      return read == 0 ? -1 : read;
    }
  }
;
}
