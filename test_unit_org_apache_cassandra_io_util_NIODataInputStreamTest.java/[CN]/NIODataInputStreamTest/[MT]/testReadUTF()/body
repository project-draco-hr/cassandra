{
  final ByteArrayOutputStream baos=new ByteArrayOutputStream();
  DataOutputStream daos=new DataOutputStream(baos);
  String simple="foobar42";
  assertEquals(2,BufferedDataOutputStreamTest.twoByte.getBytes(Charsets.UTF_8).length);
  assertEquals(3,BufferedDataOutputStreamTest.threeByte.getBytes(Charsets.UTF_8).length);
  assertEquals(4,BufferedDataOutputStreamTest.fourByte.getBytes(Charsets.UTF_8).length);
  daos.writeUTF(simple);
  daos.writeUTF(BufferedDataOutputStreamTest.twoByte);
  daos.writeUTF(BufferedDataOutputStreamTest.threeByte);
  daos.writeUTF(BufferedDataOutputStreamTest.fourByte);
  NIODataInputStream is=new NIODataInputStream(new ReadableByteChannel(){
    @Override public boolean isOpen(){
      return false;
    }
    @Override public void close() throws IOException {
    }
    @Override public int read(    ByteBuffer dst) throws IOException {
      dst.put(baos.toByteArray());
      return baos.toByteArray().length;
    }
  }
,4096);
  assertEquals(simple,is.readUTF());
  assertEquals(BufferedDataOutputStreamTest.twoByte,is.readUTF());
  assertEquals(BufferedDataOutputStreamTest.threeByte,is.readUTF());
  assertEquals(BufferedDataOutputStreamTest.fourByte,is.readUTF());
}
