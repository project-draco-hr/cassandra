{
  RangeIterator.Builder<Long,Token> builder=RangeIntersectionIterator.builder(strategy);
  builder.add(new LongIterator(new long[]{2L,3L,5L,6L}));
  builder.add(new LongIterator(new long[]{1L,7L}));
  builder.add(new LongIterator(new long[]{4L,8L,9L,10L}));
  Assert.assertEquals(convert(),convert(builder.build()));
  builder=RangeIntersectionIterator.builder(strategy);
  builder.add(new LongIterator(new long[]{1L,5L,7L,9L}));
  builder.add(new LongIterator(new long[]{6L}));
  RangeIterator<Long,Token> range=builder.build();
  Assert.assertNotNull(range);
  Assert.assertFalse(range.hasNext());
  builder=RangeIntersectionIterator.builder(strategy);
  builder.add(new LongIterator(new long[]{1L,5L,7L,9L}));
  builder.add(new LongIterator(new long[]{0L,10L,12L}));
  range=builder.build();
  Assert.assertNotNull(range);
  Assert.assertFalse(range.hasNext());
}
