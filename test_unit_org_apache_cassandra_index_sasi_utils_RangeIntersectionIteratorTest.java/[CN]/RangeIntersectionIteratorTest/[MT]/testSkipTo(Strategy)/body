{
  RangeIterator.Builder<Long,Token> builder=RangeIntersectionIterator.builder(strategy);
  builder.add(new LongIterator(new long[]{1L,4L,6L,7L,9L,10L}));
  builder.add(new LongIterator(new long[]{2L,4L,5L,6L,7L,10L,12L}));
  builder.add(new LongIterator(new long[]{4L,6L,7L,9L,10L}));
  RangeIterator<Long,Token> range=builder.build();
  Assert.assertNotNull(range);
  Assert.assertEquals(4L,(long)range.skipTo(3L).get());
  Assert.assertEquals(4L,(long)range.getCurrent());
  Assert.assertEquals(6L,(long)range.skipTo(5L).get());
  Assert.assertEquals(6L,(long)range.getCurrent());
  Assert.assertEquals(7L,(long)range.skipTo(7L).get());
  Assert.assertEquals(7L,(long)range.getCurrent());
  Assert.assertEquals(7L,(long)range.next().get());
  Assert.assertTrue(range.hasNext());
  Assert.assertEquals(10L,(long)range.getCurrent());
  Assert.assertNull(range.skipTo(11L));
  Assert.assertFalse(range.hasNext());
}
