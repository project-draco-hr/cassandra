{
  if (ranges.isEmpty())   return ranges;
  List<Range<T>> output=new ArrayList<Range<T>>();
  Iterator<Range<T>> iter=ranges.iterator();
  Range<T> current=iter.next();
  @SuppressWarnings("unchecked") T min=(T)current.partitioner.minValue(current.left.getClass());
  while (iter.hasNext()) {
    if (current.right.equals(min)) {
      if (current.left.equals(min))       return Collections.<Range<T>>singletonList(current);
      output.add(new Range<T>(current.left,min));
      return output;
    }
    Range<T> next=iter.next();
    if (next.left.compareTo(current.right) <= 0) {
      if (next.right.equals(min) || current.right.compareTo(next.right) < 0)       current=new Range<T>(current.left,next.right);
    }
 else {
      output.add(current);
      current=next;
    }
  }
  output.add(current);
  return output;
}
