{
  Set<Range> result;
  Set<Range> intersectionSet=this.intersectionWith(rhs);
  if (intersectionSet.isEmpty()) {
    result=new HashSet<Range>();
    result.add(rhs);
  }
 else {
    Range[] intersections=new Range[intersectionSet.size()];
    intersectionSet.toArray(intersections);
    if (intersections.length == 1) {
      result=new HashSet<Range>(rhs.subtractContained(intersections[0]));
    }
 else {
      Range first=intersections[0];
      Range second=intersections[1];
      ArrayList<Range> temp=rhs.subtractContained(first);
      Range single=temp.get(0);
      result=new HashSet<Range>(single.subtractContained(second));
    }
  }
  return result;
}
