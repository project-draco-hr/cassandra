{
  boolean thiswraps=isWrapAround(left,right);
  boolean thatwraps=isWrapAround(that.left,that.right);
  if (thiswraps && thatwraps) {
    return Arrays.asList(new Range((Token)ObjectUtils.max(this.left,that.left),(Token)ObjectUtils.min(this.right,that.right)));
  }
  if (!thiswraps && !thatwraps) {
    if (!(left.compareTo(that.right) < 0 && that.left.compareTo(right) < 0))     return Collections.emptyList();
    return Arrays.asList(new Range((Token)ObjectUtils.max(this.left,that.left),(Token)ObjectUtils.min(this.right,that.right)));
  }
  if (thiswraps && !thatwraps)   return intersectionOneWrapping(this,that);
  assert(!thiswraps && thatwraps);
  return intersectionOneWrapping(that,this);
}
