{
  TOKEN_SCALE=new BigInteger("32");
  byte[] val=DUMMY;
  byte[] childfullval=hashed(val,5,5,4);
  byte[] fullval=hashed(val,5,5,4,3,2,1);
  Range childfull=new Range(tok(-1),tok(4));
  Range full=new Range(tok(-1),tok(-1));
  Range invalid=new Range(tok(4),tok(-1));
  mt=new MerkleTree(partitioner,RECOMMENDED_DEPTH,Integer.MAX_VALUE);
  mt.split(tok(16));
  mt.split(tok(8));
  mt.split(tok(4));
  mt.split(tok(2));
  mt.split(tok(1));
  assertNull(mt.hash(full));
  assertNull(mt.hash(childfull));
  assertNull(mt.hash(invalid));
  mt.get(tok(1)).hash(val);
  mt.get(tok(2)).hash(val);
  mt.get(tok(4)).hash(val);
  mt.get(tok(8)).hash(val);
  mt.get(tok(16)).hash(val);
  mt.get(tok(-1)).hash(val);
  assertHashEquals(fullval,mt.hash(full));
  assertHashEquals(childfullval,mt.hash(childfull));
  assertNull(mt.hash(invalid));
}
