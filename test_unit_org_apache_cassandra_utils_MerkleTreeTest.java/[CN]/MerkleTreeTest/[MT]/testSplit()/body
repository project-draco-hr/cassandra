{
  mt.split(tok(4));
  mt.split(tok(6));
  mt.split(tok(7));
  assertEquals(4,mt.size());
  assertEquals(new Range(tok(7),tok(-1)),mt.get(tok(-1)));
  assertEquals(new Range(tok(-1),tok(4)),mt.get(tok(3)));
  assertEquals(new Range(tok(-1),tok(4)),mt.get(tok(4)));
  assertEquals(new Range(tok(4),tok(6)),mt.get(tok(6)));
  assertEquals(new Range(tok(6),tok(7)),mt.get(tok(7)));
  assertEquals((byte)1,mt.get(tok(4)).depth);
  assertEquals((byte)2,mt.get(tok(6)).depth);
  assertEquals((byte)3,mt.get(tok(7)).depth);
  assertEquals((byte)3,mt.get(tok(-1)).depth);
  try {
    mt.split(tok(-1));
    fail("Shouldn't be able to split outside the initial range.");
  }
 catch (  AssertionError e) {
  }
}
