{
  depth=-1;
  if (target instanceof BTree.Special) {
    if (target == POSITIVE_INFINITY)     moveEnd(node,forwards);
 else     if (target == NEGATIVE_INFINITY)     moveStart(node,forwards);
 else     throw new AssertionError();
    return;
  }
  while (true) {
    int keyEnd=getKeyEnd(node);
    int i=BTree.find(comparator,target,node,0,keyEnd);
    if (i >= 0) {
      push(node,i);
switch (mode) {
case HIGHER:
        successor();
      break;
case LOWER:
    predecessor();
}
return;
}
i=-i - 1;
if (!isLeaf(node)) {
push(node,forwards ? i - 1 : i);
node=(Object[])node[keyEnd + i];
continue;
}
switch (mode) {
case FLOOR:
case LOWER:
i--;
}
if (i < 0) {
push(node,0);
predecessor();
}
 else if (i >= keyEnd) {
push(node,keyEnd - 1);
successor();
}
 else {
push(node,i);
}
return;
}
}
