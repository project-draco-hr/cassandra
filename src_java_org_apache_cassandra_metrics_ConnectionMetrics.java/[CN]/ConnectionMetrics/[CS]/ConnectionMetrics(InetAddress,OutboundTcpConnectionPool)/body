{
  address=ip.getHostAddress().replaceAll(":",".");
  factory=new DefaultNameFactory("Connection",address);
  largeMessagePendingTasks=Metrics.register(factory.createMetricName("LargeMessagePendingTasks"),new Gauge<Integer>(){
    public Integer getValue(){
      return connectionPool.largeMessages.getPendingMessages();
    }
  }
);
  largeMessageCompletedTasks=Metrics.register(factory.createMetricName("LargeMessageCompletedTasks"),new Gauge<Long>(){
    public Long getValue(){
      return connectionPool.largeMessages.getCompletedMesssages();
    }
  }
);
  largeMessageDroppedTasks=Metrics.register(factory.createMetricName("LargeMessageDroppedTasks"),new Gauge<Long>(){
    public Long getValue(){
      return connectionPool.largeMessages.getDroppedMessages();
    }
  }
);
  smallMessagePendingTasks=Metrics.register(factory.createMetricName("SmallMessagePendingTasks"),new Gauge<Integer>(){
    public Integer getValue(){
      return connectionPool.smallMessages.getPendingMessages();
    }
  }
);
  smallMessageCompletedTasks=Metrics.register(factory.createMetricName("SmallMessageCompletedTasks"),new Gauge<Long>(){
    public Long getValue(){
      return connectionPool.smallMessages.getCompletedMesssages();
    }
  }
);
  smallMessageDroppedTasks=Metrics.register(factory.createMetricName("SmallMessageDroppedTasks"),new Gauge<Long>(){
    public Long getValue(){
      return connectionPool.smallMessages.getDroppedMessages();
    }
  }
);
  timeouts=Metrics.meter(factory.createMetricName("Timeouts"));
}
