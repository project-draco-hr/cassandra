{
  state.timer.start();
  boolean success=false;
  String exceptionMessage=null;
  int tries=0;
  for (; tries < state.settings.command.tries; tries++) {
    try {
      success=run.run();
      break;
    }
 catch (    Exception e) {
switch (state.settings.log.level) {
case MINIMAL:
        break;
case NORMAL:
      System.err.println(e);
    break;
case VERBOSE:
  e.printStackTrace(System.err);
break;
default :
throw new AssertionError();
}
exceptionMessage=getExceptionMessage(e);
}
}
state.timer.stop(run.keyCount());
if (!success) {
error(String.format("Operation [%d] x%d key %s (0x%s) %s%n",index,tries,run.key(),ByteBufferUtil.bytesToHex(ByteBufferUtil.bytes(run.key())),(exceptionMessage == null) ? "Data returned was not validated" : "Error executing: " + exceptionMessage));
}
}
