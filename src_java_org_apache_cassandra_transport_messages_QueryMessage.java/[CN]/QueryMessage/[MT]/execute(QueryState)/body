{
  try {
    if (resultPageSize == 0)     throw new ProtocolException("The page size cannot be 0");
    UUID tracingId=null;
    if (isTracingRequested()) {
      tracingId=UUIDGen.getTimeUUID();
      state.prepareTracingSession(tracingId);
    }
    if (state.traceNextQuery()) {
      state.createTracingSession();
      ImmutableMap.Builder<String,String> builder=ImmutableMap.builder();
      builder.put("query",query);
      if (resultPageSize > 0)       builder.put("page_size",Integer.toString(resultPageSize));
      Tracing.instance.begin("Execute CQL3 query",builder.build());
    }
    Message.Response response=QueryProcessor.process(query,values,consistency,state,resultPageSize,pagingState);
    if (tracingId != null)     response.setTracingId(tracingId);
    return response;
  }
 catch (  Exception e) {
    if (!((e instanceof RequestValidationException) || (e instanceof RequestExecutionException)))     logger.error("Unexpected error during query",e);
    return ErrorMessage.fromException(e);
  }
 finally {
    Tracing.instance.stopSession();
  }
}
