{
  while (true) {
    if (current >= suffixes.length) {
      if (lastProcessedSuffix == null)       return endOfData();
      Pair<ByteBuffer,TokenTreeBuilder> result=finishSuffix();
      lastProcessedSuffix=null;
      return result;
    }
    Pair<ByteBuffer,TokenTreeBuilder> suffix=suffixAt(current++);
    if (lastProcessedSuffix == null) {
      lastProcessedSuffix=suffix.left;
      container=new DynamicTokenTreeBuilder(suffix.right);
    }
 else     if (comparator.compare(lastProcessedSuffix,suffix.left) == 0) {
      lastProcessedSuffix=suffix.left;
      container.add(suffix.right);
    }
 else {
      Pair<ByteBuffer,TokenTreeBuilder> result=finishSuffix();
      lastProcessedSuffix=suffix.left;
      container=new DynamicTokenTreeBuilder(suffix.right);
      return result;
    }
  }
}
