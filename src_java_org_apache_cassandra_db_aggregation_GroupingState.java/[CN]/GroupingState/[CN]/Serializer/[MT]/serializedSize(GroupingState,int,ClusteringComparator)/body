{
  boolean hasPartitionKey=state.partitionKey != null;
  long size=TypeSizes.sizeof(hasPartitionKey);
  if (hasPartitionKey) {
    size+=ByteBufferUtil.serializedSizeWithVIntLength(state.partitionKey);
    boolean hasClustering=state.hasClustering();
    size+=TypeSizes.sizeof(hasClustering);
    if (hasClustering) {
      size+=Clustering.serializer.serializedSize(state.clustering,version,comparator.subtypes());
    }
  }
  return size;
}
