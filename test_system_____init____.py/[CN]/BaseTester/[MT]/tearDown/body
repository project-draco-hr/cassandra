def tearDown(self):

    def is_alive(pid):
        try:
            os.kill(pid, 0)
            return 1
        except OSError as err:
            return (err.errno == errno.EPERM)
    if self.runserver:
        spid = pid()
        max_wait = 1
        self.close_client()
        open('/tmp/kill', 'w').write(('killing %s\n' % spid))
        os.kill(spid, signal.SIGTERM)
        slept = 0
        while (slept < max_wait):
            time.sleep(0.5)
            if (not is_alive(spid)):
                break
            slept += 0.5
        time.sleep(1)
        if ((slept > max_wait) and is_alive(spid)):
            os.kill(spid, signal.SIGKILL)
            fpath = os.path.join(root, pid_fname)
            if os.path.exists(fpath):
                os.unlink(fpath)
            raise Exception('Server did not shutdown correctly')
