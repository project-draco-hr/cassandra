{
  File assumptionFile=new File(assumptionDirectory,ASSUMPTIONS_FILENAME);
  if (assumptionFile.isFile()) {
    try {
      JsonFactory f=new JsonFactory();
      JsonParser p=f.createJsonParser(assumptionFile);
      JsonToken token=p.nextToken();
      while (token != JsonToken.END_OBJECT) {
        if (token == JsonToken.FIELD_NAME) {
          String keyspace=p.getText();
          Map<String,Map<String,String>> ksAssumes=assumptions.get(keyspace);
          if (ksAssumes == null) {
            ksAssumes=new HashMap<String,Map<String,String>>();
            assumptions.put(keyspace,ksAssumes);
          }
          token=p.nextToken();
          while (token != JsonToken.END_ARRAY) {
            if (token == JsonToken.FIELD_NAME) {
              String columnFamily=p.getText();
              Map<String,String> cfAssumes=ksAssumes.get(columnFamily);
              if (cfAssumes == null) {
                cfAssumes=new HashMap<String,String>();
                ksAssumes.put(columnFamily,cfAssumes);
              }
              token=p.nextToken();
              while (token != JsonToken.END_ARRAY) {
                if (token == JsonToken.FIELD_NAME) {
                  String prop=p.getText();
                  p.nextToken();
                  String value=p.getText();
                  cfAssumes.put(prop,value);
                }
                token=p.nextToken();
              }
            }
            token=p.nextToken();
          }
        }
        token=p.nextToken();
      }
      sessionState.out.println("Column Family assumptions read from " + assumptionFile);
    }
 catch (    Exception e) {
      sessionState.err.println("Failed reading " + assumptionFile + " file");
    }
  }
}
