{
  if (!CliMain.isConnected())   return;
  int childCount=ast.getChildCount();
  assert(childCount == 1);
  String tableName=ast.getChild(0).getText();
  if (tableName == null) {
    css_.out.println("Keyspace argument required");
    return;
  }
  css_.out.println("Keyspace: " + tableName);
  Map<String,Map<String,String>> columnFamiliesMap;
  try {
    columnFamiliesMap=thriftClient_.describe_keyspace(tableName);
    for (    String columnFamilyName : columnFamiliesMap.keySet()) {
      Map<String,String> columnMap=columnFamiliesMap.get(columnFamilyName);
      String desc=columnMap.get("Desc");
      String columnFamilyType=columnMap.get("Type");
      String sort=columnMap.get("CompareWith");
      String flushperiod=columnMap.get("FlushPeriodInMinutes");
      css_.out.println(desc);
      css_.out.println("Column Family Name: " + columnFamilyName);
      css_.out.println("Column Family Type: " + columnFamilyType);
      css_.out.println("Column Sorted By: " + sort);
      css_.out.println("flush period: " + flushperiod + " minutes");
      css_.out.println("------");
    }
  }
 catch (  NotFoundException e) {
    css_.out.println("Keyspace " + tableName + " could not be found.");
  }
}
