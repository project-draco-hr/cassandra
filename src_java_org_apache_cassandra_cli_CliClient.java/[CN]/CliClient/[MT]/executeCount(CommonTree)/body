{
  if (!CliMain.isConnected())   return;
  int childCount=ast.getChildCount();
  assert(childCount == 1);
  CommonTree columnFamilySpec=(CommonTree)ast.getChild(0);
  assert(columnFamilySpec.getType() == CliParser.NODE_COLUMN_ACCESS);
  String tableName=CliCompiler.getTableName(columnFamilySpec);
  String key=CliCompiler.getKey(columnFamilySpec);
  String columnFamily=CliCompiler.getColumnFamily(columnFamilySpec);
  int columnSpecCnt=CliCompiler.numColumnSpecifiers(columnFamilySpec);
  ColumnParent colParent;
  if (columnSpecCnt == 0) {
    colParent=new ColumnParent(columnFamily).setSuper_column(null);
  }
 else {
    assert(columnSpecCnt == 1);
    colParent=new ColumnParent(columnFamily).setSuper_column(CliCompiler.getColumn(columnFamilySpec,0).getBytes("UTF-8"));
  }
  int count=thriftClient_.get_count(tableName,key.getBytes(),colParent,ConsistencyLevel.ONE);
  css_.out.printf("%d columns\n",count);
}
