{
  CommonTree ast=null;
  ast=CliCompiler.compileQuery(stmt);
  try {
switch (ast.getType()) {
case CliParser.NODE_EXIT:
      cleanupAndExit();
    break;
case CliParser.NODE_THRIFT_GET:
  executeGet(ast);
break;
case CliParser.NODE_HELP:
printCmdHelp();
break;
case CliParser.NODE_THRIFT_SET:
executeSet(ast);
break;
case CliParser.NODE_THRIFT_DEL:
executeDelete(ast);
break;
case CliParser.NODE_THRIFT_COUNT:
executeCount(ast);
break;
case CliParser.NODE_SHOW_CLUSTER_NAME:
executeShowClusterName();
break;
case CliParser.NODE_SHOW_VERSION:
executeShowVersion();
break;
case CliParser.NODE_SHOW_TABLES:
executeShowTables(ast);
break;
case CliParser.NODE_DESCRIBE_TABLE:
executeDescribeTable(ast);
break;
case CliParser.NODE_USE_TABLE:
executeUseTable(ast);
break;
case CliParser.NODE_CONNECT:
executeConnect(ast);
break;
case CliParser.NODE_NO_OP:
break;
default :
css_.err.println("Invalid Statement (Type: " + ast.getType() + ")");
break;
}
}
 catch (UnsupportedEncodingException e) {
throw new RuntimeException("Unable to encode string as UTF-8",e);
}
}
