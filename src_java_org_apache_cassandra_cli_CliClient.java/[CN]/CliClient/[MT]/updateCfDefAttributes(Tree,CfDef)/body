{
  CfDef cfDef=new CfDef(cfDefToUpdate);
  for (int i=1; i < statement.getChildCount(); i+=2) {
    String currentArgument=statement.getChild(i).getText().toUpperCase();
    AddColumnFamilyArgument mArgument=AddColumnFamilyArgument.valueOf(currentArgument);
    String mValue=statement.getChild(i + 1).getText();
switch (mArgument) {
case COLUMN_TYPE:
      cfDef.setColumn_type(CliUtils.unescapeSQLString(mValue));
    break;
case COMPARATOR:
  cfDef.setComparator_type(CliUtils.unescapeSQLString(mValue));
break;
case SUBCOMPARATOR:
cfDef.setSubcomparator_type(CliUtils.unescapeSQLString(mValue));
break;
case COMMENT:
cfDef.setComment(CliUtils.unescapeSQLString(mValue));
break;
case ROWS_CACHED:
cfDef.setRow_cache_size(Double.parseDouble(mValue));
break;
case PRELOAD_ROW_CACHE:
cfDef.setPreload_row_cache(Boolean.parseBoolean(CliUtils.unescapeSQLString(mValue)));
break;
case KEY_CACHE_SIZE:
cfDef.setKey_cache_size(Double.parseDouble(mValue));
break;
case READ_REPAIR_CHANCE:
cfDef.setRead_repair_chance(Double.parseDouble(mValue));
break;
case GC_GRACE_SECONDS:
cfDef.setGc_grace_seconds(Integer.parseInt(mValue));
break;
case COLUMN_METADATA:
Tree arrayOfMetaAttributes=statement.getChild(i + 1);
if (!arrayOfMetaAttributes.getText().equals("ARRAY")) {
throw new RuntimeException("'column_metadata' format - [{ k:v, k:v, ..}, { ... }, ...]");
}
cfDef.setColumn_metadata(getCFColumnMetaFromTree(arrayOfMetaAttributes));
break;
case MEMTABLE_OPERATIONS_IN_MILLIONS:
cfDef.setMemtable_operations_in_millions(Double.parseDouble(mValue));
break;
case MEMTABLE_FLUSH_AFTER_MINS:
cfDef.setMemtable_flush_after_mins(Integer.parseInt(mValue));
break;
case MEMTABLE_THROUGHPUT_IN_MB:
cfDef.setMemtable_throughput_in_mb(Integer.parseInt(mValue));
break;
default :
assert(false);
}
}
return cfDef;
}
