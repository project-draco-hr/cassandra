{
  KsDef ksDef=new KsDef(ksDefToUpdate);
  ksDef.setCf_defs(new LinkedList<CfDef>());
  for (int i=1; i < statement.getChildCount(); i+=2) {
    String currentStatement=statement.getChild(i).getText().toUpperCase();
    AddKeyspaceArgument mArgument=AddKeyspaceArgument.valueOf(currentStatement);
    String mValue=statement.getChild(i + 1).getText();
switch (mArgument) {
case PLACEMENT_STRATEGY:
      ksDef.setStrategy_class(CliUtils.unescapeSQLString(mValue));
    break;
case REPLICATION_FACTOR:
  ksDef.setReplication_factor(Integer.parseInt(mValue));
break;
case STRATEGY_OPTIONS:
ksDef.setStrategy_options(getStrategyOptionsFromTree(statement.getChild(i + 1)));
break;
default :
assert(false);
}
}
if (ksDef.getStrategy_class().contains(".NetworkTopologyStrategy")) {
Map<String,String> currentStrategyOptions=ksDef.getStrategy_options();
if (currentStrategyOptions == null || currentStrategyOptions.isEmpty()) {
SimpleSnitch snitch=new SimpleSnitch();
Map<String,String> options=new HashMap<String,String>();
try {
options.put(snitch.getDatacenter(InetAddress.getLocalHost()),"1");
}
 catch (UnknownHostException e) {
throw new RuntimeException(e.getMessage());
}
ksDef.setStrategy_options(options);
}
}
return ksDef;
}
