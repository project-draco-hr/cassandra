{
  output.append("create keyspace ").append(CliUtils.maybeEscapeName(ksDef.name));
  writeAttr(output,true,"placement_strategy",normaliseType(ksDef.strategy_class,"org.apache.cassandra.locator"));
  if (ksDef.strategy_options != null && !ksDef.strategy_options.isEmpty()) {
    final StringBuilder opts=new StringBuilder();
    opts.append("{");
    String prefix="";
    for (    Map.Entry<String,String> opt : ksDef.strategy_options.entrySet()) {
      opts.append(prefix + CliUtils.escapeSQLString(opt.getKey()) + " : "+ CliUtils.escapeSQLString(opt.getValue()));
      prefix=", ";
    }
    opts.append("}");
    writeAttrRaw(output,false,"strategy_options",opts.toString());
  }
  writeAttr(output,false,"durable_writes",ksDef.durable_writes);
  output.append(";").append(NEWLINE);
  output.append(NEWLINE);
  output.append("use " + CliUtils.maybeEscapeName(ksDef.name) + ";");
  output.append(NEWLINE);
  output.append(NEWLINE);
  Collections.sort(ksDef.cf_defs,new CfDefNamesComparator());
  for (  CfDef cfDef : ksDef.cf_defs)   showColumnFamily(output,cfDef);
  output.append(NEWLINE);
  output.append(NEWLINE);
}
