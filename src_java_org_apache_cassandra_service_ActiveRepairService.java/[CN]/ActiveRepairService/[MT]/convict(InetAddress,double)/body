{
  if (phi < 2 * DatabaseDescriptor.getPhiConvictThreshold() || parentRepairSessions.isEmpty())   return;
  Set<UUID> toRemove=new HashSet<>();
  for (  Map.Entry<UUID,ParentRepairSession> repairSessionEntry : parentRepairSessions.entrySet()) {
    if (repairSessionEntry.getValue().coordinator.equals(ep)) {
      toRemove.add(repairSessionEntry.getKey());
    }
  }
  if (!toRemove.isEmpty()) {
    logger.debug("Failing {} in parent repair sessions",toRemove);
    for (    UUID id : toRemove) {
      ParentRepairSession failed=parentRepairSessions.get(id);
      parentRepairSessions.replace(id,failed,failed.asFailed());
    }
  }
}
