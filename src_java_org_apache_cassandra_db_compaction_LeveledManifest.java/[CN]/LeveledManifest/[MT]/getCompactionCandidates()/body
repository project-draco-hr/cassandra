{
  for (int i=generations.length - 1; i >= 0; i--) {
    List<SSTableReader> sstables=generations[i];
    if (sstables.isEmpty())     continue;
    Set<SSTableReader> sstablesInLevel=Sets.newHashSet(sstables);
    Set<SSTableReader> remaining=Sets.difference(sstablesInLevel,cfs.getDataTracker().getCompacting());
    double score=(double)SSTableReader.getTotalBytes(remaining) / (double)maxBytesForLevel(i);
    logger.debug("Compaction score for level {} is {}",i,score);
    if (score > 1.001 || (i == 0 && sstables.size() > 1)) {
      Collection<SSTableReader> candidates=getCandidatesFor(i);
      if (logger.isDebugEnabled())       logger.debug("Compaction candidates for L{} are {}",i,toString(candidates));
      if (!candidates.isEmpty())       return candidates;
    }
  }
  return Collections.emptyList();
}
