{
  OptionsBuilder optionsBuilder=new OptionsBuilder();
  if (optionsMap.containsKey(CASE_SENSITIVE) && (optionsMap.containsKey(NORMALIZE_LOWERCASE) || optionsMap.containsKey(NORMALIZE_UPPERCASE)))   throw new IllegalArgumentException("case_sensitive option cannot be specified together " + "with either normalize_lowercase or normalize_uppercase");
  for (  Map.Entry<String,String> entry : optionsMap.entrySet()) {
switch (entry.getKey()) {
case NORMALIZE_LOWERCASE:
{
        boolean bool=Boolean.parseBoolean(entry.getValue());
        optionsBuilder=optionsBuilder.lowerCaseOutput(bool);
        break;
      }
case NORMALIZE_UPPERCASE:
{
      boolean bool=Boolean.parseBoolean(entry.getValue());
      optionsBuilder=optionsBuilder.upperCaseOutput(bool);
      break;
    }
case CASE_SENSITIVE:
{
    boolean bool=Boolean.parseBoolean(entry.getValue());
    optionsBuilder=optionsBuilder.caseSensitive(bool);
    break;
  }
}
}
return optionsBuilder.build();
}
