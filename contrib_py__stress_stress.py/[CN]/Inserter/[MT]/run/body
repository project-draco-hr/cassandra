def run(self):
    data = md5(str(get_ident())).hexdigest()
    columns = [Column(('C' + str(j)), data, Clock((time.time() * 1000000))) for j in xrange(columns_per_key)]
    fmt = (('%0' + str(len(str(total_keys)))) + 'd')
    if ('super' == options.cftype):
        supers = [SuperColumn(('S' + str(j)), columns) for j in xrange(supers_per_key)]
    for i in self.range:
        key = (fmt % i)
        if ('super' == options.cftype):
            cfmap = {key: {'Super1': [Mutation(ColumnOrSuperColumn(super_column=s)) for s in supers], }, }
        else:
            cfmap = {key: {'Standard1': [Mutation(ColumnOrSuperColumn(column=c)) for c in columns], }, }
        start = time.time()
        try:
            self.cclient.batch_mutate(cfmap, consistency)
        except KeyboardInterrupt:
            raise
        except Exception as e:
            if options.ignore:
                print e
            else:
                raise
        self.latencies[self.idx] += (time.time() - start)
        self.opcounts[self.idx] += 1
        self.keycounts[self.idx] += 1
