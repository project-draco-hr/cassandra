{
  if (maxColumnNames.isEmpty())   return minimalBuffersFor(candidates);
  if (candidates.isEmpty())   return maxColumnNames;
  if (columnNameComparator instanceof CompositeType) {
    CompositeType ct=(CompositeType)columnNameComparator;
    List<ByteBuffer> biggest=maxColumnNames.size() > candidates.size() ? maxColumnNames : candidates;
    int typeCount=getTypeCount(ct);
    int minSize=Math.min(typeCount,Math.min(maxColumnNames.size(),candidates.size()));
    int maxSize=Math.min(typeCount,biggest.size());
    List<ByteBuffer> retList=new ArrayList<ByteBuffer>(maxSize);
    for (int i=0; i < minSize; i++)     retList.add(minimalBufferFor(max(maxColumnNames.get(i),candidates.get(i),ct.types.get(i))));
    for (int i=minSize; i < maxSize; i++)     retList.add(minimalBufferFor(biggest.get(i)));
    return retList;
  }
 else {
    return Collections.singletonList(minimalBufferFor(max(maxColumnNames.get(0),candidates.get(0),columnNameComparator)));
  }
}
