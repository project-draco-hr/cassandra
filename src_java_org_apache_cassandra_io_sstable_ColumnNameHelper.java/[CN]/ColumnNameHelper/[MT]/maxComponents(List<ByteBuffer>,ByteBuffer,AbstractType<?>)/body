{
  if (comparator instanceof AbstractCompositeType) {
    if (maxSeen.size() == 0)     return Arrays.asList(((AbstractCompositeType)comparator).split(candidate));
    List<AbstractCompositeType.CompositeComponent> components=((AbstractCompositeType)comparator).deconstruct(candidate);
    List<ByteBuffer> retList=new ArrayList<ByteBuffer>(components.size());
    for (int i=0; i < maxSeen.size(); i++) {
      AbstractCompositeType.CompositeComponent component=components.get(i);
      retList.add(ColumnNameHelper.max(maxSeen.get(i),component.value,component.comparator));
    }
    return retList;
  }
 else {
    if (maxSeen.size() == 0)     return Collections.singletonList(candidate);
    return Collections.singletonList(ColumnNameHelper.max(maxSeen.get(0),candidate,comparator));
  }
}
