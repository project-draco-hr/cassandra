{
  for (int i=0; i < session.getKeysPerThread(); i++) {
    byte[] rawKey=generateKey();
    ByteBuffer key=ByteBuffer.wrap(rawKey);
    for (int j=0; j < session.getSuperColumns(); j++) {
      String superColumn='S' + Integer.toString(j);
      ColumnParent parent=new ColumnParent("Super1").setSuper_column(superColumn.getBytes());
      long start=System.currentTimeMillis();
      boolean success=false;
      String exceptionMessage=null;
      for (int t=0; t < session.getRetryTimes(); t++) {
        if (success)         break;
        try {
          List<ColumnOrSuperColumn> columns;
          columns=client.get_slice(key,parent,predicate,session.getConsistencyLevel());
          success=(columns.size() != 0);
        }
 catch (        Exception e) {
          exceptionMessage=getExceptionMessage(e);
          success=false;
        }
      }
      if (!success) {
        System.err.printf("Thread [%d] retried %d times - error reading key %s %s%n",index,session.getRetryTimes(),new String(rawKey),(exceptionMessage == null) ? "" : "(" + exceptionMessage + ")");
        if (!session.ignoreErrors())         return;
      }
      session.operationCount.getAndIncrement(index);
      session.keyCount.getAndIncrement(index);
      session.latencies.getAndAdd(index,System.currentTimeMillis() - start);
    }
  }
}
