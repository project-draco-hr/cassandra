{
  for (int i=0; i < session.getKeysPerThread(); i++) {
    ByteBuffer key=ByteBuffer.wrap(generateKey());
    for (int j=0; j < session.getSuperColumns(); j++) {
      String superColumn='S' + Integer.toString(j);
      ColumnParent parent=new ColumnParent("Super1").setSuper_column(superColumn.getBytes());
      long start=System.currentTimeMillis();
      try {
        List<ColumnOrSuperColumn> columns;
        columns=client.get_slice(key,parent,predicate,session.getConsistencyLevel());
        if (columns.size() == 0) {
          System.err.printf("Key %s not found in Super Column %s.%n",ByteBufferUtil.string(key),superColumn);
          if (!session.ignoreErrors())           break;
        }
      }
 catch (      Exception e) {
        try {
          System.err.printf("Error while reading Super Column %s key %s - %s%n",superColumn,ByteBufferUtil.string(key),getExceptionMessage(e));
        }
 catch (        CharacterCodingException e1) {
          throw new AssertionError(e1);
        }
        if (!session.ignoreErrors())         break;
      }
      session.operationCount.getAndIncrement(index);
      session.keyCount.getAndIncrement(index);
      session.latencies.getAndAdd(index,System.currentTimeMillis() - start);
    }
  }
}
