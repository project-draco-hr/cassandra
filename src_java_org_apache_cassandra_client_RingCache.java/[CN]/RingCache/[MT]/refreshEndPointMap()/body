{
  for (  String seed : seeds_) {
    try {
      TSocket socket=new TSocket(seed,port_);
      TBinaryProtocol binaryProtocol=new TBinaryProtocol(socket,false,false);
      Cassandra.Client client=new Cassandra.Client(binaryProtocol);
      socket.open();
      Map<String,String> tokenToHostMap=(Map<String,String>)JSONValue.parse(client.get_string_property(CassandraServer.TOKEN_MAP));
      BiMap<Token,InetAddress> tokenEndpointMap=HashBiMap.create();
      for (      Map.Entry<String,String> entry : tokenToHostMap.entrySet()) {
        Token token=StorageService.getPartitioner().getTokenFactory().fromString(entry.getKey());
        String host=entry.getValue();
        try {
          tokenEndpointMap.put(token,InetAddress.getByName(host));
        }
 catch (        UnknownHostException e) {
          throw new AssertionError(e);
        }
      }
      TokenMetadata tokenMetadata=new TokenMetadata(tokenEndpointMap);
      nodePicker_=StorageService.getReplicationStrategy(tokenMetadata);
      break;
    }
 catch (    TException e) {
      logger_.debug("Error contacting seed " + seed + " "+ e.getMessage());
    }
  }
}
