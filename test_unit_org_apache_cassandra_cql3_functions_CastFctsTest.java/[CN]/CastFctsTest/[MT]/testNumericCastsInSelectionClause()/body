{
  createTable("CREATE TABLE %s (a tinyint primary key," + " b smallint," + " c int,"+ " d bigint,"+ " e float,"+ " f double,"+ " g decimal,"+ " h varint,"+ " i int)");
  execute("INSERT INTO %s (a, b, c, d, e, f, g, h) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",(byte)1,(short)2,3,4L,5.2F,6.3,BigDecimal.valueOf(6.3),BigInteger.valueOf(4));
  assertColumnNames(execute("SELECT CAST(b AS int), CAST(c AS int), CAST(d AS double) FROM %s"),"cast(b as int)","c","cast(d as double)");
  assertRows(execute("SELECT CAST(a AS tinyint), " + "CAST(b AS tinyint), " + "CAST(c AS tinyint), "+ "CAST(d AS tinyint), "+ "CAST(e AS tinyint), "+ "CAST(f AS tinyint), "+ "CAST(g AS tinyint), "+ "CAST(h AS tinyint), "+ "CAST(i AS tinyint) FROM %s"),row((byte)1,(byte)2,(byte)3,(byte)4L,(byte)5,(byte)6,(byte)6,(byte)4,null));
  assertRows(execute("SELECT CAST(a AS smallint), " + "CAST(b AS smallint), " + "CAST(c AS smallint), "+ "CAST(d AS smallint), "+ "CAST(e AS smallint), "+ "CAST(f AS smallint), "+ "CAST(g AS smallint), "+ "CAST(h AS smallint), "+ "CAST(i AS smallint) FROM %s"),row((short)1,(short)2,(short)3,(short)4L,(short)5,(short)6,(short)6,(short)4,null));
  assertRows(execute("SELECT CAST(a AS int), " + "CAST(b AS int), " + "CAST(c AS int), "+ "CAST(d AS int), "+ "CAST(e AS int), "+ "CAST(f AS int), "+ "CAST(g AS int), "+ "CAST(h AS int), "+ "CAST(i AS int) FROM %s"),row(1,2,3,4,5,6,6,4,null));
  assertRows(execute("SELECT CAST(a AS bigint), " + "CAST(b AS bigint), " + "CAST(c AS bigint), "+ "CAST(d AS bigint), "+ "CAST(e AS bigint), "+ "CAST(f AS bigint), "+ "CAST(g AS bigint), "+ "CAST(h AS bigint), "+ "CAST(i AS bigint) FROM %s"),row(1L,2L,3L,4L,5L,6L,6L,4L,null));
  assertRows(execute("SELECT CAST(a AS float), " + "CAST(b AS float), " + "CAST(c AS float), "+ "CAST(d AS float), "+ "CAST(e AS float), "+ "CAST(f AS float), "+ "CAST(g AS float), "+ "CAST(h AS float), "+ "CAST(i AS float) FROM %s"),row(1.0F,2.0F,3.0F,4.0F,5.2F,6.3F,6.3F,4.0F,null));
  assertRows(execute("SELECT CAST(a AS double), " + "CAST(b AS double), " + "CAST(c AS double), "+ "CAST(d AS double), "+ "CAST(e AS double), "+ "CAST(f AS double), "+ "CAST(g AS double), "+ "CAST(h AS double), "+ "CAST(i AS double) FROM %s"),row(1.0,2.0,3.0,4.0,(double)5.2F,6.3,6.3,4.0,null));
  assertRows(execute("SELECT CAST(a AS decimal), " + "CAST(b AS decimal), " + "CAST(c AS decimal), "+ "CAST(d AS decimal), "+ "CAST(e AS decimal), "+ "CAST(f AS decimal), "+ "CAST(g AS decimal), "+ "CAST(h AS decimal), "+ "CAST(i AS decimal) FROM %s"),row(BigDecimal.valueOf(1.0),BigDecimal.valueOf(2.0),BigDecimal.valueOf(3.0),BigDecimal.valueOf(4.0),BigDecimal.valueOf(5.2F),BigDecimal.valueOf(6.3),BigDecimal.valueOf(6.3),BigDecimal.valueOf(4.0),null));
  assertRows(execute("SELECT CAST(a AS ascii), " + "CAST(b AS ascii), " + "CAST(c AS ascii), "+ "CAST(d AS ascii), "+ "CAST(e AS ascii), "+ "CAST(f AS ascii), "+ "CAST(g AS ascii), "+ "CAST(h AS ascii), "+ "CAST(i AS ascii) FROM %s"),row("1","2","3","4","5.2","6.3","6.3","4",null));
  assertRows(execute("SELECT CAST(a AS text), " + "CAST(b AS text), " + "CAST(c AS text), "+ "CAST(d AS text), "+ "CAST(e AS text), "+ "CAST(f AS text), "+ "CAST(g AS text), "+ "CAST(h AS text), "+ "CAST(i AS text) FROM %s"),row("1","2","3","4","5.2","6.3","6.3","4",null));
}
