{
  final int N=1000;
  Column col1=new Column(ByteBuffer.wrap("c1".getBytes()),ByteBuffer.wrap("v1".getBytes()),0);
  Column col2=new Column(ByteBuffer.wrap("c2".getBytes()),ByteBuffer.wrap("v2".getBytes()),0);
  Map<ByteBuffer,List<ColumnOrSuperColumn>> rows=new HashMap<ByteBuffer,List<ColumnOrSuperColumn>>();
  Map<ByteBuffer,Map<String,List<Mutation>>> batch=new HashMap<ByteBuffer,Map<String,List<Mutation>>>();
  for (int i=0; i < N; i++) {
    String rawKey=String.format("test.key.%d",i);
    ByteBuffer key=ByteBuffer.wrap(rawKey.getBytes());
    Mutation m1=(new Mutation()).setColumn_or_supercolumn((new ColumnOrSuperColumn()).setColumn(col1));
    Mutation m2=(new Mutation()).setColumn_or_supercolumn((new ColumnOrSuperColumn()).setColumn(col2));
    rows.put(key,Arrays.asList(m1.getColumn_or_supercolumn(),m2.getColumn_or_supercolumn()));
    Map<String,List<Mutation>> rowmap=new HashMap<String,List<Mutation>>();
    rowmap.put(STANDARD_CF,Arrays.asList(m1,m2));
    batch.put(key,rowmap);
  }
  client.batch_mutate(batch,ConsistencyLevel.ONE);
  return rows;
}
