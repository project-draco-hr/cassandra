{
  if (!releasedUpdater.compareAndSet(this,0,1)) {
    if (!leak) {
      String id=this.toString();
      logger.error("BAD RELEASE: attempted to release a reference ({}) that has already been released",id);
      if (DEBUG_ENABLED)       debug.log(id);
      throw new IllegalStateException("Attempted to release a reference that has already been released");
    }
    return;
  }
  Throwable fail=globalState.release(this,null);
  if (leak) {
    String id=this.toString();
    logger.error("LEAK DETECTED: a reference ({}) to {} was not released before the reference was garbage collected",id,globalState);
    if (DEBUG_ENABLED)     debug.log(id);
  }
 else   if (DEBUG_ENABLED) {
    debug.deallocate();
  }
  if (fail != null)   logger.error("Error when closing {}",globalState,fail);
}
