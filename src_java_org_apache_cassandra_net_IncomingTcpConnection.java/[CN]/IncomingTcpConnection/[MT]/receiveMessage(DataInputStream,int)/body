{
  int id;
  if (version < MessagingService.VERSION_20)   id=Integer.parseInt(input.readUTF());
 else   id=input.readInt();
  long timestamp=System.currentTimeMillis();
  boolean isCrossNodeTimestamp=false;
  int partial=input.readInt();
  if (DatabaseDescriptor.hasCrossNodeTimeout()) {
    long crossNodeTimestamp=(timestamp & 0xFFFFFFFF00000000L) | (((partial & 0xFFFFFFFFL) << 2) >> 2);
    isCrossNodeTimestamp=(timestamp != crossNodeTimestamp);
    timestamp=crossNodeTimestamp;
  }
  MessageIn message=MessageIn.read(input,version,id);
  if (message == null) {
    return null;
  }
  if (version <= MessagingService.current_version) {
    MessagingService.instance().receive(message,id,timestamp,isCrossNodeTimestamp);
  }
 else {
    logger.debug("Received connection from newer protocol version {}. Ignoring message",version);
  }
  return message.from;
}
