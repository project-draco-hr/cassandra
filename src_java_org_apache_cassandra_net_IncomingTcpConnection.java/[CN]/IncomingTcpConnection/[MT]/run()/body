{
  while (true) {
    try {
      MessagingService.validateMagic(input.readInt());
      int header=input.readInt();
      int type=MessagingService.getBits(header,1,2);
      boolean isStream=MessagingService.getBits(header,3,1) == 1;
      int version=MessagingService.getBits(header,15,8);
      if (isStream) {
        int size=input.readInt();
        byte[] headerBytes=new byte[size];
        input.readFully(headerBytes);
        StreamHeader streamHeader=StreamHeader.serializer().deserialize(new DataInputStream(new ByteArrayInputStream(headerBytes)));
        new IncomingStreamReader(streamHeader,socket.getChannel()).read();
      }
 else {
        int size=input.readInt();
        byte[] contentBytes=new byte[size];
        input.readFully(contentBytes);
        Message message=Message.serializer().deserialize(new DataInputStream(new ByteArrayInputStream(contentBytes)));
        MessagingService.receive(message);
      }
    }
 catch (    EOFException e) {
      if (logger.isTraceEnabled())       logger.trace("eof reading from socket; closing",e);
      break;
    }
catch (    IOException e) {
      if (logger.isDebugEnabled())       logger.debug("error reading from socket; closing",e);
      break;
    }
  }
}
