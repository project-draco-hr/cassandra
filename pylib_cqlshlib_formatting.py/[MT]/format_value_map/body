@formatter_for('dict')
def format_value_map(val, cqltype, encoding, colormap, date_time_format, float_precision, nullval, decimal_sep, thousands_sep, boolean_styles, **_):

    def subformat(v, t):
        return format_value(v, cqltype=t, encoding=encoding, colormap=colormap, date_time_format=date_time_format, float_precision=float_precision, nullval=nullval, quote=True, decimal_sep=decimal_sep, thousands_sep=thousands_sep, boolean_styles=boolean_styles)
    subs = [(subformat(k, cqltype.sub_types[0]), subformat(v, cqltype.sub_types[1])) for (k, v) in sorted(val.items())]
    bval = (('{' + ', '.join((((get_str(k) + ': ') + get_str(v)) for (k, v) in subs))) + '}')
    if (colormap is NO_COLOR_MAP):
        return bval
    (lb, comma, colon, rb) = [((colormap['collection'] + s) + colormap['reset']) for s in ('{', ', ', ': ', '}')]
    coloredval = ((lb + comma.join((((k.coloredval + colon) + v.coloredval) for (k, v) in subs))) + rb)
    displaywidth = ((4 * len(subs)) + sum(((k.displaywidth + v.displaywidth) for (k, v) in subs)))
    return FormattedValue(bval, coloredval, displaywidth)
