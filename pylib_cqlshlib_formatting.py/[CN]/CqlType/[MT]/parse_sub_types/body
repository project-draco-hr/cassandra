@staticmethod
def parse_sub_types(val, ksmeta):
    '\n        Split val into sub-strings separated by commas but only if not within a <> pair\n        Return a list of CqlType instances where each instance is initialized with the sub-strings\n        that were found.\n        '
    last = 0
    level = 0
    ret = []
    for (i, c) in enumerate(val):
        if (c == '<'):
            level += 1
        elif (c == '>'):
            level -= 1
        elif ((c == ',') and (level == 0)):
            ret.append(val[last:i].strip())
            last = (i + 1)
    if (last < (len(val) - 1)):
        ret.append(val[last:].strip())
    return [CqlType(r, ksmeta) for r in ret]
