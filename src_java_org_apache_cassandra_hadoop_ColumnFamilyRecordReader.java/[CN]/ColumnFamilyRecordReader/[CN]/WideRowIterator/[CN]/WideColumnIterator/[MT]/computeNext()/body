{
  AbstractType<?> comp=isSuper ? CompositeType.getInstance(comparator,subComparator) : comparator;
  while (true) {
    if (columns.hasNext()) {
      ColumnOrSuperColumn cosc=columns.next();
      SortedMap<ByteBuffer,Column> map;
      List<Pair<ByteBuffer,Column>> columns=unthriftify(cosc);
      if (columns.size() == 1) {
        map=ImmutableSortedMap.of(columns.get(0).left,columns.get(0).right);
      }
 else {
        assert isSuper;
        map=new TreeMap<>(comp);
        for (        Pair<ByteBuffer,Column> column : columns)         map.put(column.left,column.right);
      }
      return Pair.create(currentRow.key,map);
    }
    if (!rows.hasNext())     return endOfData();
    nextRow();
  }
}
