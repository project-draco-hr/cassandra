{
  if (-1 == endpointsIdx) {
    endpointsIdx=0;
    return location;
  }
 else {
    if (null == endpoints) {
      try {
        for (        String nextLocation : split.getLocations()) {
          try {
            endpoints=sortEndpointsByProximity(nextLocation,Arrays.asList(split.getLocations()),restrictToSameDC);
            if (location.equals(endpoints.get(0))) {
              ++endpointsIdx;
            }
            break;
          }
 catch (          TException e) {
            logger.info(String.format("failed to sortEndpointsByProximity(%s, [%s], %s)",location,StringUtils.join(split.getLocations(),','),restrictToSameDC),e);
          }
catch (          IOException e) {
            logger.info(String.format("failed to sortEndpointsByProximity(%s, [%s], %s)",location,StringUtils.join(split.getLocations(),','),restrictToSameDC),e);
          }
        }
      }
 catch (      InvalidRequestException e) {
        throw new AssertionError(e);
      }
      if (null == endpoints) {
        throw new AssertionError(String.format("failed to find any fallback replica endpoints from %s",StringUtils.join(split.getLocations(),',')));
      }
    }
    if (endpoints.size() > endpointsIdx) {
      return endpoints.get(endpointsIdx++);
    }
  }
  return endOfData();
}
