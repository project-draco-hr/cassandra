{
  if (rows != null && i >= rows.size())   rows=null;
  if (rows != null)   return;
  if (startToken == null) {
    startToken=split.getStartToken();
  }
 else   if (startToken.equals(split.getEndToken())) {
    rows=null;
    return;
  }
  KeyRange keyRange=new KeyRange(batchRowCount).setStart_token(startToken).setEnd_token(split.getEndToken());
  try {
    rows=client.get_range_slices(new ColumnParent(cfName),predicate,keyRange,consistencyLevel);
    if (rows.isEmpty()) {
      rows=null;
      return;
    }
    ByteBuffer lastRowKey=rows.get(rows.size() - 1).key;
    if (isPredicateEmpty(predicate)) {
      Iterator<KeySlice> rowsIterator=rows.iterator();
      while (rowsIterator.hasNext())       if (rowsIterator.next().columns.isEmpty())       rowsIterator.remove();
    }
    i=0;
    startToken=partitioner.getTokenFactory().toString(partitioner.getToken(lastRowKey));
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
