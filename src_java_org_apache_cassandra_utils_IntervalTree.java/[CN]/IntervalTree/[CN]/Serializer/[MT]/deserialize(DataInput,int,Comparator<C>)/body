{
  try {
    int count=in.readInt();
    List<Interval<C,D>> intervals=new ArrayList<Interval<C,D>>(count);
    for (int i=0; i < count; i++) {
      C min=pointSerializer.deserialize(in);
      C max=pointSerializer.deserialize(in);
      D data=dataSerializer.deserialize(in);
      intervals.add(constructor.newInstance(min,max,data));
    }
    return new IntervalTree(intervals,comparator);
  }
 catch (  InstantiationException e) {
    throw new RuntimeException(e);
  }
catch (  InvocationTargetException e) {
    throw new RuntimeException(e);
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
}
