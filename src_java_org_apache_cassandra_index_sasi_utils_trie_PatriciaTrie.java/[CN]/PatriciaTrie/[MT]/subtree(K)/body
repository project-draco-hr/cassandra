{
  int lengthInBits=lengthInBits(prefix);
  TrieEntry<K,V> current=root.left;
  TrieEntry<K,V> path=root;
  while (true) {
    if (current.bitIndex <= path.bitIndex || lengthInBits < current.bitIndex)     break;
    path=current;
    current=!isBitSet(prefix,current.bitIndex) ? current.left : current.right;
  }
  TrieEntry<K,V> entry=current.isEmpty() ? path : current;
  if (entry.isEmpty())   return null;
  if (entry == root && lengthInBits(entry.getKey()) < lengthInBits)   return null;
  if (isBitSet(prefix,lengthInBits) != isBitSet(entry.key,lengthInBits))   return null;
  int bitIndex=bitIndex(prefix,entry.key);
  return (bitIndex >= 0 && bitIndex < lengthInBits) ? null : entry;
}
