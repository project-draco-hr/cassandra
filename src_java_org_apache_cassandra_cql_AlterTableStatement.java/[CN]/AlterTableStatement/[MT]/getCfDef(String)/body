{
  CFMetaData meta=Schema.instance.getCFMetaData(keyspace,columnFamily);
  CfDef cfDef=CFMetaData.convertToAvro(meta);
  ByteBuffer columnName=meta.comparator.fromString(this.columnName);
switch (oType) {
case ADD:
    if (cfDef.key_alias != null && cfDef.key_alias.equals(columnName))     throw new InvalidRequestException("Invalid column name: " + this.columnName + ", because it equals to key_alias.");
  cfDef.column_metadata.add(new ColumnDefinition(columnName,TypeParser.parse(validator),null,null).deflate());
break;
case ALTER:
ColumnDefinition column=meta.getColumnDefinition(columnName);
if (column == null) throw new InvalidRequestException(String.format("Column '%s' was not found in CF '%s'",this.columnName,columnFamily));
column.setValidator(TypeParser.parse(validator));
cfDef.column_metadata.add(column.deflate());
break;
case DROP:
ColumnDef toDelete=null;
for (ColumnDef columnDef : cfDef.column_metadata) {
if (columnDef.name.equals(columnName)) {
toDelete=columnDef;
}
}
if (toDelete == null) throw new InvalidRequestException(String.format("Column '%s' was not found in CF '%s'",this.columnName,columnFamily));
cfDef.column_metadata.remove(toDelete);
break;
}
return cfDef;
}
