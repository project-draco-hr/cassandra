{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case TABLENAME:
      if (field.type == TType.STRING) {
        this.tablename=iprot.readString();
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case KEY:
  if (field.type == TType.STRING) {
    this.key=iprot.readString();
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case COLUMNFAMILY_COLUMN:
if (field.type == TType.STRING) {
this.columnFamily_column=iprot.readString();
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case CELLDATA:
if (field.type == TType.STRING) {
this.cellData=iprot.readBinary();
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case TIMESTAMP:
if (field.type == TType.I64) {
this.timestamp=iprot.readI64();
this.__isset.timestamp=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case BLOCK:
if (field.type == TType.BOOL) {
this.block=iprot.readBool();
this.__isset.block=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
