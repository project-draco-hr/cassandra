{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case SUCCESS:
      if (field.type == TType.LIST) {
{
          TList _list35=iprot.readListBegin();
          this.success=new ArrayList<column_t>(_list35.size);
          for (int _i36=0; _i36 < _list35.size; ++_i36) {
            column_t _elem37;
            _elem37=new column_t();
            _elem37.read(iprot);
            this.success.add(_elem37);
          }
          iprot.readListEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case IRE:
  if (field.type == TType.STRUCT) {
    this.ire=new InvalidRequestException();
    this.ire.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case NFE:
if (field.type == TType.STRUCT) {
this.nfe=new NotFoundException();
this.nfe.read(iprot);
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
