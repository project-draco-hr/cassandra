{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case TABLENAME:
      if (field.type == TType.STRING) {
        this.tablename=iprot.readString();
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case COLUMNFAMILIES:
  if (field.type == TType.LIST) {
{
      TList _list63=iprot.readListBegin();
      this.columnFamilies=new ArrayList<String>(_list63.size);
      for (int _i64=0; _i64 < _list63.size; ++_i64) {
        String _elem65;
        _elem65=iprot.readString();
        this.columnFamilies.add(_elem65);
      }
      iprot.readListEnd();
    }
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case STARTWITH:
if (field.type == TType.STRING) {
this.startWith=iprot.readString();
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case STOPAT:
if (field.type == TType.STRING) {
this.stopAt=iprot.readString();
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case MAXRESULTS:
if (field.type == TType.I32) {
this.maxResults=iprot.readI32();
this.__isset.maxResults=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
