{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case TABLE:
      if (field.type == TType.STRING) {
        this.table=iprot.readString();
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case BATCH_MUTATION_SUPER:
  if (field.type == TType.STRUCT) {
    this.batch_mutation_super=new BatchMutationSuper();
    this.batch_mutation_super.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case CONSISTENCY_LEVEL:
if (field.type == TType.I32) {
this.consistency_level=iprot.readI32();
this.__isset.consistency_level=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
