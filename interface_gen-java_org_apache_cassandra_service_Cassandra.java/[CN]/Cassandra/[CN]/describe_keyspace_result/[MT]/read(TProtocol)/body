{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case SUCCESS:
      if (field.type == TType.MAP) {
{
          TMap _map60=iprot.readMapBegin();
          this.success=new HashMap<String,Map<String,String>>(2 * _map60.size);
          for (int _i61=0; _i61 < _map60.size; ++_i61) {
            String _key62;
            Map<String,String> _val63;
            _key62=iprot.readString();
{
              TMap _map64=iprot.readMapBegin();
              _val63=new HashMap<String,String>(2 * _map64.size);
              for (int _i65=0; _i65 < _map64.size; ++_i65) {
                String _key66;
                String _val67;
                _key66=iprot.readString();
                _val67=iprot.readString();
                _val63.put(_key66,_val67);
              }
              iprot.readMapEnd();
            }
            this.success.put(_key62,_val63);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case NFE:
  if (field.type == TType.STRUCT) {
    this.nfe=new NotFoundException();
    this.nfe.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
