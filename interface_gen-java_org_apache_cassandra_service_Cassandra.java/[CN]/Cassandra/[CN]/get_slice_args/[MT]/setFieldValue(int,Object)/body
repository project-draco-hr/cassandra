{
switch (fieldID) {
case KEYSPACE:
    if (value == null) {
      unsetKeyspace();
    }
 else {
      setKeyspace((String)value);
    }
  break;
case KEY:
if (value == null) {
  unsetKey();
}
 else {
  setKey((String)value);
}
break;
case COLUMN_PARENT:
if (value == null) {
unsetColumn_parent();
}
 else {
setColumn_parent((ColumnParent)value);
}
break;
case START:
if (value == null) {
unsetStart();
}
 else {
setStart((byte[])value);
}
break;
case FINISH:
if (value == null) {
unsetFinish();
}
 else {
setFinish((byte[])value);
}
break;
case IS_ASCENDING:
if (value == null) {
unsetIs_ascending();
}
 else {
setIs_ascending((Boolean)value);
}
break;
case COUNT:
if (value == null) {
unsetCount();
}
 else {
setCount((Integer)value);
}
break;
case CONSISTENCY_LEVEL:
if (value == null) {
unsetConsistency_level();
}
 else {
setConsistency_level((Integer)value);
}
break;
default :
throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
}
}
