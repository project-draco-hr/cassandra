{
  long latency=TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - MessagingService.instance().getRegisteredCallbackAge(id));
  CallbackInfo callbackInfo=MessagingService.instance().removeRegisteredCallback(id);
  if (callbackInfo == null) {
    String msg="Callback already removed for {} (from {})";
    logger.debug(msg,id,message.from);
    Tracing.trace(msg,id,message.from);
    return;
  }
  Tracing.trace("Processing response from {}",message.from);
  IAsyncCallback cb=callbackInfo.callback;
  if (message.isFailureResponse()) {
    ((IAsyncCallbackWithFailure)cb).onFailure(message.from);
  }
 else {
    MessagingService.instance().maybeAddLatency(cb,message.from,latency);
    cb.response(message);
  }
  if (callbackInfo instanceof WriteCallbackInfo) {
    ((IMutation)((WriteCallbackInfo)callbackInfo).sentMessage.payload).release();
  }
}
