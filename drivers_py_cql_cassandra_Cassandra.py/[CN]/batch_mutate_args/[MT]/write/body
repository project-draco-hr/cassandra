def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('batch_mutate_args')
    if (self.mutation_map != None):
        oprot.writeFieldBegin('mutation_map', TType.MAP, 1)
        oprot.writeMapBegin(TType.STRING, TType.MAP, len(self.mutation_map))
        for (kiter213, viter214) in self.mutation_map.items():
            oprot.writeString(kiter213)
            oprot.writeMapBegin(TType.STRING, TType.LIST, len(viter214))
            for (kiter215, viter216) in viter214.items():
                oprot.writeString(kiter215)
                oprot.writeListBegin(TType.STRUCT, len(viter216))
                for iter217 in viter216:
                    iter217.write(oprot)
                oprot.writeListEnd()
            oprot.writeMapEnd()
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.consistency_level != None):
        oprot.writeFieldBegin('consistency_level', TType.I32, 2)
        oprot.writeI32(self.consistency_level)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        if (self.mutation_map is None):
            raise TProtocol.TProtocolException(message='Required field mutation_map is unset!')
        if (self.consistency_level is None):
            raise TProtocol.TProtocolException(message='Required field consistency_level is unset!')
        return
