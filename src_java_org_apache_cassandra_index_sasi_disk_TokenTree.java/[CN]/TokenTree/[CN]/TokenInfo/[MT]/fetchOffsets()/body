{
  short info=buffer.getShort(position);
  int offsetExtra=buffer.getShort(position + SHORT_BYTES) & 0xFFFF;
  int offsetData=buffer.getInt(position + (2 * SHORT_BYTES) + LONG_BYTES);
  EntryType type=EntryType.of(info & TokenTreeBuilder.ENTRY_TYPE_MASK);
switch (type) {
case SIMPLE:
    return new long[]{offsetData};
case OVERFLOW:
  long[] offsets=new long[offsetExtra];
long offsetPos=(buffer.position() + (2 * (leafSize * LONG_BYTES)) + (offsetData * LONG_BYTES));
for (int i=0; i < offsetExtra; i++) offsets[i]=buffer.getLong(offsetPos + (i * LONG_BYTES));
return offsets;
case FACTORED:
return new long[]{(((long)offsetData) << Short.SIZE) + offsetExtra};
case PACKED:
return new long[]{offsetExtra,offsetData};
default :
throw new IllegalStateException("Unknown entry type: " + type);
}
}
