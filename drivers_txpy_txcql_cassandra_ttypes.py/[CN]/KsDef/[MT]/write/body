def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('KsDef')
    if (self.name != None):
        oprot.writeFieldBegin('name', TType.STRING, 1)
        oprot.writeString(self.name)
        oprot.writeFieldEnd()
    if (self.strategy_class != None):
        oprot.writeFieldBegin('strategy_class', TType.STRING, 2)
        oprot.writeString(self.strategy_class)
        oprot.writeFieldEnd()
    if (self.strategy_options != None):
        oprot.writeFieldBegin('strategy_options', TType.MAP, 3)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.strategy_options))
        for (kiter71, viter72) in self.strategy_options.items():
            oprot.writeString(kiter71)
            oprot.writeString(viter72)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.cf_defs != None):
        oprot.writeFieldBegin('cf_defs', TType.LIST, 4)
        oprot.writeListBegin(TType.STRUCT, len(self.cf_defs))
        for iter73 in self.cf_defs:
            iter73.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        if (self.name is None):
            raise TProtocol.TProtocolException(message='Required field name is unset!')
        if (self.strategy_class is None):
            raise TProtocol.TProtocolException(message='Required field strategy_class is unset!')
        if (self.cf_defs is None):
            raise TProtocol.TProtocolException(message='Required field cf_defs is unset!')
        return
