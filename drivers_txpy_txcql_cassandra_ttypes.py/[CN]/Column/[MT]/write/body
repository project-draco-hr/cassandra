def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('Column')
    if (self.name != None):
        oprot.writeFieldBegin('name', TType.STRING, 1)
        oprot.writeString(self.name)
        oprot.writeFieldEnd()
    if (self.value != None):
        oprot.writeFieldBegin('value', TType.STRING, 2)
        oprot.writeString(self.value)
        oprot.writeFieldEnd()
    if (self.timestamp != None):
        oprot.writeFieldBegin('timestamp', TType.I64, 3)
        oprot.writeI64(self.timestamp)
        oprot.writeFieldEnd()
    if (self.ttl != None):
        oprot.writeFieldBegin('ttl', TType.I32, 4)
        oprot.writeI32(self.ttl)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        if (self.name is None):
            raise TProtocol.TProtocolException(message='Required field name is unset!')
        if (self.value is None):
            raise TProtocol.TProtocolException(message='Required field value is unset!')
        if (self.timestamp is None):
            raise TProtocol.TProtocolException(message='Required field timestamp is unset!')
        return
