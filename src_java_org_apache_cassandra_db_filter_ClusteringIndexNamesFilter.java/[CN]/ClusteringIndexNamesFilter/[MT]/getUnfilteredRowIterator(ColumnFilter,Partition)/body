{
  final SearchIterator<Clustering,Row> searcher=partition.searchIterator(columnFilter,reversed);
  return new AbstractUnfilteredRowIterator(partition.metadata(),partition.partitionKey(),partition.partitionLevelDeletion(),columnFilter.fetchedColumns(),searcher.next(Clustering.STATIC_CLUSTERING),reversed,partition.stats()){
    private final Iterator<Clustering> clusteringIter=clusteringsInQueryOrder.iterator();
    protected Unfiltered computeNext(){
      while (clusteringIter.hasNext() && searcher.hasNext()) {
        Row row=searcher.next(clusteringIter.next());
        if (row != null)         return row;
      }
      return endOfData();
    }
  }
;
}
