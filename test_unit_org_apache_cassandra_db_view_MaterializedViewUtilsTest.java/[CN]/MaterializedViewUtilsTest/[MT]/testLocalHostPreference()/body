{
  TokenMetadata metadata=StorageService.instance.getTokenMetadata();
  metadata.clearUnsafe();
  metadata.updateNormalToken(new StringToken("A"),InetAddress.getByName("127.0.0.1"));
  metadata.updateNormalToken(new StringToken("C"),InetAddress.getByName("127.0.0.2"));
  metadata.updateNormalToken(new StringToken("B"),InetAddress.getByName("127.0.0.4"));
  metadata.updateNormalToken(new StringToken("D"),InetAddress.getByName("127.0.0.5"));
  Map<String,String> replicationMap=new HashMap<>();
  replicationMap.put(KeyspaceParams.Replication.CLASS,NetworkTopologyStrategy.class.getName());
  replicationMap.put("DC1","2");
  replicationMap.put("DC2","2");
  Keyspace.clear("Keyspace1");
  KeyspaceMetadata meta=KeyspaceMetadata.create("Keyspace1",KeyspaceParams.create(false,replicationMap));
  Schema.instance.setKeyspaceMetadata(meta);
  InetAddress naturalEndpoint=MaterializedViewUtils.getViewNaturalEndpoint("Keyspace1",new StringToken("CA"),new StringToken("BB"));
  Assert.assertEquals(InetAddress.getByName("127.0.0.1"),naturalEndpoint);
}
