{
  byte[] testData;
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  DataOutputStream out=new DataOutputStream(baos);
  try {
    out.writeBoolean(true);
    out.writeByte(0x1);
    out.writeChar('a');
    out.writeShort(1);
    out.writeInt(1);
    out.writeLong(1L);
    out.writeFloat(1.0f);
    out.writeDouble(1.0d);
    out.writeUTF("abc");
    testData=baos.toByteArray();
  }
  finally {
    out.close();
  }
  DataInputStream in=new DataInputStream(new ByteArrayInputStream(testData));
  BytesReadTracker tracker=new BytesReadTracker(in);
  try {
    boolean bool=tracker.readBoolean();
    assertTrue(bool);
    assertEquals(1,tracker.getBytesRead());
    byte b=tracker.readByte();
    assertEquals(b,0x1);
    assertEquals(2,tracker.getBytesRead());
    char c=tracker.readChar();
    assertEquals('a',c);
    assertEquals(4,tracker.getBytesRead());
    short s=tracker.readShort();
    assertEquals(1,s);
    assertEquals((short)6,tracker.getBytesRead());
    int i=tracker.readInt();
    assertEquals(1,i);
    assertEquals(10,tracker.getBytesRead());
    long l=tracker.readLong();
    assertEquals(1L,l);
    assertEquals(18,tracker.getBytesRead());
    float f=tracker.readFloat();
    assertEquals(1.0f,f,0);
    assertEquals(22,tracker.getBytesRead());
    double d=tracker.readDouble();
    assertEquals(1.0d,d,0);
    assertEquals(30,tracker.getBytesRead());
    String str=tracker.readUTF();
    assertEquals("abc",str);
    assertEquals(35,tracker.getBytesRead());
    assertEquals(testData.length,tracker.getBytesRead());
  }
  finally {
    in.close();
  }
  tracker.reset(0);
  assertEquals(0,tracker.getBytesRead());
}
