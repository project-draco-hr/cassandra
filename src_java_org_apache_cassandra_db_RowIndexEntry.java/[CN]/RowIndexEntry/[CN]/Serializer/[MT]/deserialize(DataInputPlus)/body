{
  if (!version.storeRows()) {
    long position=in.readLong();
    int size=in.readInt();
    if (size > 0) {
      DeletionTime deletionTime=DeletionTime.serializer.deserialize(in);
      int entries=in.readInt();
      List<IndexHelper.IndexInfo> columnsIndex=new ArrayList<>(entries);
      long headerLength=0L;
      for (int i=0; i < entries; i++) {
        IndexHelper.IndexInfo info=idxSerializer.deserialize(in);
        columnsIndex.add(info);
        if (i == 0)         headerLength=info.offset;
      }
      return new IndexedEntry(position,deletionTime,headerLength,columnsIndex);
    }
 else {
      return new RowIndexEntry<>(position);
    }
  }
  long position=in.readUnsignedVInt();
  int size=(int)in.readUnsignedVInt();
  if (size > 0) {
    long headerLength=in.readUnsignedVInt();
    DeletionTime deletionTime=DeletionTime.serializer.deserialize(in);
    int entries=(int)in.readUnsignedVInt();
    List<IndexHelper.IndexInfo> columnsIndex=new ArrayList<>(entries);
    for (int i=0; i < entries; i++)     columnsIndex.add(idxSerializer.deserialize(in));
    FileUtils.skipBytesFully(in,entries * TypeSizes.sizeof(0));
    return new IndexedEntry(position,deletionTime,headerLength,columnsIndex);
  }
 else {
    return new RowIndexEntry<>(position);
  }
}
