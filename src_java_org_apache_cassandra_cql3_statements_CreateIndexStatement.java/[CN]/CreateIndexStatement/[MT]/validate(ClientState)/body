{
  CFMetaData cfm=ThriftValidation.validateColumnFamily(keyspace(),columnFamily());
  if (cfm.getDefaultValidator().isCommutative())   throw new InvalidRequestException("Secondary indexes are not supported on counter tables");
  ColumnDefinition cd=cfm.getColumnDefinition(columnName);
  if (cd == null)   throw new InvalidRequestException("No column definition found for column " + columnName);
  if (cd.getIndexType() != null) {
    if (ifNotExists)     return;
 else     throw new InvalidRequestException("Index already exists");
  }
  if (isCustom && indexClass == null)   throw new InvalidRequestException("CUSTOM index requires specifiying the index class");
  if (!isCustom && indexClass != null)   throw new InvalidRequestException("Cannot specify index class for a non-CUSTOM index");
  if (cfm.isDense() && cd.kind != ColumnDefinition.Kind.REGULAR)   throw new InvalidRequestException(String.format("Secondary index on %s column %s is not yet supported for compact table",cd.kind,columnName));
  if (cd.type.isCollection() && !isCustom)   throw new InvalidRequestException("Indexes on collections are no yet supported");
  if (cd.kind == ColumnDefinition.Kind.PARTITION_KEY && cd.isOnAllComponents())   throw new InvalidRequestException(String.format("Cannot add secondary index to already primarily indexed column %s",columnName));
}
