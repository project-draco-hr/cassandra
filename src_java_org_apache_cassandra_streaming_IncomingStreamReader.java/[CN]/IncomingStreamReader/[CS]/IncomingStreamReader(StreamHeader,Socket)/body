{
  socket.setSoTimeout(DatabaseDescriptor.getStreamingSocketTimeout());
  this.socket=socket;
  InetAddress host=header.broadcastAddress != null ? header.broadcastAddress : ((InetSocketAddress)socket.getRemoteSocketAddress()).getAddress();
  if (header.pendingFiles.isEmpty() && header.file != null) {
    if (!StreamInSession.hasSession(host,header.sessionId)) {
      StreamReply reply=new StreamReply("",header.sessionId,StreamReply.Status.SESSION_FAILURE);
      OutboundTcpConnection.write(reply.getMessage(Gossiper.instance.getVersion(host)),Long.toString(header.sessionId),new DataOutputStream(socket.getOutputStream()));
      throw new IOException("Session " + header.sessionId + " already closed.");
    }
  }
  session=StreamInSession.get(host,header.sessionId);
  session.setSocket(socket);
  session.addFiles(header.pendingFiles);
  session.setCurrentFile(header.file);
  session.setTable(header.table);
  remoteFile=header.file;
  localFile=remoteFile != null ? StreamIn.getContextMapping(remoteFile) : null;
}
