{
  logger.debug("Receiving stream");
  InetSocketAddress remoteAddress=(InetSocketAddress)socketChannel.socket().getRemoteSocketAddress();
  if (logger.isDebugEnabled())   logger.debug("Creating file for " + pendingFile.getFilename());
  FileOutputStream fos=new FileOutputStream(pendingFile.getFilename(),true);
  FileChannel fc=fos.getChannel();
  long offset=0;
  try {
    Pair<Long,Long> section;
    while ((section=pendingFile.currentSection()) != null) {
      long length=Math.min(FileStreamTask.CHUNK_SIZE,section.right - section.left);
      long bytesRead=fc.transferFrom(socketChannel,offset,length);
      pendingFile.update(section.left + bytesRead);
      offset+=bytesRead;
    }
  }
 catch (  IOException ex) {
    logger.debug("Receiving stream: recovering from IO error");
    streamStatus.setAction(FileStatus.Action.STREAM);
    handleFileStatus(remoteAddress.getAddress());
    File file=new File(pendingFile.getFilename());
    file.delete();
    pendingFile.update(0);
    throw ex;
  }
 finally {
    fc.close();
    StreamInManager.activeStreams.remove(remoteAddress.getAddress(),pendingFile);
  }
  if (logger.isDebugEnabled())   logger.debug("Removing stream context " + pendingFile);
  streamStatus.setAction(FileStatus.Action.DELETE);
  handleFileStatus(remoteAddress.getAddress());
}
