{
  updateNextRange();
  RangeTombstoneMarker marker;
  if (nextRange != null && comparator.compare(closeBound(openRange),openBound(nextRange)) == 0) {
    marker=RangeTombstoneBoundaryMarker.makeBoundary(isReverseOrder(),closeBound(openRange),openBound(nextRange),openRange.deletionTime(),nextRange.deletionTime());
    openRange=consumeNextRange();
  }
 else {
    RangeTombstone toClose=consumeOpenRange();
    marker=new RangeTombstoneBoundMarker(closeBound(toClose),toClose.deletionTime());
  }
  return marker;
}
