{
  if (o == null)   return (ByteBuffer)o;
  if (o instanceof java.lang.String)   return ByteBuffer.wrap(new DataByteArray((String)o).get());
  if (o instanceof Integer)   return Int32Type.instance.decompose((Integer)o);
  if (o instanceof Long)   return LongType.instance.decompose((Long)o);
  if (o instanceof Float)   return FloatType.instance.decompose((Float)o);
  if (o instanceof Double)   return DoubleType.instance.decompose((Double)o);
  if (o instanceof UUID)   return ByteBuffer.wrap(UUIDGen.decompose((UUID)o));
  if (o instanceof Tuple) {
    List<Object> objects=((Tuple)o).getAll();
    List<ByteBuffer> serialized=new ArrayList<ByteBuffer>(objects.size());
    int totalLength=0;
    for (    Object sub : objects) {
      ByteBuffer buffer=objToBB(sub);
      serialized.add(buffer);
      totalLength+=2 + buffer.remaining() + 1;
    }
    ByteBuffer out=ByteBuffer.allocate(totalLength);
    for (    ByteBuffer bb : serialized) {
      int length=bb.remaining();
      out.put((byte)((length >> 8) & 0xFF));
      out.put((byte)(length & 0xFF));
      out.put(bb);
      out.put((byte)0);
    }
    out.flip();
    return out;
  }
  return ByteBuffer.wrap(((DataByteArray)o).get());
}
