{
  id=System.nanoTime();
  logFile=new File(DatabaseDescriptor.getCommitLogLocation(),FILENAME_PREFIX + id + FILENAME_EXTENSION);
  boolean isCreating=true;
  try {
    if (filePath != null) {
      File oldFile=new File(filePath);
      if (oldFile.exists()) {
        logger.debug("Re-using discarded CommitLog segment for " + id + " from "+ filePath);
        oldFile.renameTo(logFile);
        isCreating=false;
      }
    }
    logFileAccessor=new RandomAccessFile(logFile,"rw");
    if (isCreating) {
      logger.debug("Creating new commit log segment " + logFile.getPath());
    }
    logFileAccessor.setLength(DatabaseDescriptor.getCommitLogSegmentSize());
    buffer=logFileAccessor.getChannel().map(FileChannel.MapMode.READ_WRITE,0,DatabaseDescriptor.getCommitLogSegmentSize());
    buffer.putInt(CommitLog.END_OF_SEGMENT_MARKER);
    buffer.position(0);
    needsSync=true;
  }
 catch (  IOException e) {
    throw new IOError(e);
  }
}
