{
class CacheFilter extends Transformation {
    @Override public BaseRowIterator applyToPartition(    BaseRowIterator iter){
      DecoratedKey dk=iter.partitionKey();
      CachedPartition cached=cfs.getRawCachedPartition(dk);
      ClusteringIndexFilter filter=dataRange().clusteringIndexFilter(dk);
      if (cached != null && cfs.isFilterFullyCoveredBy(filter,limits(),cached,nowInSec())) {
        iter.close();
        return filter.getUnfilteredRowIterator(columnFilter(),cached);
      }
      return iter;
    }
  }
  return Transformation.apply(iter,new CacheFilter());
}
