{
  SchemaLoader.prepareServer();
  SchemaLoader.createKeyspace(KEYSPACE,KeyspaceParams.simple(1),SchemaLoader.standardCFMD(KEYSPACE,TABLE));
  UUID hostId=UUID.randomUUID();
  long now=FBUtilities.timestampMicros();
  CFMetaData table=Schema.instance.getCFMetaData(KEYSPACE,TABLE);
  Mutation mutation=new RowUpdateBuilder(table,now,bytes("key")).clustering("column").add("val","val" + 1234).build();
  Hint hint=Hint.create(mutation,now / 1000);
  HintMessage message=new HintMessage(hostId,hint);
  int serializedSize=(int)HintMessage.serializer.serializedSize(message,MessagingService.current_version);
  DataOutputBuffer dob=new DataOutputBuffer();
  HintMessage.serializer.serialize(message,dob,MessagingService.current_version);
  assertEquals(serializedSize,dob.getLength());
  DataInputPlus di=new DataInputBuffer(dob.buffer(),true);
  HintMessage deserializedMessage=HintMessage.serializer.deserialize(di,MessagingService.current_version);
  assertEquals(hostId,deserializedMessage.hostId);
  assertHintsEqual(message.hint,deserializedMessage.hint);
}
