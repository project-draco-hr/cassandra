{
  SortedSet<Chunk> offsets=new TreeSet<Chunk>(new Comparator<Chunk>(){
    public int compare(    Chunk o1,    Chunk o2){
      return Longs.compare(o1.offset,o2.offset);
    }
  }
);
  for (  Pair<Long,Long> section : sections) {
    int startIndex=(int)(section.left / parameters.chunkLength());
    int endIndex=(int)(section.right / parameters.chunkLength());
    for (int i=startIndex; i <= endIndex; i++) {
      long offset=i * 8;
      long chunkOffset=chunkOffsets.getLong(offset);
      long nextChunkOffset=(i + 8 == chunkOffsets.size()) ? compressedFileLength : chunkOffsets.getLong(offset + 8);
      offsets.add(new Chunk(chunkOffset,(int)(nextChunkOffset - chunkOffset - 4)));
    }
  }
  return offsets.toArray(new Chunk[offsets.size()]);
}
