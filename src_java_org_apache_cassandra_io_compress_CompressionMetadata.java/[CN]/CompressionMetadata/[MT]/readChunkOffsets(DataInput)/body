{
  final int chunkCount;
  try {
    chunkCount=input.readInt();
    if (chunkCount <= 0)     throw new IOException("Compressed file with 0 chunks encountered: " + input);
  }
 catch (  IOException e) {
    throw new FSReadError(e,indexFilePath);
  }
  @SuppressWarnings("resource") Memory offsets=Memory.allocate(chunkCount * 8L);
  int i=0;
  try {
    for (i=0; i < chunkCount; i++) {
      offsets.setLong(i * 8L,input.readLong());
    }
    return offsets;
  }
 catch (  IOException e) {
    if (offsets != null)     offsets.close();
    if (e instanceof EOFException) {
      String msg=String.format("Corrupted Index File %s: read %d but expected %d chunks.",indexFilePath,i,chunkCount);
      throw new CorruptSSTableException(new IOException(msg,e),indexFilePath);
    }
    throw new FSReadError(e,indexFilePath);
  }
}
