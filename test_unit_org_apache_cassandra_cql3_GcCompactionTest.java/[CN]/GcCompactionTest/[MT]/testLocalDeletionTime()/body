{
  createTable("create table %s (k int, c1 int, primary key (k, c1)) with compaction = {'class': 'SizeTieredCompactionStrategy', 'provide_overlapping_tombstones':'row'}");
  execute("delete from %s where k = 1");
  Set<SSTableReader> readers=new HashSet<>(getCurrentColumnFamilyStore().getLiveSSTables());
  getCurrentColumnFamilyStore().forceBlockingFlush();
  SSTableReader oldSSTable=getNewTable(readers);
  Thread.sleep(2000);
  execute("delete from %s where k = 1");
  getCurrentColumnFamilyStore().forceBlockingFlush();
  SSTableReader newTable=getNewTable(readers);
  CompactionManager.instance.forceUserDefinedCompaction(oldSSTable.getFilename());
  assertEquals(Collections.singleton(newTable),getCurrentColumnFamilyStore().getLiveSSTables());
}
