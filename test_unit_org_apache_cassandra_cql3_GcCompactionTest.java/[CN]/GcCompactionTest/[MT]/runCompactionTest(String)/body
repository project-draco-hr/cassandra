{
  createTable(tableDef);
  for (int i=0; i < KEY_COUNT; ++i)   for (int j=0; j < CLUSTERING_COUNT; ++j)   execute("INSERT INTO %s (key, column, data, extra) VALUES (?, ?, ?, ?)",i,j,i + j,"" + i + ":"+ j);
  Set<SSTableReader> readers=new HashSet<>();
  ColumnFamilyStore cfs=getCurrentColumnFamilyStore();
  flush();
  assertEquals(1,cfs.getLiveSSTables().size());
  SSTableReader table0=getNewTable(readers);
  assertEquals(0,countTombstoneMarkers(table0));
  int rowCount=countRows(table0);
  deleteWithSomeInserts(3,5,10);
  flush();
  assertEquals(2,cfs.getLiveSSTables().size());
  SSTableReader table1=getNewTable(readers);
  assertTrue(countRows(table1) > 0);
  assertTrue(countTombstoneMarkers(table1) > 0);
  deleteWithSomeInserts(5,6,0);
  flush();
  assertEquals(3,cfs.getLiveSSTables().size());
  SSTableReader table2=getNewTable(readers);
  assertEquals(0,countRows(table2));
  assertTrue(countTombstoneMarkers(table2) > 0);
  CompactionManager.instance.forceUserDefinedCompaction(table0.getFilename());
  assertEquals(3,cfs.getLiveSSTables().size());
  SSTableReader table3=getNewTable(readers);
  assertEquals(0,countTombstoneMarkers(table3));
  assertTrue(rowCount > countRows(table3));
}
