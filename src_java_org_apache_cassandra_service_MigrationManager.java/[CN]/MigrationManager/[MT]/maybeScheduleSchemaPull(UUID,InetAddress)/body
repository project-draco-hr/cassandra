{
  if ((Schema.instance.getVersion() != null && Schema.instance.getVersion().equals(theirVersion)) || !shouldPullSchemaFrom(endpoint)) {
    logger.debug("Not pulling schema because versions match or shouldPullSchemaFrom returned false");
    return;
  }
  if (Schema.emptyVersion.equals(Schema.instance.getVersion()) || runtimeMXBean.getUptime() < MIGRATION_DELAY_IN_MS) {
    logger.debug("Submitting migration task for {}",endpoint);
    submitMigrationTask(endpoint);
  }
 else {
    Runnable runnable=new Runnable(){
      public void run(){
        EndpointState epState=Gossiper.instance.getEndpointStateForEndpoint(endpoint);
        if (epState == null) {
          logger.debug("epState vanished for {}, not submitting migration task",endpoint);
          return;
        }
        VersionedValue value=epState.getApplicationState(ApplicationState.SCHEMA);
        UUID currentVersion=UUID.fromString(value.value);
        if (Schema.instance.getVersion().equals(currentVersion)) {
          logger.debug("not submitting migration task for {} because our versions match",endpoint);
          return;
        }
        logger.debug("submitting migration task for {}",endpoint);
        submitMigrationTask(endpoint);
      }
    }
;
    ScheduledExecutors.optionalTasks.schedule(runnable,MIGRATION_DELAY_IN_MS,TimeUnit.MILLISECONDS);
  }
}
