{
  double[] result=new double[7];
  if (isEmpty(counts)) {
    Arrays.fill(result,Double.NaN);
    return result;
  }
  double[] offsetPercentiles=new double[]{0.5,0.75,0.95,0.98,0.99};
  long[] offsets=new EstimatedHistogram(counts.length).getBucketOffsets();
  EstimatedHistogram metric=new EstimatedHistogram(offsets,counts);
  if (metric.isOverflowed()) {
    System.err.println(String.format("EstimatedHistogram overflowed larger than %s, unable to calculate percentiles",offsets[offsets.length - 1]));
    for (int i=0; i < result.length; i++)     result[i]=Double.NaN;
  }
 else {
    for (int i=0; i < offsetPercentiles.length; i++)     result[i]=metric.percentile(offsetPercentiles[i]);
  }
  result[5]=metric.min();
  result[6]=metric.max();
  return result;
}
