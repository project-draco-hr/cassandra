{
  try {
switch (metricName) {
case "Capacity":
case "Entries":
case "HitRate":
case "Size":
      return JMX.newMBeanProxy(mbeanServerConn,new ObjectName("org.apache.cassandra.metrics:type=Cache,scope=" + cacheType + ",name="+ metricName),CassandraMetricsRegistry.JmxGaugeMBean.class).getValue();
case "Requests":
case "Hits":
case "Misses":
    return JMX.newMBeanProxy(mbeanServerConn,new ObjectName("org.apache.cassandra.metrics:type=Cache,scope=" + cacheType + ",name="+ metricName),CassandraMetricsRegistry.JmxMeterMBean.class).getCount();
case "MissLatency":
  return JMX.newMBeanProxy(mbeanServerConn,new ObjectName("org.apache.cassandra.metrics:type=Cache,scope=" + cacheType + ",name="+ metricName),CassandraMetricsRegistry.JmxTimerMBean.class).getMean();
case "MissLatencyUnit":
return JMX.newMBeanProxy(mbeanServerConn,new ObjectName("org.apache.cassandra.metrics:type=Cache,scope=" + cacheType + ",name=MissLatency"),CassandraMetricsRegistry.JmxTimerMBean.class).getDurationUnit();
default :
throw new RuntimeException("Unknown cache metric name.");
}
}
 catch (MalformedObjectNameException e) {
throw new RuntimeException(e);
}
}
