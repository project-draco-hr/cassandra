{
  CFMetaData cfm=CFMetaData.compile("create table foo(a int PRIMARY KEY, b map<int, int>)","ks");
  Map<ByteBuffer,CollectionType> typeMap=new HashMap<>();
  typeMap.put(ByteBufferUtil.bytes("b"),MapType.getInstance(Int32Type.instance,Int32Type.instance,true));
  CompoundSparseCellNameType.WithCollection nameType=new CompoundSparseCellNameType.WithCollection(Collections.EMPTY_LIST,ColumnToCollectionType.getInstance(typeMap));
  ColumnDefinition definition=new ColumnDefinition(cfm,ByteBufferUtil.bytes("b"),MapType.getInstance(Int32Type.instance,Int32Type.instance,true),0,ColumnDefinition.Kind.REGULAR);
  List<Cell> cells=new ArrayList<>(columnValues.size());
  if (columnValues != null) {
    for (    Map.Entry<ByteBuffer,ByteBuffer> entry : columnValues.entrySet())     cells.add(new BufferCell(nameType.create(Composites.EMPTY,definition,entry.getKey()),entry.getValue()));
  }
  return bound.mapAppliesTo(MapType.getInstance(Int32Type.instance,Int32Type.instance,true),cells.iterator(),conditionValues,bound.operator);
}
