{
  final int inOffset=2;
  ByteBuffer src=makeBB(len + inOffset);
  src.position(inOffset);
  src.put(data,off,len);
  src.flip().position(inOffset);
  final int outOffset=3;
  final ByteBuffer compressed=makeBB(outOffset + compressor.initialCompressedBufferLength(len));
  fillBBWithRandom(compressed);
  compressed.position(outOffset);
  compressor.compress(src,compressed);
  compressed.flip().position(outOffset);
  final int restoreOffset=5;
  final byte[] restored=new byte[restoreOffset + len];
  new Random().nextBytes(restored);
  byte[] compressedBytes=new byte[compressed.capacity()];
  ByteBufferUtil.arrayCopy(compressed,outOffset,compressedBytes,outOffset,compressed.capacity() - outOffset);
  final int decompressedLength=compressor.uncompress(compressedBytes,outOffset,compressed.remaining(),restored,restoreOffset);
  assertEquals(decompressedLength,len);
  assertArrayEquals(Arrays.copyOfRange(data,off,off + len),Arrays.copyOfRange(restored,restoreOffset,restoreOffset + decompressedLength));
}
