{
  byte[] data=new byte[1 << 20];
  new Random().nextBytes(data);
  File temp=File.createTempFile("tempfile",".tmp");
  temp.deleteOnExit();
  final int outOffset=3;
  final WrappedArray out=new WrappedArray(new byte[outOffset + compressor.initialCompressedBufferLength(data.length)]);
  new Random().nextBytes(out.buffer);
  final int compressedLength=compressor.compress(data,0,data.length,out,outOffset);
  Files.write(out.buffer,temp);
  MappedByteBuffer mappedData=Files.map(temp);
  mappedData.position(outOffset);
  mappedData.limit(compressedLength + outOffset);
  ByteBuffer result=compressor.useDirectOutputByteBuffers() ? ByteBuffer.allocateDirect(data.length + 100) : ByteBuffer.allocate(data.length + 100);
  int length=compressor.uncompress(mappedData,result);
  Assert.assertEquals(data.length,length);
  for (int i=0; i < length; i++) {
    Assert.assertEquals("Decompression mismatch at byte " + i,data[i],result.get());
  }
}
