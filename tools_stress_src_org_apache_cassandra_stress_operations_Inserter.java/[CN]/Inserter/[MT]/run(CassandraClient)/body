{
  if (values == null)   values=generateValues();
  List<Column> columns=new ArrayList<Column>(session.getColumnsPerKey());
  List<SuperColumn> superColumns=null;
  String format="%0" + session.getTotalKeysLength() + "d";
  for (int i=0; i < session.getColumnsPerKey(); i++) {
    columns.add(new Column(columnName(i,session.timeUUIDComparator)).setValue(values.get(i % values.size())).setTimestamp(FBUtilities.timestampMicros()));
  }
  if (session.getColumnFamilyType() == ColumnFamilyType.Super) {
    superColumns=new ArrayList<SuperColumn>();
    for (int i=0; i < session.getSuperColumns(); i++) {
      String superColumnName="S" + Integer.toString(i);
      superColumns.add(new SuperColumn(ByteBufferUtil.bytes(superColumnName),columns));
    }
  }
  String rawKey=String.format(format,index);
  Map<String,List<Mutation>> row=session.getColumnFamilyType() == ColumnFamilyType.Super ? getSuperColumnsMutationMap(superColumns) : getColumnsMutationMap(columns);
  Map<ByteBuffer,Map<String,List<Mutation>>> record=Collections.singletonMap(ByteBufferUtil.bytes(rawKey),row);
  TimerContext context=session.latency.time();
  boolean success=false;
  String exceptionMessage=null;
  for (int t=0; t < session.getRetryTimes(); t++) {
    if (success)     break;
    try {
      client.batch_mutate(record,session.getConsistencyLevel());
      success=true;
    }
 catch (    Exception e) {
      exceptionMessage=getExceptionMessage(e);
      success=false;
    }
  }
  if (!success) {
    error(String.format("Operation [%d] retried %d times - error inserting key %s %s%n",index,session.getRetryTimes(),rawKey,(exceptionMessage == null) ? "" : "(" + exceptionMessage + ")"));
  }
  session.operations.getAndIncrement();
  session.keys.getAndIncrement();
  context.stop();
}
