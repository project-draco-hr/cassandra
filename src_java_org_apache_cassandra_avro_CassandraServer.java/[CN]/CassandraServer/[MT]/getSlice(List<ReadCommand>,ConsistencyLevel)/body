{
  Map<DecoratedKey<?>,ColumnFamily> columnFamilies=readColumnFamily(commands,consistencyLevel);
  Schema sch=Schema.createArray(CoscsMapEntry.SCHEMA$);
  List<CoscsMapEntry> columnFamiliesList=new GenericData.Array<CoscsMapEntry>(commands.size(),sch);
  for (  ReadCommand cmd : commands) {
    ColumnFamily cf=columnFamilies.get(StorageService.getPartitioner().decorateKey(cmd.key));
    boolean reverseOrder=cmd instanceof SliceFromReadCommand && ((SliceFromReadCommand)cmd).reversed;
    GenericArray<ColumnOrSuperColumn> avroColumns=avronateColumnFamily(cf,cmd.queryPath.superColumnName != null,reverseOrder);
    columnFamiliesList.add(newCoscsMapEntry(ByteBuffer.wrap(cmd.key),avroColumns));
  }
  return columnFamiliesList;
}
