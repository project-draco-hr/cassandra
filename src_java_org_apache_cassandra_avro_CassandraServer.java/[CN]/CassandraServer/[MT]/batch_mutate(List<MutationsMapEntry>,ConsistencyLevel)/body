{
  if (logger.isDebugEnabled())   logger.debug("batch_mutate");
  List<RowMutation> rowMutations=new ArrayList<RowMutation>();
  for (  MutationsMapEntry pair : mutationMap) {
    AvroValidation.validateKey(pair.key.array());
    Map<CharSequence,List<Mutation>> cfToMutations=pair.mutations;
    for (    Map.Entry<CharSequence,List<Mutation>> cfMutations : cfToMutations.entrySet()) {
      String cfName=cfMutations.getKey().toString();
      for (      Mutation mutation : cfMutations.getValue())       AvroValidation.validateMutation(clientState.getKeyspace(),cfName,mutation);
    }
    rowMutations.add(getRowMutationFromMutations(clientState.getKeyspace(),pair.key.array(),cfToMutations));
  }
  try {
    schedule();
    StorageProxy.mutate(rowMutations,thriftConsistencyLevel(consistencyLevel));
  }
 catch (  TimeoutException te) {
    throw newTimedOutException();
  }
catch (  org.apache.cassandra.thrift.UnavailableException ue) {
    throw newUnavailableException();
  }
 finally {
    release();
  }
  return null;
}
