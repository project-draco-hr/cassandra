{
  RowMutation rm=new RowMutation("Keyspace1",ByteBufferUtil.bytes("row"));
  rm.add("Standard1",Util.cellname("commit1"),ByteBufferUtil.bytes("abcd"),0);
  rm.apply();
  rm=new RowMutation("NoCommitlogSpace",ByteBufferUtil.bytes("row"));
  rm.add("Standard1",Util.cellname("commit2"),ByteBufferUtil.bytes("abcd"),0);
  rm.apply();
  boolean commitLogMessageFound=false;
  boolean noCommitLogMessageFound=false;
  File commitLogDir=new File(DatabaseDescriptor.getCommitLogLocation());
  byte[] commitBytes="commit".getBytes("UTF-8");
  for (  String filename : commitLogDir.list()) {
    BufferedInputStream is=null;
    try {
      is=new BufferedInputStream(new FileInputStream(commitLogDir.getAbsolutePath() + File.separator + filename));
      if (!isEmptyCommitLog(is)) {
        while (findPatternInStream(commitBytes,is)) {
          char c=(char)is.read();
          if (c == '1')           commitLogMessageFound=true;
 else           if (c == '2')           noCommitLogMessageFound=true;
        }
      }
    }
  finally {
      if (is != null)       is.close();
    }
  }
  assertTrue(commitLogMessageFound);
  assertFalse(noCommitLogMessageFound);
}
