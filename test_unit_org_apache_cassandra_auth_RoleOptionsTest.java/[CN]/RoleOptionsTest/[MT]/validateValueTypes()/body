{
  setupRoleManager(getRoleManager(IRoleManager.Option.values()));
  RoleOptions opts=new RoleOptions();
  opts.setOption(IRoleManager.Option.LOGIN,"test");
  assertInvalidOptions(opts,"Invalid value for property 'LOGIN'. It must be a boolean");
  opts=new RoleOptions();
  opts.setOption(IRoleManager.Option.PASSWORD,99);
  assertInvalidOptions(opts,"Invalid value for property 'PASSWORD'. It must be a string");
  opts=new RoleOptions();
  opts.setOption(IRoleManager.Option.SUPERUSER,new HashSet<>());
  assertInvalidOptions(opts,"Invalid value for property 'SUPERUSER'. It must be a boolean");
  opts=new RoleOptions();
  opts.setOption(IRoleManager.Option.OPTIONS,false);
  assertInvalidOptions(opts,"Invalid value for property 'OPTIONS'. It must be a map");
  opts=new RoleOptions();
  opts.setOption(IRoleManager.Option.LOGIN,true);
  opts.setOption(IRoleManager.Option.SUPERUSER,false);
  opts.setOption(IRoleManager.Option.PASSWORD,"test");
  opts.setOption(IRoleManager.Option.OPTIONS,Collections.singletonMap("key","value"));
  opts.validate();
}
