def get_fake_auth_table_meta(self, ksname, tablename):
    if (tablename == 'roles'):
        ks_meta = KeyspaceMetadata(ksname, True, None, None)
        table_meta = TableMetadata(ks_meta, 'roles')
        table_meta.columns['role'] = ColumnMetadata(table_meta, 'role', cassandra.cqltypes.UTF8Type)
        table_meta.columns['is_superuser'] = ColumnMetadata(table_meta, 'is_superuser', cassandra.cqltypes.BooleanType)
        table_meta.columns['can_login'] = ColumnMetadata(table_meta, 'can_login', cassandra.cqltypes.BooleanType)
    elif (tablename == 'role_permissions'):
        ks_meta = KeyspaceMetadata(ksname, True, None, None)
        table_meta = TableMetadata(ks_meta, 'role_permissions')
        table_meta.columns['role'] = ColumnMetadata(table_meta, 'role', cassandra.cqltypes.UTF8Type)
        table_meta.columns['resource'] = ColumnMetadata(table_meta, 'resource', cassandra.cqltypes.UTF8Type)
        table_meta.columns['permission'] = ColumnMetadata(table_meta, 'permission', cassandra.cqltypes.UTF8Type)
    else:
        raise ColumnFamilyNotFound(('Column family %r not found' % tablename))
