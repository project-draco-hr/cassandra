def print_result(self, rows, table_meta):
    self.decoding_errors = []
    self.writeresult('')
    if (isinstance(rows, PagedResult) and self.tty):
        num_rows = 0
        while True:
            page = list(rows.current_response)
            if (not page):
                break
            num_rows += len(page)
            self.print_static_result(page, table_meta)
            if (not rows.response_future.has_more_pages):
                break
            raw_input('---MORE---')
            rows.response_future.start_fetching_next_page()
            result = rows.response_future.result()
            if rows.response_future.has_more_pages:
                rows.current_response = result.current_response
            else:
                rows.current_response = iter(result)
    else:
        rows = list((rows or []))
        num_rows = len(rows)
        self.print_static_result(rows, table_meta)
    self.writeresult(('(%d rows)' % num_rows))
    if self.decoding_errors:
        for err in self.decoding_errors[:2]:
            self.writeresult(err.message(), color=RED)
        if (len(self.decoding_errors) > 2):
            self.writeresult(('%d more decoding errors suppressed.' % (len(self.decoding_errors) - 2)), color=RED)
