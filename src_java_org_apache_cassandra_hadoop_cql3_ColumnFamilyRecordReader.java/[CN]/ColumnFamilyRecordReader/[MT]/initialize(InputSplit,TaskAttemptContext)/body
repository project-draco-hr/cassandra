{
  this.split=(ColumnFamilySplit)split;
  Configuration conf=context.getConfiguration();
  totalRowCount=(this.split.getLength() < Long.MAX_VALUE) ? (int)this.split.getLength() : ConfigHelper.getInputSplitSize(conf);
  cfName=ConfigHelper.getInputColumnFamily(conf);
  consistencyLevel=ConsistencyLevel.valueOf(ConfigHelper.getReadConsistencyLevel(conf));
  keyspace=ConfigHelper.getInputKeyspace(conf);
  columns=CQLConfigHelper.getInputcolumns(conf);
  userDefinedWhereClauses=CQLConfigHelper.getInputWhereClauses(conf);
  try {
    pageRowSize=Integer.parseInt(CQLConfigHelper.getInputPageRowSize(conf));
  }
 catch (  NumberFormatException e) {
    pageRowSize=DEFAULT_CQL_PAGE_LIMIT;
  }
  partitioner=ConfigHelper.getInputPartitioner(context.getConfiguration());
  try {
    if (client != null)     return;
    String location=getLocation();
    int port=ConfigHelper.getInputRpcPort(conf);
    client=ColumnFamilyInputFormat.createAuthenticatedClient(location,port,conf);
    retrieveKeys();
    client.set_keyspace(keyspace);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  rowIterator=new RowIterator();
  logger.debug("created {}",rowIterator);
}
