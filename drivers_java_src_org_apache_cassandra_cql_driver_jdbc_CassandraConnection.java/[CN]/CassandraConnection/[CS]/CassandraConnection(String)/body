{
  try {
    final int splitIndex=url.indexOf('@');
    final String usr_pwd=url.substring(0,splitIndex);
    final String host_port=url.substring(splitIndex + 1);
    final int usr_colonIdx=usr_pwd.lastIndexOf(':');
    final int usr_backwardIdx=usr_pwd.indexOf('/');
    final String userName=usr_pwd.substring(usr_colonIdx + 1,usr_backwardIdx);
    final String password=usr_pwd.substring(usr_backwardIdx + 1);
    final int host_colonIdx=host_port.indexOf(':');
    final String hostName=host_port.substring(0,host_colonIdx);
    final int host_backwardIdx=host_port.indexOf('/');
    final String port=host_port.substring(host_colonIdx + 1,host_backwardIdx);
    final String keyspace=host_port.substring(host_backwardIdx + 1);
    cassandraCon=new org.apache.cassandra.cql.driver.Connection(hostName,Integer.valueOf(port),userName,password);
    final String useQ="USE " + keyspace;
    cassandraCon.execute(useQ);
  }
 catch (  NumberFormatException e) {
    throw new DriverResolverException(e.getMessage());
  }
catch (  TTransportException e) {
    throw new DriverResolverException(e.getMessage());
  }
catch (  AuthenticationException e) {
    throw new DriverResolverException(e.getMessage());
  }
catch (  AuthorizationException e) {
    throw new DriverResolverException(e.getMessage());
  }
catch (  TException e) {
    throw new DriverResolverException(e.getMessage());
  }
catch (  InvalidRequestException e) {
    throw new DriverResolverException(e.getMessage());
  }
catch (  UnavailableException e) {
    throw new DriverResolverException(e.getMessage());
  }
catch (  TimedOutException e) {
    throw new DriverResolverException(e.getMessage());
  }
}
