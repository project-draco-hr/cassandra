{
  int minLength=Math.min(length1,length2);
  int wordComparisons=minLength & ~7;
  for (int i=0; i < wordComparisons; i+=Longs.BYTES) {
    long lw=theUnsafe.getLong(buffer1,memoryOffset1 + (long)i);
    long rw=theUnsafe.getLong(buffer2,memoryOffset2 + (long)i);
    if (lw != rw) {
      if (BIG_ENDIAN)       return UnsignedLongs.compare(lw,rw);
      return UnsignedLongs.compare(Long.reverseBytes(lw),Long.reverseBytes(rw));
    }
  }
  for (int i=wordComparisons; i < minLength; i++) {
    int b1=theUnsafe.getByte(buffer1,memoryOffset1 + i) & 0xFF;
    int b2=theUnsafe.getByte(buffer2,memoryOffset2 + i) & 0xFF;
    if (b1 != b2)     return b1 - b2;
  }
  return length1 - length2;
}
