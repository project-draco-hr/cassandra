{
  if (!restrictions.hasPartitionKeyRestrictions()) {
    logger.warn("Aggregation query used without partition key");
    ClientWarn.instance.warn("Aggregation query used without partition key");
  }
 else   if (restrictions.keyIsInRelation()) {
    logger.warn("Aggregation query used on multiple partition keys (IN restriction)");
    ClientWarn.instance.warn("Aggregation query used on multiple partition keys (IN restriction)");
  }
  Selection.ResultSetBuilder result=selection.resultSetBuilder(parameters.isJson);
  while (!pager.isExhausted()) {
    try (PartitionIterator iter=pager.fetchPage(pageSize)){
      while (iter.hasNext()) {
        try (RowIterator partition=iter.next()){
          processPartition(partition,options,result,nowInSec);
        }
       }
    }
   }
  return new ResultMessage.Rows(result.build(options.getProtocolVersion()));
}
