{
  result.newRow();
  for (  ColumnDefinition def : selection.getColumnsList()) {
switch (def.kind) {
case PARTITION_KEY:
      result.add(keyComponents[def.position()]);
    break;
case CLUSTERING_COLUMN:
  result.add(columns.getKeyComponent(def.position()));
break;
case COMPACT_VALUE:
throw new AssertionError();
case REGULAR:
if (def.type.isCollection()) {
List<Pair<ByteBuffer,Column>> collection=columns.getCollection(def.name.bytes);
ByteBuffer value=collection == null ? null : ((CollectionType)def.type).serialize(collection);
result.add(value);
}
 else {
result.add(columns.getSimple(def.name.bytes));
}
break;
}
}
}
