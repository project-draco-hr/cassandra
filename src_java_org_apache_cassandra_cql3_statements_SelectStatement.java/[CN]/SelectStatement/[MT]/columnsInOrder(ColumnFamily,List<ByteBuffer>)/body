{
  if (columnRestrictions.length == 0)   return cf.getSortedColumns();
  Restriction last=columnRestrictions[columnRestrictions.length - 1];
  if (last == null || last.isSlice())   return cf.getSortedColumns();
  ColumnNameBuilder builder=cfDef.getColumnNameBuilder();
  for (int i=0; i < columnRestrictions.length - 1; i++)   builder.add(columnRestrictions[i].values(variables).get(0));
  List<ByteBuffer> values=last.values(variables);
  final List<ByteBuffer> requested=new ArrayList<ByteBuffer>(values.size());
  Iterator<ByteBuffer> iter=values.iterator();
  while (iter.hasNext()) {
    ByteBuffer t=iter.next();
    ColumnNameBuilder b=iter.hasNext() ? builder.copy() : builder;
    requested.add(b.add(t).build());
  }
  return new Iterable<Column>(){
    public Iterator<Column> iterator(){
      return new AbstractIterator<Column>(){
        Iterator<ByteBuffer> iter=requested.iterator();
        public Column computeNext(){
          while (iter.hasNext()) {
            Column column=cf.getColumn(iter.next());
            if (column != null)             return column;
          }
          return endOfData();
        }
      }
;
    }
  }
;
}
