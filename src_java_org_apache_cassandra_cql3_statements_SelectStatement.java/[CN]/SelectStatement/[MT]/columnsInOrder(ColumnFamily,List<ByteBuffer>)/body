{
  Restriction last=columnRestrictions[columnRestrictions.length - 1];
  if (last == null || !last.isEquality())   return cf.getSortedColumns();
  ColumnNameBuilder builder=cfDef.getColumnNameBuilder();
  for (int i=0; i < columnRestrictions.length - 1; i++)   builder.add(columnRestrictions[i].eqValues.get(0).bindAndGet(variables));
  final List<ByteBuffer> requested=new ArrayList<ByteBuffer>(last.eqValues.size());
  Iterator<Term> iter=last.eqValues.iterator();
  while (iter.hasNext()) {
    Term t=iter.next();
    ColumnNameBuilder b=iter.hasNext() ? builder.copy() : builder;
    requested.add(b.add(t.bindAndGet(variables)).build());
  }
  return new Iterable<IColumn>(){
    public Iterator<IColumn> iterator(){
      return new AbstractIterator<IColumn>(){
        Iterator<ByteBuffer> iter=(isReversed ? Lists.reverse(requested) : requested).iterator();
        public IColumn computeNext(){
          while (iter.hasNext()) {
            IColumn column=cf.getColumn(iter.next());
            if (column != null)             return column;
          }
          return endOfData();
        }
      }
;
    }
  }
;
}
