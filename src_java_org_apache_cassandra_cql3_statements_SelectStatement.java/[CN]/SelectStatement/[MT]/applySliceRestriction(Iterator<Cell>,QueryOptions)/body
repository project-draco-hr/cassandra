{
  final CellNameType type=cfm.comparator;
  final CellName excludedStart=makeExclusiveSliceBound(Bound.START,type,options);
  final CellName excludedEnd=makeExclusiveSliceBound(Bound.END,type,options);
  return Iterators.filter(cells,new Predicate<Cell>(){
    public boolean apply(    Cell c){
      return !((excludedStart != null && type.compare(c.name(),excludedStart) == 0) || (excludedEnd != null && type.compare(c.name(),excludedEnd) == 0));
    }
  }
);
}
