{
  List<List<ByteBuffer>> splitInValues=restriction.splitValues(options);
  TreeSet<Composite> inValues=new TreeSet<>(isReversed ? type.reverseComparator() : type);
  Iterator<ColumnDefinition> iter=defs.iterator();
  for (  List<ByteBuffer> components : splitInValues) {
    for (int i=0; i < components.size(); i++)     if (components.get(i) == null)     throw new InvalidRequestException("Invalid null value in condition for column " + defs.get(i));
    Composite prefix=builder.buildWith(components);
    Bound b=isReversed == isReversedType(iter.next()) ? bound : Bound.reverse(bound);
    inValues.add(b == Bound.END && builder.remainingCount() - components.size() > 0 ? prefix.end() : prefix);
  }
  return new ArrayList<>(inValues);
}
