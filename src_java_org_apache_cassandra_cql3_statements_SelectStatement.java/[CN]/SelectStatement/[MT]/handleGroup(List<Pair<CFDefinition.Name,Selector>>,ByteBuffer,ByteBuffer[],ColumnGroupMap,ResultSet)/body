{
  for (  Pair<CFDefinition.Name,Selector> p : selection) {
    CFDefinition.Name name=p.left;
    Selector selector=p.right;
switch (name.kind) {
case KEY_ALIAS:
      cqlRows.addColumnValue(keyComponents[name.position]);
    break;
case COLUMN_ALIAS:
  cqlRows.addColumnValue(columns.getKeyComponent(name.position));
break;
case VALUE_ALIAS:
throw new AssertionError();
case COLUMN_METADATA:
if (name.type.isCollection()) {
List<Pair<ByteBuffer,IColumn>> collection=columns.getCollection(name.name.key);
if (collection == null) cqlRows.addColumnValue(null);
 else cqlRows.addColumnValue(((CollectionType)name.type).serializeForThrift(collection));
break;
}
IColumn c=columns.getSimple(name.name.key);
addReturnValue(cqlRows,selector,c);
break;
default :
throw new AssertionError();
}
}
}
