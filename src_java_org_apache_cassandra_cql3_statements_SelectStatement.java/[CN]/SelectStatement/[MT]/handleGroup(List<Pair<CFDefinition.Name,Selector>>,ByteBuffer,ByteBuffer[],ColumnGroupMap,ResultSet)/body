{
  for (  Pair<CFDefinition.Name,Selector> p : selection) {
    CFDefinition.Name name=p.left;
    Selector selector=p.right;
switch (name.kind) {
case KEY_ALIAS:
      addReturnValue(cqlRows,selector,keyComponents[name.position]);
    break;
case COLUMN_ALIAS:
  addReturnValue(cqlRows,selector,columns.getKeyComponent(name.position));
break;
case VALUE_ALIAS:
throw new AssertionError();
case COLUMN_METADATA:
if (name.type.isCollection()) {
List<Pair<ByteBuffer,Column>> collection=columns.getCollection(name.name.key);
ByteBuffer value=collection == null ? null : ((CollectionType)name.type).serialize(collection);
addReturnValue(cqlRows,selector,value);
}
 else {
Column c=columns.getSimple(name.name.key);
addReturnValue(cqlRows,selector,c);
}
break;
default :
throw new AssertionError();
}
}
}
