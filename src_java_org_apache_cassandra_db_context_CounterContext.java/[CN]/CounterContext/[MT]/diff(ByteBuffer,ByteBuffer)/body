{
  ContextRelationship relationship=ContextRelationship.EQUAL;
  ContextState leftState=new ContextState(left,headerLength(left));
  ContextState rightState=new ContextState(right,headerLength(right));
  while (leftState.hasRemaining() && rightState.hasRemaining()) {
    int compareId=leftState.compareIdTo(rightState);
    if (compareId == 0) {
      long leftClock=leftState.getClock();
      long rightClock=rightState.getClock();
      leftState.moveToNext();
      rightState.moveToNext();
      if (leftClock == rightClock) {
        continue;
      }
 else       if ((leftClock >= 0 && rightClock > 0 && leftClock > rightClock) || (leftClock < 0 && (rightClock > 0 || leftClock < rightClock))) {
        if (relationship == ContextRelationship.EQUAL) {
          relationship=ContextRelationship.GREATER_THAN;
        }
 else         if (relationship == ContextRelationship.GREATER_THAN) {
          continue;
        }
 else {
          return ContextRelationship.DISJOINT;
        }
      }
 else {
        if (relationship == ContextRelationship.EQUAL) {
          relationship=ContextRelationship.LESS_THAN;
        }
 else         if (relationship == ContextRelationship.GREATER_THAN) {
          return ContextRelationship.DISJOINT;
        }
 else {
          continue;
        }
      }
    }
 else     if (compareId > 0) {
      rightState.moveToNext();
      if (relationship == ContextRelationship.EQUAL) {
        relationship=ContextRelationship.LESS_THAN;
      }
 else       if (relationship == ContextRelationship.GREATER_THAN) {
        return ContextRelationship.DISJOINT;
      }
 else {
        continue;
      }
    }
 else {
      leftState.moveToNext();
      if (relationship == ContextRelationship.EQUAL) {
        relationship=ContextRelationship.GREATER_THAN;
      }
 else       if (relationship == ContextRelationship.GREATER_THAN) {
        continue;
      }
 else {
        return ContextRelationship.DISJOINT;
      }
    }
  }
  if (leftState.hasRemaining()) {
    if (relationship == ContextRelationship.EQUAL) {
      return ContextRelationship.GREATER_THAN;
    }
 else     if (relationship == ContextRelationship.LESS_THAN) {
      return ContextRelationship.DISJOINT;
    }
  }
 else   if (rightState.hasRemaining()) {
    if (relationship == ContextRelationship.EQUAL) {
      return ContextRelationship.LESS_THAN;
    }
 else     if (relationship == ContextRelationship.GREATER_THAN) {
      return ContextRelationship.DISJOINT;
    }
  }
  return relationship;
}
