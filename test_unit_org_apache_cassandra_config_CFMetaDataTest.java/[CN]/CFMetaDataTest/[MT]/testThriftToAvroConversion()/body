{
  CfDef cfDef=new CfDef().setDefault_validation_class(AsciiType.class.getCanonicalName()).setComment("Test comment").setColumn_metadata(columnDefs).setKeyspace(KEYSPACE).setName(COLUMN_FAMILY);
  CFMetaData cfMetaData=CFMetaData.fromThrift(cfDef);
  org.apache.cassandra.db.migration.avro.CfDef avroCfDef=new org.apache.cassandra.db.migration.avro.CfDef();
  avroCfDef.keyspace=new Utf8(KEYSPACE);
  avroCfDef.name=new Utf8(COLUMN_FAMILY);
  avroCfDef.default_validation_class=new Utf8(cfDef.default_validation_class);
  avroCfDef.comment=new Utf8(cfDef.comment);
  avroCfDef.column_metadata=new ArrayList<org.apache.cassandra.db.migration.avro.ColumnDef>();
  for (  ColumnDef columnDef : columnDefs) {
    org.apache.cassandra.db.migration.avro.ColumnDef c=new org.apache.cassandra.db.migration.avro.ColumnDef();
    c.name=ByteBufferUtil.clone(columnDef.name);
    c.validation_class=new Utf8(columnDef.getValidation_class());
    c.index_name=new Utf8(columnDef.getIndex_name());
    c.index_type=org.apache.cassandra.db.migration.avro.IndexType.KEYS;
    avroCfDef.column_metadata.add(c);
  }
  org.apache.cassandra.db.migration.avro.CfDef converted=cfMetaData.toAvro();
  assertEquals(avroCfDef.keyspace,converted.keyspace);
  assertEquals(avroCfDef.name,converted.name);
  assertEquals(avroCfDef.default_validation_class,converted.default_validation_class);
  assertEquals(avroCfDef.comment,converted.comment);
  assertEquals(avroCfDef.column_metadata,converted.column_metadata);
}
