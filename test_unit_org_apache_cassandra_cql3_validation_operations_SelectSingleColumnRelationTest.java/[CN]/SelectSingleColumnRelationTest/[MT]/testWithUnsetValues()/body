{
  createTable("CREATE TABLE %s (k int, i int, j int, s text, PRIMARY KEY(k,i,j))");
  createIndex("CREATE INDEX s_index ON %s (s)");
  assertInvalidMessage("Invalid unset value for column k","SELECT * from %s WHERE k = ?",unset());
  assertInvalidMessage("Invalid unset value for column k","SELECT * from %s WHERE k IN ?",unset());
  assertInvalidMessage("Invalid unset value for column k","SELECT * from %s WHERE k IN(?)",unset());
  assertInvalidMessage("Invalid unset value for column k","SELECT * from %s WHERE k IN(?,?)",1,unset());
  assertInvalidMessage("Invalid unset value for column i","SELECT * from %s WHERE k = 1 AND i = ?",unset());
  assertInvalidMessage("Invalid unset value for column i","SELECT * from %s WHERE k = 1 AND i IN ?",unset());
  assertInvalidMessage("Invalid unset value for column i","SELECT * from %s WHERE k = 1 AND i IN(?)",unset());
  assertInvalidMessage("Invalid unset value for column i","SELECT * from %s WHERE k = 1 AND i IN(?,?)",1,unset());
  assertInvalidMessage("Invalid unset value for column i","SELECT * from %s WHERE i = ? ALLOW FILTERING",unset());
  assertInvalidMessage("Unsupported unset value for indexed column s","SELECT * from %s WHERE s = ?",unset());
  assertInvalidMessage("Invalid unset value for column i","SELECT * from %s WHERE k = 1 AND i > ?",unset());
}
