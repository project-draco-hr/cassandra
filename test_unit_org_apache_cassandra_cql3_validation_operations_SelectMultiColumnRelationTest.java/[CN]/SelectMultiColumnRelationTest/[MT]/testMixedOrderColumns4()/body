{
  for (  String compactOption : new String[]{""," COMPACT STORAGE AND "}) {
    createTable("CREATE TABLE %s (a int, b int, c int, d int, e int, PRIMARY KEY (a, b, c, d, e)) WITH " + compactOption + "CLUSTERING ORDER BY (b ASC, c DESC, d DESC, e ASC)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,2,0,-1,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,2,0,-1,1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,2,0,1,1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,2,-1,1,1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,2,-3,1,1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,-1,0,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,-1,1,1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,-1,1,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,0,1,-1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,0,1,1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,0,0,-1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,0,0,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,0,0,1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,0,-1,-1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,1,0,-1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,1,0,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,1,0,-1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,1,0,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,1,0,1);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,1,1,-1,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,0,0,0,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,-1,0,-1,0);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (?, ?, ?, ?, ?)",0,-1,0,0,0);
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c,d,e)<(?,?,?,?) "+ "AND (b,c,d,e)>(?,?,?,?)",0,2,0,1,1,-1,0,-1,-1),row(0,-1,0,0,0),row(0,-1,0,-1,0),row(0,0,0,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,-1),row(0,1,0,0,0),row(0,1,0,0,1),row(0,1,0,-1,-1),row(0,1,-1,1,0),row(0,1,-1,1,1),row(0,1,-1,0,0),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c,d,e) < (?,?,?,?) "+ "AND (b,c,d,e)>(?,?,?,?)",0,1,0,0,0,1,0,-1,-1),row(0,1,0,0,-1));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c,d,e) <= (?,?,?,?) "+ "AND (b,c,d,e)>(?,?,?,?)",0,1,0,0,0,1,0,-1,-1),row(0,1,0,0,-1),row(0,1,0,0,0));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c,d,e)<=(?,?,?,?) "+ "AND (b,c,d,e)>(?,?,?,?)",0,2,0,1,1,-1,0,-1,-1),row(0,-1,0,0,0),row(0,-1,0,-1,0),row(0,0,0,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,-1),row(0,1,0,0,0),row(0,1,0,0,1),row(0,1,0,-1,-1),row(0,1,-1,1,0),row(0,1,-1,1,1),row(0,1,-1,0,0),row(0,2,0,1,1),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c)<=(?,?) "+ "AND (b,c,d,e)>(?,?,?,?)",0,2,0,-1,0,-1,-1),row(0,-1,0,0,0),row(0,-1,0,-1,0),row(0,0,0,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,-1),row(0,1,0,0,0),row(0,1,0,0,1),row(0,1,0,-1,-1),row(0,1,-1,1,0),row(0,1,-1,1,1),row(0,1,-1,0,0),row(0,2,0,1,1),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c)<(?,?) "+ "AND (b,c,d,e)>(?,?,?,?)",0,2,0,-1,0,-1,-1),row(0,-1,0,0,0),row(0,-1,0,-1,0),row(0,0,0,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,-1),row(0,1,0,0,0),row(0,1,0,0,1),row(0,1,0,-1,-1),row(0,1,-1,1,0),row(0,1,-1,1,1),row(0,1,-1,0,0),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c,d,e)<=(?,?,?,?) "+ "AND (b)>=(?)",0,2,0,1,1,-1),row(0,-1,0,0,0),row(0,-1,0,-1,0),row(0,0,0,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,-1),row(0,1,0,0,0),row(0,1,0,0,1),row(0,1,0,-1,-1),row(0,1,-1,1,0),row(0,1,-1,1,1),row(0,1,-1,0,0),row(0,2,0,1,1),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c,d,e)<=(?,?,?,?) "+ "AND (b)>(?)",0,2,0,1,1,-1),row(0,0,0,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,-1),row(0,1,0,0,0),row(0,1,0,0,1),row(0,1,0,-1,-1),row(0,1,-1,1,0),row(0,1,-1,1,1),row(0,1,-1,0,0),row(0,2,0,1,1),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s WHERE a = ? AND (b,c,d,e) <= (?,?,?,?)",0,1,0,0,0),row(0,-1,0,0,0),row(0,-1,0,-1,0),row(0,0,0,0,0),row(0,1,0,0,-1),row(0,1,0,0,0),row(0,1,0,-1,-1),row(0,1,-1,1,0),row(0,1,-1,1,1),row(0,1,-1,0,0));
    assertRows(execute("SELECT * FROM %s WHERE a = ? AND (b,c,d,e) > (?,?,?,?)",0,1,0,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,1),row(0,2,0,1,1),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s WHERE a = ? AND (b,c,d,e) >= (?,?,?,?)",0,1,0,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,0),row(0,1,0,0,1),row(0,2,0,1,1),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s WHERE a = ? AND (b,c,d) >= (?,?,?)",0,1,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,1,0,0,-1),row(0,1,0,0,0),row(0,1,0,0,1),row(0,2,0,1,1),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s WHERE a = ? AND (b,c,d) > (?,?,?)",0,1,0,0),row(0,1,1,0,-1),row(0,1,1,0,0),row(0,1,1,0,1),row(0,1,1,-1,0),row(0,1,0,1,-1),row(0,1,0,1,1),row(0,2,0,1,1),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1),row(0,2,-3,1,1));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b) < (?) ",0,0),row(0,-1,0,0,0),row(0,-1,0,-1,0));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b) <= (?) ",0,-1),row(0,-1,0,0,0),row(0,-1,0,-1,0));
    assertRows(execute("SELECT * FROM %s" + " WHERE a = ? " + "AND (b,c,d,e) < (?,?,?,?) and (b,c,d,e) > (?,?,?,?) ",0,2,0,0,0,2,-2,0,0),row(0,2,0,-1,0),row(0,2,0,-1,1),row(0,2,-1,1,1));
  }
}
