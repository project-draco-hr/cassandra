{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case SUCCESS:
      if (field.type == TType.LIST) {
{
          TList _list49=iprot.readListBegin();
          this.success=new ArrayList<column_t>(_list49.size);
          for (int _i50=0; _i50 < _list49.size; ++_i50) {
            column_t _elem51;
            _elem51=new column_t();
            _elem51.read(iprot);
            this.success.add(_elem51);
          }
          iprot.readListEnd();
        }
        this.__isset.success=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case E:
  if (field.type == TType.STRUCT) {
    this.e=new CassandraException();
    this.e.read(iprot);
    this.__isset.e=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
