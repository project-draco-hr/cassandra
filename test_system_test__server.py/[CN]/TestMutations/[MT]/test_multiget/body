def test_multiget(self):
    'Insert multiple keys and retrieve them using the multiget interface'
    'Generate a list of 10 keys and insert them'
    num_keys = 10
    keys = [('key' + str(i)) for i in range(1, (num_keys + 1))]
    _insert_multi(keys)
    'Retrieve all 10 keys'
    rows = client.multiget('Keyspace1', keys, ColumnPath('Standard1', column='c1'), ConsistencyLevel.ONE)
    keys1 = rows.keys().sort()
    keys2 = keys.sort()
    'Validate if the returned rows have the keys requested and if the ColumnOrSuperColumn is what was inserted'
    for key in keys:
        assert (rows.has_key(key) == True)
        assert (rows[key] == ColumnOrSuperColumn(column=Column(timestamp=0, name='c1', value='value1')))
