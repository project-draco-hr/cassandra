def test_super_cf_remove_column(self):
    assert _insert_simple()
    assert _insert_super()
    client.remove('Table1', 'key1', 'Super1:sc2:c5', 5, True)
    time.sleep(0.1)
    _expect_missing((lambda : client.get_column('Table1', 'key1', 'Super1:sc2:c5')))
    assert (client.get_slice_super('Table1', 'key1', 'Super1', (-1), (-1)) == [superColumn_t(name='sc1', columns=[column_t(columnName='c4', value='value4', timestamp=0)]), superColumn_t(name='sc2', columns=[column_t(columnName='c6', value='value6', timestamp=0)])])
    _verify_simple()
    client.insert('Table1', 'key1', 'Super1:sc2:c7', 'value7', 0)
    time.sleep(0.1)
    scs = [superColumn_t(name='sc1', columns=[column_t(columnName='c4', value='value4', timestamp=0)]), superColumn_t(name='sc2', columns=[column_t(columnName='c6', value='value6', timestamp=0), column_t(columnName='c7', value='value7', timestamp=0)])]
    assert (client.get_slice_super('Table1', 'key1', 'Super1', (-1), (-1)) == scs)
    client.insert('Table1', 'key1', 'Super1:sc2:c5', 'value5', 0)
    time.sleep(0.1)
    actual = client.get_slice_super('Table1', 'key1', 'Super1', (-1), (-1))
    assert (actual == scs), actual
    client.insert('Table1', 'key1', 'Super1:sc2:c5', 'value5', 6)
    time.sleep(0.1)
    actual = client.get_slice_super('Table1', 'key1', 'Super1', (-1), (-1))
    assert (actual == [superColumn_t(name='sc1', columns=[column_t(columnName='c4', value='value4', timestamp=0)]), superColumn_t(name='sc2', columns=[column_t(columnName='c5', value='value5', timestamp=6), column_t(columnName='c6', value='value6', timestamp=0), column_t(columnName='c7', value='value7', timestamp=0)])]), actual
