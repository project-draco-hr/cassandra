{
  createTable("CREATE TABLE %s ( k int, c1 int, c2 int, v1 int, v2 int, PRIMARY KEY (k, c1, c2))");
  int numRows=5;
  int col1=2;
  int col2=2;
  int cpr=col1 * col2;
  for (int i=0; i < numRows; i++)   for (int j=0; j < col1; j++)   for (int k=0; k < col2; k++) {
    int n=(i * cpr) + (j * col2) + k;
    execute("INSERT INTO %s (k, c1, c2, v1, v2) VALUES (?, ?, ?, ?, ?)",i,j,k,n,n);
  }
  for (int i=0; i < numRows; i++) {
    Object[][] rows=getRows(execute("SELECT v1, v2 FROM %s where k = ?",i));
    for (int x=i * cpr; x < (i + 1) * cpr; x++) {
      assertEquals(x,rows[x - i * cpr][0]);
      assertEquals(x,rows[x - i * cpr][1]);
    }
  }
  for (int i=0; i < numRows; i++)   execute("DELETE FROM %s WHERE k = ? AND c1 = 0",i);
  for (int i=0; i < numRows; i++) {
    Object[][] rows=getRows(execute("SELECT v1, v2 FROM %s WHERE k = ?",i));
    for (int x=i * cpr + col1; x < (i + 1) * cpr; x++) {
      assertEquals(x,rows[x - i * cpr - col1][0]);
      assertEquals(x,rows[x - i * cpr - col1][1]);
    }
  }
  for (int i=0; i < numRows; i++) {
    Object[][] rows=getRows(execute("SELECT v1, v2 FROM %s WHERE k = ?",i));
    for (int x=i * cpr + col1; x < (i + 1) * cpr; x++) {
      assertEquals(x,rows[x - i * cpr - col1][0]);
      assertEquals(x,rows[x - i * cpr - col1][1]);
    }
  }
}
