{
  for (  String compactOption : new String[]{""," WITH COMPACT STORAGE"}) {
    createTable("CREATE TABLE %s (partitionKey int," + "clustering_1 int," + "clustering_2 int,"+ "value int,"+ " PRIMARY KEY (partitionKey, clustering_1, clustering_2))"+ compactOption);
    int value=0;
    for (int partitionKey=0; partitionKey < 5; partitionKey++)     for (int clustering1=0; clustering1 < 5; clustering1++)     for (int clustering2=0; clustering2 < 5; clustering2++) {
      execute("INSERT INTO %s (partitionKey, clustering_1, clustering_2, value) VALUES (?, ?, ?, ?)",partitionKey,clustering1,clustering2,value++);
    }
    flush(forceFlush);
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 = ?",0,1);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND clustering_1 < ?",0,2),row(0,0,0,0),row(0,0,1,1),row(0,0,2,2),row(0,0,3,3),row(0,0,4,4));
    execute("DELETE FROM %s WHERE partitionKey = ?",1);
    flush(forceFlush);
    assertEmpty(execute("SELECT * FROM %s WHERE partitionKey = ?",1));
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 = ? AND clustering_2 < ?",0,0,2);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND clustering_1 < ?",0,2),row(0,0,2,2),row(0,0,3,3),row(0,0,4,4));
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 = ? AND clustering_2 <= ?",0,0,3);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND clustering_1 < ?",0,2),row(0,0,4,4));
    execute("DELETE FROM %s WHERE partitionKey = ? AND  clustering_1 = ? AND clustering_2 > ? ",0,2,2);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND  clustering_1 = ?",0,2),row(0,2,0,10),row(0,2,1,11),row(0,2,2,12));
    execute("DELETE FROM %s WHERE partitionKey = ? AND  clustering_1 = ? AND clustering_2 >= ? ",0,2,1);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND  clustering_1 = ?",0,2),row(0,2,0,10));
    execute("DELETE FROM %s WHERE partitionKey = ? AND  clustering_1 = ? AND clustering_2 > ? AND clustering_2 < ? ",0,3,1,4);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND  clustering_1 = ?",0,3),row(0,3,0,15),row(0,3,1,16),row(0,3,4,19));
    execute("DELETE FROM %s WHERE partitionKey = ? AND  clustering_1 = ? AND clustering_2 > ? AND clustering_2 < ? ",0,3,4,1);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND  clustering_1 = ?",0,3),row(0,3,0,15),row(0,3,1,16),row(0,3,4,19));
    execute("DELETE FROM %s WHERE partitionKey = ? AND  clustering_1 = ? AND clustering_2 >= ? AND clustering_2 <= ? ",0,3,1,4);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND  clustering_1 = ?",0,3),row(0,3,0,15));
    execute("DELETE FROM %s WHERE partitionKey = ? AND  clustering_1 >= ?",0,4);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",0),row(0,0,4,4),row(0,2,0,10),row(0,3,0,15));
    execute("DELETE FROM %s WHERE partitionKey = ? AND  clustering_1 > ?",0,3);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",0),row(0,0,4,4),row(0,2,0,10),row(0,3,0,15));
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 < ?",0,3);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",0),row(0,3,0,15));
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 >= ? AND clustering_1 < ?",2,0,3);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",2),row(2,3,0,65),row(2,3,1,66),row(2,3,2,67),row(2,3,3,68),row(2,3,4,69),row(2,4,0,70),row(2,4,1,71),row(2,4,2,72),row(2,4,3,73),row(2,4,4,74));
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 > ? AND clustering_1 <= ?",2,3,5);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",2),row(2,3,0,65),row(2,3,1,66),row(2,3,2,67),row(2,3,3,68),row(2,3,4,69));
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 < ? AND clustering_1 > ?",2,3,5);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",2),row(2,3,0,65),row(2,3,1,66),row(2,3,2,67),row(2,3,3,68),row(2,3,4,69));
    execute("DELETE FROM %s WHERE partitionKey = ? AND (clustering_1, clustering_2) > (?, ?)",2,3,3);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",2),row(2,3,0,65),row(2,3,1,66),row(2,3,2,67),row(2,3,3,68));
    execute("DELETE FROM %s WHERE partitionKey = ? AND (clustering_1, clustering_2) < (?, ?)",2,3,1);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",2),row(2,3,1,66),row(2,3,2,67),row(2,3,3,68));
    execute("DELETE FROM %s WHERE partitionKey = ? AND (clustering_1, clustering_2) >= (?, ?) AND (clustering_1) <= (?)",2,3,2,4);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ?",2),row(2,3,1,66));
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 = ? AND (clustering_2) < (?)",3,0,3);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND clustering_1 = ?",3,0),row(3,0,3,78),row(3,0,4,79));
    execute("DELETE FROM %s WHERE partitionKey = ? AND clustering_1 IN (?, ?) AND (clustering_2) >= (?)",3,0,1,3);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND clustering_1 IN (?, ?)",3,0,1),row(3,1,0,80),row(3,1,1,81),row(3,1,2,82));
    execute("DELETE FROM %s WHERE partitionKey = ? AND (clustering_1) IN ((?), (?)) AND clustering_2 < ?",3,0,1,1);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND clustering_1 IN (?, ?)",3,0,1),row(3,1,1,81),row(3,1,2,82));
    execute("DELETE FROM %s WHERE partitionKey = ? AND (clustering_1) = (?) AND clustering_2 >= ?",3,1,2);
    flush(forceFlush);
    assertRows(execute("SELECT * FROM %s WHERE partitionKey = ? AND clustering_1 IN (?, ?)",3,0,1),row(3,1,1,81));
    assertInvalidMessage("Range deletions are not supported for specific columns","DELETE value FROM %s WHERE partitionKey = ? AND (clustering_1, clustering_2) >= (?, ?)",2,3,1);
    assertInvalidMessage("Range deletions are not supported for specific columns","DELETE value FROM %s WHERE partitionKey = ? AND clustering_1 >= ?",2,3);
    assertInvalidMessage("Range deletions are not supported for specific columns","DELETE value FROM %s WHERE partitionKey = ? AND clustering_1 = ?",2,3);
    assertInvalidMessage("Range deletions are not supported for specific columns","DELETE value FROM %s WHERE partitionKey = ?",2);
  }
}
