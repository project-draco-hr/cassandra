{
  generateTokens(stressProfile.seedStr,StorageService.instance.getTokenMetadata(),numTokens);
  CreateTableStatement.RawStatement createStatement=stressProfile.getCreateStatement();
  List<File> dataDirectories=getDataDirectories();
  ColumnFamilyStore cfs=StressCQLSSTableWriter.Builder.createOfflineTable(createStatement,Collections.EMPTY_LIST,dataDirectories);
  if (loadSSTables) {
    Directories.SSTableLister lister=cfs.getDirectories().sstableLister(Directories.OnTxnErr.IGNORE).skipTemporary(true);
    List<SSTableReader> sstables=new ArrayList<>();
    for (    Map.Entry<Descriptor,Set<Component>> entry : lister.list().entrySet()) {
      Set<Component> components=entry.getValue();
      if (!components.contains(Component.DATA))       continue;
      try {
        SSTableReader sstable=SSTableReader.openNoValidation(entry.getKey(),components,cfs);
        sstables.add(sstable);
      }
 catch (      Exception e) {
        JVMStabilityInspector.inspectThrowable(e);
        System.err.println(String.format("Error Loading %s: %s",entry.getKey(),e.getMessage()));
      }
    }
    cfs.disableAutoCompaction();
    cfs.addSSTables(sstables);
  }
  return cfs;
}
