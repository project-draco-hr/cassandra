{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case TABLE:
      if (field.type == TType.STRING) {
        this.table=iprot.readString();
        this.__isset.table=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case KEY:
  if (field.type == TType.STRING) {
    this.key=iprot.readString();
    this.__isset.key=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case CFMAP:
if (field.type == TType.MAP) {
{
  TMap _map13=iprot.readMapBegin();
  this.cfmap=new HashMap<String,List<superColumn_t>>(2 * _map13.size);
  for (int _i14=0; _i14 < _map13.size; ++_i14) {
    String _key15;
    List<superColumn_t> _val16;
    _key15=iprot.readString();
{
      TList _list17=iprot.readListBegin();
      _val16=new ArrayList<superColumn_t>(_list17.size);
      for (int _i18=0; _i18 < _list17.size; ++_i18) {
        superColumn_t _elem19;
        _elem19=new superColumn_t();
        _elem19.read(iprot);
        _val16.add(_elem19);
      }
      iprot.readListEnd();
    }
    this.cfmap.put(_key15,_val16);
  }
  iprot.readMapEnd();
}
this.__isset.cfmap=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
