{
  ColumnFamilyStore cfs=MockSchema.newCFS();
  View initialView=fakeView(1,0,cfs);
  View cur=initialView;
  Memtable memtable1=initialView.getCurrentMemtable();
  Memtable memtable2=MockSchema.memtable(cfs);
  cur=View.switchMemtable(memtable2).apply(cur);
  Assert.assertEquals(2,cur.liveMemtables.size());
  Assert.assertEquals(memtable1,cur.liveMemtables.get(0));
  Assert.assertEquals(memtable2,cur.getCurrentMemtable());
  Memtable memtable3=MockSchema.memtable(cfs);
  cur=View.switchMemtable(memtable3).apply(cur);
  Assert.assertEquals(3,cur.liveMemtables.size());
  Assert.assertEquals(0,cur.flushingMemtables.size());
  Assert.assertEquals(memtable1,cur.liveMemtables.get(0));
  Assert.assertEquals(memtable2,cur.liveMemtables.get(1));
  Assert.assertEquals(memtable3,cur.getCurrentMemtable());
  testFailure(View.replaceFlushed(memtable2,null),cur);
  cur=View.markFlushing(memtable2).apply(cur);
  Assert.assertTrue(cur.flushingMemtables.contains(memtable2));
  Assert.assertEquals(2,cur.liveMemtables.size());
  Assert.assertEquals(1,cur.flushingMemtables.size());
  Assert.assertEquals(memtable2,cur.flushingMemtables.get(0));
  Assert.assertEquals(memtable1,cur.liveMemtables.get(0));
  Assert.assertEquals(memtable3,cur.getCurrentMemtable());
  cur=View.markFlushing(memtable1).apply(cur);
  Assert.assertEquals(1,cur.liveMemtables.size());
  Assert.assertEquals(2,cur.flushingMemtables.size());
  Assert.assertEquals(memtable1,cur.flushingMemtables.get(0));
  Assert.assertEquals(memtable2,cur.flushingMemtables.get(1));
  Assert.assertEquals(memtable3,cur.getCurrentMemtable());
  cur=View.replaceFlushed(memtable2,null).apply(cur);
  Assert.assertEquals(1,cur.liveMemtables.size());
  Assert.assertEquals(1,cur.flushingMemtables.size());
  Assert.assertEquals(memtable1,cur.flushingMemtables.get(0));
  Assert.assertEquals(memtable3,cur.getCurrentMemtable());
  SSTableReader sstable=MockSchema.sstable(1,cfs);
  cur=View.replaceFlushed(memtable1,sstable).apply(cur);
  Assert.assertEquals(0,cur.flushingMemtables.size());
  Assert.assertEquals(1,cur.liveMemtables.size());
  Assert.assertEquals(memtable3,cur.getCurrentMemtable());
  Assert.assertEquals(1,cur.sstables.size());
  Assert.assertEquals(sstable,cur.sstablesMap.get(sstable));
}
