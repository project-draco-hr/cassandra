{
  ReplicationSink rSink=new ReplicationSink();
  SinkManager.add(rSink);
  final AtomicBoolean success=new AtomicBoolean(false);
  Thread remover=new Thread(){
    public void run(){
      try {
        ss.removeNode(removalId.toString());
      }
 catch (      Exception e) {
        System.err.println(e);
        e.printStackTrace();
        return;
      }
      success.set(true);
    }
  }
;
  remover.start();
  Thread.sleep(1000);
  assertTrue(tmd.isLeaving(removalhost));
  assertEquals(1,tmd.getLeavingEndpoints().size());
  for (  InetAddress host : hosts) {
    MessageOut msg=new MessageOut(StorageService.Verb.REPLICATION_FINISHED);
    MessagingService.instance().sendRR(msg,FBUtilities.getBroadcastAddress());
  }
  remover.join();
  assertTrue(success.get());
  assertTrue(tmd.getLeavingEndpoints().isEmpty());
}
