{
  String outputReducerType="filesystem";
  if (args != null && args[0].startsWith(OUTPUT_REDUCER_VAR)) {
    String[] s=args[0].split("=");
    if (s != null && s.length == 2)     outputReducerType=s[1];
  }
  logger.info("output reducer type: " + outputReducerType);
  ConfigHelper.setRangeBatchSize(getConf(),99);
  for (int i=0; i < WordCountSetup.TEST_COUNT; i++) {
    String columnName="text" + i;
    Job job=new Job(getConf(),"wordcount");
    job.setJarByClass(WordCount.class);
    job.setMapperClass(TokenizerMapper.class);
    if (outputReducerType.equalsIgnoreCase("filesystem")) {
      job.setCombinerClass(ReducerToFilesystem.class);
      job.setReducerClass(ReducerToFilesystem.class);
      job.setOutputKeyClass(Text.class);
      job.setOutputValueClass(IntWritable.class);
      FileOutputFormat.setOutputPath(job,new Path(OUTPUT_PATH_PREFIX + i));
    }
 else {
      job.setReducerClass(ReducerToCassandra.class);
      job.setMapOutputKeyClass(Text.class);
      job.setMapOutputValueClass(IntWritable.class);
      job.setOutputKeyClass(ByteBuffer.class);
      job.setOutputValueClass(List.class);
      job.setOutputFormatClass(ColumnFamilyOutputFormat.class);
      ConfigHelper.setOutputColumnFamily(job.getConfiguration(),KEYSPACE,OUTPUT_COLUMN_FAMILY);
      job.getConfiguration().set(CONF_COLUMN_NAME,"sum");
    }
    job.setInputFormatClass(ColumnFamilyInputFormat.class);
    ConfigHelper.setInputRpcPort(job.getConfiguration(),"9160");
    ConfigHelper.setInputInitialAddress(job.getConfiguration(),"localhost");
    ConfigHelper.setInputPartitioner(job.getConfiguration(),"RandomPartitioner");
    ConfigHelper.setInputColumnFamily(job.getConfiguration(),KEYSPACE,COLUMN_FAMILY);
    SlicePredicate predicate=new SlicePredicate().setColumn_names(Arrays.asList(ByteBufferUtil.bytes(columnName)));
    ConfigHelper.setInputSlicePredicate(job.getConfiguration(),predicate);
    if (i == 4) {
      IndexExpression expr=new IndexExpression(ByteBufferUtil.bytes("int4"),IndexOperator.EQ,ByteBufferUtil.bytes(0));
      ConfigHelper.setInputRange(job.getConfiguration(),Arrays.asList(expr));
    }
    if (i == 5) {
      ConfigHelper.setInputColumnFamily(job.getConfiguration(),KEYSPACE,COLUMN_FAMILY,true);
    }
    ConfigHelper.setOutputInitialAddress(job.getConfiguration(),"localhost");
    ConfigHelper.setOutputPartitioner(job.getConfiguration(),"RandomPartitioner");
    job.waitForCompletion(true);
  }
  return 0;
}
