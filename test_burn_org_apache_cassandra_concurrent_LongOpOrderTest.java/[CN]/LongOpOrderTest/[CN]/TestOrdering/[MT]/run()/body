{
  final long until=System.currentTimeMillis() + RUNTIME;
  long lastReport=System.currentTimeMillis();
  long count=0;
  long opCount=0;
  while (true) {
    long now=System.currentTimeMillis();
    if (now > until)     break;
    if (now > lastReport + REPORT_INTERVAL) {
      lastReport=now;
      logger.info(String.format("%s: Executed %d barriers with %d operations. %.0f%% complete.",Thread.currentThread().getName(),count,opCount,100 * (1 - ((until - now) / (double)RUNTIME))));
    }
    try {
      Thread.sleep(0,waitNanos[((int)(count & (waitNanos.length - 1)))]);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
    final State s=state;
    s.barrier=order.newBarrier();
    s.replacement=new State();
    s.barrier.issue();
    s.barrier.await();
    s.check();
    opCount+=s.totalCount();
    state=s.replacement;
    sched.schedule(new Runnable(){
      @Override public void run(){
        s.check();
      }
    }
,1,TimeUnit.SECONDS);
    count++;
  }
}
