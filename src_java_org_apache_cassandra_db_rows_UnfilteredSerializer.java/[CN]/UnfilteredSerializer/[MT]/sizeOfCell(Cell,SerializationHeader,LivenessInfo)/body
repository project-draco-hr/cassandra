{
  long size=1;
  if (cell == null)   return size;
  boolean hasValue=cell.value().hasRemaining();
  boolean isDeleted=cell.isTombstone();
  boolean isExpiring=cell.isExpiring();
  boolean useRowTimestamp=rowLiveness.hasTimestamp() && cell.livenessInfo().timestamp() == rowLiveness.timestamp();
  boolean useRowTTL=isExpiring && rowLiveness.hasTTL() && cell.livenessInfo().ttl() == rowLiveness.ttl() && cell.livenessInfo().localDeletionTime() == rowLiveness.localDeletionTime();
  if (hasValue)   size+=header.getType(cell.column()).writtenLength(cell.value());
  if (!useRowTimestamp)   size+=TypeSizes.sizeof(header.encodeTimestamp(cell.livenessInfo().timestamp()));
  if ((isDeleted || isExpiring) && !useRowTTL)   size+=TypeSizes.sizeof(header.encodeDeletionTime(cell.livenessInfo().localDeletionTime()));
  if (isExpiring && !useRowTTL)   size+=TypeSizes.sizeof(header.encodeTTL(cell.livenessInfo().ttl()));
  if (cell.column().isComplex())   size+=cell.column().cellPathSerializer().serializedSize(cell.path());
  return size;
}
