{
  long size=1 + RangeTombstone.Bound.serializer.serializedSize(marker.clustering(),version,header.clusteringTypes(),sizes);
  if (marker.isBoundary()) {
    RangeTombstoneBoundaryMarker bm=(RangeTombstoneBoundaryMarker)marker;
    size+=UnfilteredRowIteratorSerializer.delTimeSerializedSize(bm.endDeletionTime(),header,sizes);
    size+=UnfilteredRowIteratorSerializer.delTimeSerializedSize(bm.startDeletionTime(),header,sizes);
  }
 else {
    size+=UnfilteredRowIteratorSerializer.delTimeSerializedSize(((RangeTombstoneBoundMarker)marker).deletionTime(),header,sizes);
  }
  return size;
}
