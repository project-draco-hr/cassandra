{
  boolean isStatic=isStatic(flags);
  boolean hasTimestamp=(flags & HAS_TIMESTAMP) != 0;
  boolean hasTTL=(flags & HAS_TTL) != 0;
  boolean hasDeletion=(flags & HAS_DELETION) != 0;
  boolean hasComplexDeletion=(flags & HAS_COMPLEX_DELETION) != 0;
  if (hasTimestamp)   header.skipTimestamp(in);
  if (hasTTL) {
    header.skipLocalDeletionTime(in);
    header.skipTTL(in);
  }
  if (hasDeletion)   header.skipDeletionTime(in);
  Columns columns=header.columns(isStatic);
  if (header.useSparseColumnLayout(isStatic)) {
    int count=columns.columnCount();
    int simpleCount=columns.simpleColumnCount();
    int i;
    while ((i=in.readShort()) >= 0) {
      if (i > count)       throw new IOException(String.format("Impossible column index %d, the header has only %d columns defined",i,count));
      if (i < simpleCount)       Cell.serializer.skip(in,columns.getSimple(i),header);
 else       skipComplexColumn(in,columns.getComplex(i - simpleCount),header,hasComplexDeletion);
    }
  }
 else {
    for (int i=0; i < columns.simpleColumnCount(); i++)     Cell.serializer.skip(in,columns.getSimple(i),header);
    for (int i=0; i < columns.complexColumnCount(); i++)     skipComplexColumn(in,columns.getComplex(i),header,hasComplexDeletion);
  }
}
