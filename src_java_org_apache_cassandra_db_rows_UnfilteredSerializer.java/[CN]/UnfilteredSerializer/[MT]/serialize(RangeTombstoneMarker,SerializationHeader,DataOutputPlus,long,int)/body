{
  out.writeByte((byte)IS_MARKER);
  ClusteringBoundOrBoundary.serializer.serialize(marker.clustering(),out,version,header.clusteringTypes());
  if (header.isForSSTable()) {
    out.writeUnsignedVInt(serializedMarkerBodySize(marker,header,previousUnfilteredSize,version));
    out.writeUnsignedVInt(previousUnfilteredSize);
  }
  if (marker.isBoundary()) {
    RangeTombstoneBoundaryMarker bm=(RangeTombstoneBoundaryMarker)marker;
    header.writeDeletionTime(bm.endDeletionTime(),out);
    header.writeDeletionTime(bm.startDeletionTime(),out);
  }
 else {
    header.writeDeletionTime(((RangeTombstoneBoundMarker)marker).deletionTime(),out);
  }
}
