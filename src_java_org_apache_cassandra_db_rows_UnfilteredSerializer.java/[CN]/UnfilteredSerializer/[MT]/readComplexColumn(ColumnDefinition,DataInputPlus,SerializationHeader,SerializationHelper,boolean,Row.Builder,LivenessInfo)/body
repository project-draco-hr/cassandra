{
  if (helper.includes(column)) {
    helper.startOfComplexColumn(column);
    if (hasComplexDeletion) {
      DeletionTime complexDeletion=header.readDeletionTime(in);
      if (!helper.isDroppedComplexDeletion(complexDeletion))       builder.addComplexDeletion(column,complexDeletion);
    }
    int count=(int)in.readUnsignedVInt();
    while (--count >= 0) {
      Cell cell=Cell.serializer.deserialize(in,rowLiveness,column,header,helper);
      if (helper.includes(cell.path()) && !helper.isDropped(cell,true))       builder.addCell(cell);
    }
    helper.endOfComplexColumn();
  }
 else {
    skipComplexColumn(in,column,header,hasComplexDeletion);
  }
}
