{
  List<Integer> pattern=samplePatternCache.get(samplingLevel);
  if (pattern != null)   return pattern;
  if (samplingLevel <= 1)   return Arrays.asList(0);
  int[] odds=new int[samplingLevel / 2];
  int[] evens=new int[samplingLevel / 2];
  for (int i=1; i < samplingLevel; i+=2)   odds[i / 2]=i;
  for (int i=0; i < samplingLevel; i+=2)   evens[i / 2]=i;
  List<Integer> ordering=getSamplingPattern(samplingLevel / 2);
  List<Integer> startIndices=new ArrayList<>(samplingLevel);
  for (  Integer index : ordering)   startIndices.add(odds[index]);
  for (  Integer index : ordering)   startIndices.add(evens[index]);
  samplePatternCache.put(samplingLevel,startIndices);
  return startIndices;
}
