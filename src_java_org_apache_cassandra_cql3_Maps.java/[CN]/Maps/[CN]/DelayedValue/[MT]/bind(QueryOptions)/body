{
  Map<ByteBuffer,ByteBuffer> buffers=new TreeMap<ByteBuffer,ByteBuffer>(comparator);
  for (  Map.Entry<Term,Term> entry : elements.entrySet()) {
    ByteBuffer keyBytes=entry.getKey().bindAndGet(options);
    if (keyBytes == null)     throw new InvalidRequestException("null is not supported inside collections");
    if (keyBytes.remaining() > FBUtilities.MAX_UNSIGNED_SHORT)     throw new InvalidRequestException(String.format("Map key is too long. Map keys are limited to %d bytes but %d bytes keys provided",FBUtilities.MAX_UNSIGNED_SHORT,keyBytes.remaining()));
    ByteBuffer valueBytes=entry.getValue().bindAndGet(options);
    if (valueBytes == null)     throw new InvalidRequestException("null is not supported inside collections");
    if (valueBytes.remaining() > FBUtilities.MAX_UNSIGNED_SHORT)     throw new InvalidRequestException(String.format("Map value is too long. Map values are limited to %d bytes but %d bytes value provided",FBUtilities.MAX_UNSIGNED_SHORT,valueBytes.remaining()));
    buffers.put(keyBytes,valueBytes);
  }
  return new Value(buffers);
}
