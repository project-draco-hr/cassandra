{
  validateAssignableTo(receiver);
  ColumnSpecification keySpec=Maps.keySpecOf(receiver);
  ColumnSpecification valueSpec=Maps.valueSpecOf(receiver);
  Map<Term,Term> values=new HashMap<Term,Term>(entries.size());
  boolean allTerminal=true;
  for (  Pair<Term.Raw,Term.Raw> entry : entries) {
    Term k=entry.left.prepare(keySpec);
    Term v=entry.right.prepare(valueSpec);
    if (k.containsBindMarker() || v.containsBindMarker())     throw new InvalidRequestException(String.format("Invalid map literal for %s: bind variables are not supported inside collection literals",receiver));
    if (k instanceof Term.NonTerminal || v instanceof Term.NonTerminal)     allTerminal=false;
    if (values.put(k,v) != null)     throw new InvalidRequestException(String.format("Invalid map literal: duplicate entry for key %s",entry.left));
  }
  DelayedValue value=new DelayedValue(((MapType)receiver.type).keys,values);
  return allTerminal ? value.bind(Collections.<ByteBuffer>emptyList()) : value;
}
