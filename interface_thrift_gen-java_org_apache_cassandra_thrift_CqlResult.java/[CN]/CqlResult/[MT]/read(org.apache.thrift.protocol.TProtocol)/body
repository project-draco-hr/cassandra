{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.I32) {
        this.type=CqlResultType.findByValue(iprot.readI32());
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list50=iprot.readListBegin();
      this.rows=new ArrayList<CqlRow>(_list50.size);
      for (int _i51=0; _i51 < _list50.size; ++_i51) {
        CqlRow _elem52;
        _elem52=new CqlRow();
        _elem52.read(iprot);
        this.rows.add(_elem52);
      }
      iprot.readListEnd();
    }
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.I32) {
this.num=iprot.readI32();
setNumIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
