{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetType()).compareTo(other.isSetType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.type,other.type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRows()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.rows,other.rows);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNum()).compareTo(other.isSetNum());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNum()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.num,other.num);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSchema()).compareTo(other.isSetSchema());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSchema()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.schema,other.schema);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
