{
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  SingleColumnRestriction.Slice slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Relation.Type.GT,toTerm(value1));
  Restriction[] restrictions=new Restriction[]{slice};
  CFDefinition cfDef=createCFDefinition(restrictions.length);
  List<ByteBuffer> bounds=executeBuildBound(cfDef,restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertForRelationComposite(cfDef,bounds.get(0),Relation.Type.GT,value1);
  bounds=executeBuildBound(cfDef,restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertComposite(cfDef,bounds.get(0));
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Relation.Type.GTE,toTerm(value1));
  restrictions=new Restriction[]{slice};
  bounds=executeBuildBound(cfDef,restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertForRelationComposite(cfDef,bounds.get(0),Relation.Type.GTE,value1);
  bounds=executeBuildBound(cfDef,restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertComposite(cfDef,bounds.get(0));
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Relation.Type.LTE,toTerm(value1));
  restrictions=new Restriction[]{slice};
  bounds=executeBuildBound(cfDef,restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertComposite(cfDef,bounds.get(0));
  bounds=executeBuildBound(cfDef,restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertForRelationComposite(cfDef,bounds.get(0),Relation.Type.LTE,value1);
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Relation.Type.LT,toTerm(value1));
  restrictions=new Restriction[]{slice};
  bounds=executeBuildBound(cfDef,restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertComposite(cfDef,bounds.get(0));
  bounds=executeBuildBound(cfDef,restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertForRelationComposite(cfDef,bounds.get(0),Relation.Type.LT,value1);
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Relation.Type.GT,toTerm(value1));
  slice.setBound(Relation.Type.LT,toTerm(value2));
  restrictions=new Restriction[]{slice};
  bounds=executeBuildBound(cfDef,restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertForRelationComposite(cfDef,bounds.get(0),Relation.Type.GT,value1);
  bounds=executeBuildBound(cfDef,restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertForRelationComposite(cfDef,bounds.get(0),Relation.Type.LT,value2);
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Relation.Type.GTE,toTerm(value1));
  slice.setBound(Relation.Type.LTE,toTerm(value2));
  restrictions=new Restriction[]{slice};
  bounds=executeBuildBound(cfDef,restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertForRelationComposite(cfDef,bounds.get(0),Relation.Type.GTE,value1);
  bounds=executeBuildBound(cfDef,restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertForRelationComposite(cfDef,bounds.get(0),Relation.Type.LTE,value2);
}
