{
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  ByteBuffer value3=ByteBufferUtil.bytes(3);
  SingleColumnRestriction.EQ eq=new SingleColumnRestriction.EQ(toTerm(value3),false);
  SingleColumnRestriction.Slice slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Operator.GT,toTerm(value1));
  Restriction[] restrictions=new Restriction[]{eq,slice};
  List<Composite> bounds=executeBuildBound(restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,value1,EOC.END);
  bounds=executeBuildBound(restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,EOC.END);
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Operator.GTE,toTerm(value1));
  restrictions=new Restriction[]{eq,slice};
  bounds=executeBuildBound(restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,value1,EOC.NONE);
  bounds=executeBuildBound(restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,EOC.END);
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Operator.LTE,toTerm(value1));
  restrictions=new Restriction[]{eq,slice};
  bounds=executeBuildBound(restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,EOC.START);
  bounds=executeBuildBound(restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,value1,EOC.END);
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Operator.LT,toTerm(value1));
  restrictions=new Restriction[]{eq,slice};
  bounds=executeBuildBound(restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,EOC.START);
  bounds=executeBuildBound(restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,value1,EOC.START);
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Operator.GT,toTerm(value1));
  slice.setBound(Operator.LT,toTerm(value2));
  restrictions=new Restriction[]{eq,slice};
  bounds=executeBuildBound(restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,value1,EOC.END);
  bounds=executeBuildBound(restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,value2,EOC.START);
  slice=new SingleColumnRestriction.Slice(false);
  slice.setBound(Operator.GTE,toTerm(value1));
  slice.setBound(Operator.LTE,toTerm(value1));
  restrictions=new Restriction[]{eq,slice};
  bounds=executeBuildBound(restrictions,Bound.START);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,value1,EOC.NONE);
  bounds=executeBuildBound(restrictions,Bound.END);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value3,value1,EOC.END);
}
