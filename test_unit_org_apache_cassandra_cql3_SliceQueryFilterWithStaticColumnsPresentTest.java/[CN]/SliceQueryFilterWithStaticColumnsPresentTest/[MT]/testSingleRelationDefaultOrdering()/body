{
  UntypedResultSet results=execute("SELECT * FROM %s.single_clustering WHERE p='p1' AND c>='k1'");
  assertEquals(2,results.size());
  checkRow(0,results,"p1","k1","sv1","v1");
  checkRow(1,results,"p1","k2","sv1","v2");
  results=execute("SELECT * FROM %s.single_clustering WHERE p='p1' AND c>='k2'");
  assertEquals(1,results.size());
  checkRow(0,results,"p1","k2","sv1","v2");
  results=execute("SELECT * FROM %s.single_clustering WHERE p='p1' AND c>='k3'");
  assertEquals(0,results.size());
  results=execute("SELECT * FROM %s.single_clustering WHERE p='p1' AND c ='k1'");
  assertEquals(1,results.size());
  checkRow(0,results,"p1","k1","sv1","v1");
  results=execute("SELECT * FROM %s.single_clustering WHERE p='p1' AND c<='k1'");
  assertEquals(1,results.size());
  checkRow(0,results,"p1","k1","sv1","v1");
  results=execute("SELECT * FROM %s.single_clustering WHERE p='p1' AND c<='k0'");
  assertEquals(0,results.size());
  results=execute("SELECT * FROM %s.single_clustering_reversed WHERE p='p1' AND c>='k1'");
  assertEquals(2,results.size());
  checkRow(0,results,"p1","k2","sv1","v2");
  checkRow(1,results,"p1","k1","sv1","v1");
  results=execute("SELECT * FROM %s.single_clustering_reversed WHERE p='p1' AND c>='k2'");
  assertEquals(1,results.size());
  checkRow(0,results,"p1","k2","sv1","v2");
  results=execute("SELECT * FROM %s.single_clustering_reversed WHERE p='p1' AND c>='k3'");
  assertEquals(0,results.size());
  results=execute("SELECT * FROM %s.single_clustering_reversed WHERE p='p1' AND c='k1'");
  assertEquals(1,results.size());
  checkRow(0,results,"p1","k1","sv1","v1");
  results=execute("SELECT * FROM %s.single_clustering_reversed WHERE p='p1' AND c<='k1'");
  assertEquals(1,results.size());
  checkRow(0,results,"p1","k1","sv1","v1");
  results=execute("SELECT * FROM %s.single_clustering_reversed WHERE p='p1' AND c<='k0'");
  assertEquals(0,results.size());
}
