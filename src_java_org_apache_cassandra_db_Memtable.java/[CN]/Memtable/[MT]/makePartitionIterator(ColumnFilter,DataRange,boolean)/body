{
  AbstractBounds<PartitionPosition> keyRange=dataRange.keyRange();
  boolean startIsMin=keyRange.left.isMinimum();
  boolean stopIsMin=keyRange.right.isMinimum();
  boolean isBound=keyRange instanceof Bounds;
  boolean includeStart=isBound || keyRange instanceof IncludingExcludingBounds;
  boolean includeStop=isBound || keyRange instanceof Range;
  Map<PartitionPosition,AtomicBTreePartition> subMap;
  if (startIsMin)   subMap=stopIsMin ? partitions : partitions.headMap(keyRange.right,includeStop);
 else   subMap=stopIsMin ? partitions.tailMap(keyRange.left,includeStart) : partitions.subMap(keyRange.left,includeStart,keyRange.right,includeStop);
  int minLocalDeletionTime=Integer.MAX_VALUE;
  if (cfs.getCompactionStrategyManager().onlyPurgeRepairedTombstones())   minLocalDeletionTime=findMinLocalDeletionTime(subMap.entrySet().iterator());
  final Iterator<Map.Entry<PartitionPosition,AtomicBTreePartition>> iter=subMap.entrySet().iterator();
  return new MemtableUnfilteredPartitionIterator(cfs,iter,isForThrift,minLocalDeletionTime,columnFilter,dataRange);
}
