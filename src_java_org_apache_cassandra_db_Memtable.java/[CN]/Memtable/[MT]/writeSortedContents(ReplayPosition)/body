{
  logger.info("Writing " + this);
  long keySize=0;
  for (  DecoratedKey key : columnFamilies.keySet())   keySize+=key.key.remaining();
  long estimatedSize=(long)((keySize + keySize + currentThroughput.get()) * 1.2);
  SSTableReader ssTable;
  SSTableWriter writer=cfs.createFlushWriter(columnFamilies.size(),estimatedSize,context);
  try {
    for (    Map.Entry<DecoratedKey,ColumnFamily> entry : columnFamilies.entrySet()) {
      ColumnFamily cf=entry.getValue();
      if (cf.isMarkedForDelete()) {
        ColumnFamilyStore.removeDeletedColumnsOnly(cf,Integer.MIN_VALUE);
      }
      writer.append(entry.getKey(),cf);
    }
    ssTable=writer.closeAndOpenReader();
  }
 catch (  Exception e) {
    writer.abort();
    throw FBUtilities.unchecked(e);
  }
  logger.info(String.format("Completed flushing %s (%d bytes)",ssTable.getFilename(),new File(ssTable.getFilename()).length()));
  return ssTable;
}
