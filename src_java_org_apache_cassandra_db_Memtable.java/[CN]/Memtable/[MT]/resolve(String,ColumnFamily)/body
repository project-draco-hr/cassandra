{
  DecoratedKey decoratedKey=partitioner_.decorateKey(key);
  ColumnFamily oldCf=columnFamilies_.putIfAbsent(decoratedKey,columnFamily);
  if (oldCf == null) {
    currentSize_.addAndGet(columnFamily.size() + key.length());
    currentObjectCount_.addAndGet(columnFamily.getColumnCount());
    return;
  }
  int oldSize, newSize;
  int oldObjectCount, newObjectCount;
synchronized (keyLocks[Math.abs(key.hashCode() % keyLocks.length)]) {
    oldSize=oldCf.size();
    oldObjectCount=oldCf.getColumnCount();
    oldCf.resolve(columnFamily);
    newSize=oldCf.size();
    newObjectCount=oldCf.getColumnCount();
  }
  resolveSize(oldSize,newSize);
  resolveCount(oldObjectCount,newObjectCount);
}
