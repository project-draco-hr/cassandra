{
  DecoratedKey decoratedKey=partitioner_.decorateKey(key);
  ColumnFamily oldCf=columnFamilies_.putIfAbsent(decoratedKey,columnFamily);
  if (oldCf == null) {
    currentSize_.addAndGet(columnFamily.size() + key.length());
    currentObjectCount_.addAndGet(columnFamily.getColumnCount());
    return;
  }
synchronized (keyLocks[Math.abs(key.hashCode() % keyLocks.length)]) {
    int oldSize=oldCf.size();
    int oldObjectCount=oldCf.getColumnCount();
    oldCf.addAll(columnFamily);
    int newSize=oldCf.size();
    int newObjectCount=oldCf.getColumnCount();
    resolveSize(oldSize,newSize);
    resolveCount(oldObjectCount,newObjectCount);
    oldCf.delete(columnFamily);
  }
}
