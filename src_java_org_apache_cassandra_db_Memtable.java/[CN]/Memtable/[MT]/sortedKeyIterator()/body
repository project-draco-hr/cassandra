{
  Callable<Set<String>> callable=new Callable<Set<String>>(){
    public Set<String> call() throws Exception {
      return columnFamilies_.keySet();
    }
  }
;
  Set<String> keys=executor_.submit(callable).get();
  if (keys.size() == 0) {
    return Arrays.asList(new String[0]).iterator();
  }
  PriorityQueue<String> pq=new PriorityQueue<String>(keys.size(),StorageService.getPartitioner().getDecoratedKeyComparator());
  pq.addAll(keys);
  return new DestructivePQIterator<String>(pq);
}
