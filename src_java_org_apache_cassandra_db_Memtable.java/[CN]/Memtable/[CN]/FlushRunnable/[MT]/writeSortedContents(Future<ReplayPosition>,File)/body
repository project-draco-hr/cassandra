{
  logger.info("Writing " + Memtable.this.toString());
  SSTableReader ssTable;
  SSTableWriter writer=createFlushWriter(cfs.getTempSSTablePath(cfs.directories.getLocationForDisk(dataDirectory)));
  try {
    for (    Map.Entry<RowPosition,ColumnFamily> entry : columnFamilies.entrySet()) {
      ColumnFamily cf=entry.getValue();
      if (cf.isMarkedForDelete()) {
        ColumnFamilyStore.removeDeletedColumnsOnly(cf,Integer.MIN_VALUE);
      }
      writer.append((DecoratedKey)entry.getKey(),cf);
    }
    ssTable=writer.closeAndOpenReader();
    logger.info(String.format("Completed flushing %s (%d bytes) for commitlog position %s",ssTable.getFilename(),new File(ssTable.getFilename()).length(),context.get()));
    return ssTable;
  }
 catch (  Throwable e) {
    writer.abort();
    throw Throwables.propagate(e);
  }
}
