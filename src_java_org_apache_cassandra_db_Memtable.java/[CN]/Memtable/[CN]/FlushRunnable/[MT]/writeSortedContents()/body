{
  logger.debug("Writing {}, flushed range = ({}, {}]",Memtable.this.toString(),from,to);
  boolean trackContention=logger.isTraceEnabled();
  int heavilyContendedRowCount=0;
  for (  AtomicBTreePartition partition : toFlush.values()) {
    if (isBatchLogTable && !partition.partitionLevelDeletion().isLive() && partition.hasRows())     continue;
    if (trackContention && partition.usePessimisticLocking())     heavilyContendedRowCount++;
    if (!partition.isEmpty()) {
      try (UnfilteredRowIterator iter=partition.unfilteredIterator()){
        writer.append(iter);
      }
     }
  }
  long bytesFlushed=writer.getFilePointer();
  logger.debug("Completed flushing {} ({}) for commitlog position {}",writer.getFilename(),FBUtilities.prettyPrintMemory(bytesFlushed),commitLogUpperBound);
  cfs.metric.bytesFlushed.inc(bytesFlushed);
  if (heavilyContendedRowCount > 0)   logger.trace("High update contention in {}/{} partitions of {} ",heavilyContendedRowCount,toFlush.size(),Memtable.this);
}
