{
  long size=0;
  size+=TypeSizes.NATIVE.sizeof(cmd.keyspace);
  size+=TypeSizes.NATIVE.sizeof(cmd.columnFamily);
  size+=TypeSizes.NATIVE.sizeof(cmd.timestamp);
  size+=AbstractBounds.serializer.serializedSize(cmd.keyRange,version);
  CFMetaData metadata=Schema.instance.getCFMetaData(cmd.keyspace,cmd.columnFamily);
  size+=metadata.comparator.sliceQueryFilterSerializer().serializedSize((SliceQueryFilter)cmd.predicate,version);
  size+=metadata.comparator.serializer().serializedSize(cmd.start,TypeSizes.NATIVE);
  size+=metadata.comparator.serializer().serializedSize(cmd.stop,TypeSizes.NATIVE);
  size+=TypeSizes.NATIVE.sizeof(cmd.rowFilter.size());
  for (  IndexExpression expr : cmd.rowFilter) {
    size+=TypeSizes.NATIVE.sizeofWithShortLength(expr.column);
    size+=TypeSizes.NATIVE.sizeof(expr.operator.ordinal());
    size+=TypeSizes.NATIVE.sizeofWithShortLength(expr.value);
  }
  size+=TypeSizes.NATIVE.sizeof(cmd.limit);
  return size;
}
