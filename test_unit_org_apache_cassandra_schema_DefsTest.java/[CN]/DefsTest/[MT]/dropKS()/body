{
  final KeyspaceMetadata ks=Schema.instance.getKSMetaData(KEYSPACE1);
  assertNotNull(ks);
  final CFMetaData cfm=ks.tables.getNullable(TABLE2);
  assertNotNull(cfm);
  for (int i=0; i < 100; i++)   QueryProcessor.executeInternal(String.format("INSERT INTO %s.%s (key, name, val) VALUES (?, ?, ?)",KEYSPACE1,TABLE2),"dropKs","col" + i,"anyvalue");
  ColumnFamilyStore cfs=Keyspace.open(cfm.ksName).getColumnFamilyStore(cfm.cfName);
  assertNotNull(cfs);
  cfs.forceBlockingFlush();
  assertTrue(!cfs.directories.sstableLister(Directories.OnTxnErr.THROW).list().isEmpty());
  MigrationManager.announceKeyspaceDrop(ks.name);
  assertNull(Schema.instance.getKSMetaData(ks.name));
  boolean success=true;
  try {
    QueryProcessor.executeInternal(String.format("INSERT INTO %s.%s (key, name, val) VALUES (?, ?, ?)",KEYSPACE1,TABLE2),"dropKs","col0","anyvalue");
  }
 catch (  Throwable th) {
    success=false;
  }
  assertFalse("This mutation should have failed since the KS no longer exists.",success);
  boolean threw=false;
  try {
    Keyspace.open(ks.name);
  }
 catch (  Throwable th) {
    threw=true;
  }
  assertTrue(threw);
}
