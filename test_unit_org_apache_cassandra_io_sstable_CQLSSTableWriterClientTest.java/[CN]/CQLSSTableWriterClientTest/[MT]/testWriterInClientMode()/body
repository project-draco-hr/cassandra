{
  final String TABLE1="table1";
  final String TABLE2="table2";
  String schema="CREATE TABLE client_test.%s (" + "  k int PRIMARY KEY," + "  v1 text,"+ "  v2 int"+ ")";
  String insert="INSERT INTO client_test.%s (k, v1, v2) VALUES (?, ?, ?)";
  CQLSSTableWriter writer=CQLSSTableWriter.builder().inDirectory(this.testDirectory).forTable(String.format(schema,TABLE1)).using(String.format(insert,TABLE1)).build();
  CQLSSTableWriter writer2=CQLSSTableWriter.builder().inDirectory(this.testDirectory).forTable(String.format(schema,TABLE2)).using(String.format(insert,TABLE2)).build();
  writer.addRow(0,"A",0);
  writer2.addRow(0,"A",0);
  writer.addRow(1,"B",1);
  writer2.addRow(1,"B",1);
  writer.close();
  writer2.close();
  FilenameFilter filter=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith("-Data.db");
    }
  }
;
  File[] dataFiles=this.testDirectory.listFiles(filter);
  assertEquals(2,dataFiles.length);
  File transactionsFolder=Directories.getTransactionsDirectory(testDirectory);
  assertTrue(transactionsFolder.exists());
  File[] opFiles=transactionsFolder.listFiles();
  assertEquals(0,opFiles.length);
}
