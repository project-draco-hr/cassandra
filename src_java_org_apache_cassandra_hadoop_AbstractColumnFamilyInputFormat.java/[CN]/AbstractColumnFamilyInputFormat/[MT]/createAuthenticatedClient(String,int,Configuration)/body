{
  logger.debug("Creating authenticated client for CF input format");
  TTransport transport;
  try {
    transport=ConfigHelper.getClientTransportFactory(conf).openTransport(location,port);
  }
 catch (  Exception e) {
    throw new TTransportException("Failed to open a transport to " + location + ":"+ port+ ".",e);
  }
  TProtocol binaryProtocol=new TBinaryProtocol(transport,true,true);
  Cassandra.Client client=new Cassandra.Client(binaryProtocol);
  client.set_keyspace(ConfigHelper.getInputKeyspace(conf));
  if ((ConfigHelper.getInputKeyspaceUserName(conf) != null) && (ConfigHelper.getInputKeyspacePassword(conf) != null)) {
    Map<String,String> creds=new HashMap<String,String>();
    creds.put(PasswordAuthenticator.USERNAME_KEY,ConfigHelper.getInputKeyspaceUserName(conf));
    creds.put(PasswordAuthenticator.PASSWORD_KEY,ConfigHelper.getInputKeyspacePassword(conf));
    AuthenticationRequest authRequest=new AuthenticationRequest(creds);
    client.login(authRequest);
  }
  logger.debug("Authenticated client for CF input format created successfully");
  return client;
}
