{
  ByteBuffer value=ByteBuffer.wrap(new byte[100 * 1024]);
  int rows=20;
  int columns=10;
  for (int r=0; r < rows; r++) {
    UpdateBuilder update=UpdateBuilder.create(cfs.metadata,String.valueOf(r));
    for (int c=0; c < columns; c++)     update.newRow("column" + c).add("val",value);
    update.applyUnsafe();
    cfs.forceBlockingFlush();
  }
  waitForLeveling(cfs);
  cfs.forceBlockingFlush();
  LeveledCompactionStrategy strategy=(LeveledCompactionStrategy)(cfs.getCompactionStrategyManager()).getStrategies().get(1);
  cfs.disableAutoCompaction();
  while (CompactionManager.instance.isCompacting(Arrays.asList(cfs)))   Thread.sleep(100);
  for (  SSTableReader s : cfs.getSSTables()) {
    assertTrue(s.getSSTableLevel() != 6);
    strategy.manifest.remove(s);
    s.descriptor.getMetadataSerializer().mutateLevel(s.descriptor,6);
    s.reloadSSTableMetadata();
    strategy.manifest.add(s);
  }
  for (  SSTableReader s : cfs.getSSTables())   assertEquals(6,s.getSSTableLevel());
  int[] levels=strategy.manifest.getAllLevelSize();
  assertEquals(cfs.getSSTables().size(),levels[6]);
}
