{
  List<CfDef> cfDefList=new ArrayList<CfDef>();
  CfDef input=new CfDef(WordCount.KEYSPACE,WordCount.COLUMN_FAMILY);
  input.setComparator_type("AsciiType");
  input.setColumn_metadata(Arrays.asList(new ColumnDef(ByteBufferUtil.bytes("text1"),"AsciiType"),new ColumnDef(ByteBufferUtil.bytes("text2"),"AsciiType"),new ColumnDef(ByteBufferUtil.bytes("text3"),"AsciiType"),new ColumnDef(ByteBufferUtil.bytes("text4"),"AsciiType"),new ColumnDef(ByteBufferUtil.bytes("int4"),"Int32Type").setIndex_name("int4idx").setIndex_type(IndexType.KEYS)));
  cfDefList.add(input);
  CfDef output=new CfDef(WordCount.KEYSPACE,WordCount.OUTPUT_COLUMN_FAMILY);
  output.setComparator_type("AsciiType");
  output.setDefault_validation_class("Int32Type");
  cfDefList.add(output);
  CfDef counterInput=new CfDef(WordCount.KEYSPACE,WordCountCounters.COUNTER_COLUMN_FAMILY);
  counterInput.setComparator_type("UTF8Type");
  counterInput.setDefault_validation_class("CounterColumnType");
  cfDefList.add(counterInput);
  KsDef ksDef=new KsDef(WordCount.KEYSPACE,"org.apache.cassandra.locator.SimpleStrategy",cfDefList);
  ksDef.putToStrategy_options("replication_factor","1");
  client.system_add_keyspace(ksDef);
  int magnitude=getNumberOfHosts(client);
  Uninterruptibles.sleepUninterruptibly(magnitude,TimeUnit.SECONDS);
}
