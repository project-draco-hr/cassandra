{
  SimpleDeletionTime deletionInfo=new SimpleDeletionTime(FBUtilities.timestampMicros(),FBUtilities.nowInSeconds());
  List<IndexInfo> indexes=new ArrayList<>();
  indexes.add(new IndexInfo(cn(0L),cn(5L),0,0,deletionInfo));
  indexes.add(new IndexInfo(cn(10L),cn(15L),0,0,deletionInfo));
  indexes.add(new IndexInfo(cn(20L),cn(25L),0,0,deletionInfo));
  assertEquals(0,IndexHelper.indexFor(cn(-1L),indexes,comp,false,-1));
  assertEquals(0,IndexHelper.indexFor(cn(5L),indexes,comp,false,-1));
  assertEquals(1,IndexHelper.indexFor(cn(12L),indexes,comp,false,-1));
  assertEquals(2,IndexHelper.indexFor(cn(17L),indexes,comp,false,-1));
  assertEquals(3,IndexHelper.indexFor(cn(100L),indexes,comp,false,-1));
  assertEquals(3,IndexHelper.indexFor(cn(100L),indexes,comp,false,0));
  assertEquals(3,IndexHelper.indexFor(cn(100L),indexes,comp,false,1));
  assertEquals(3,IndexHelper.indexFor(cn(100L),indexes,comp,false,2));
  assertEquals(3,IndexHelper.indexFor(cn(100L),indexes,comp,false,3));
  assertEquals(-1,IndexHelper.indexFor(cn(-1L),indexes,comp,true,-1));
  assertEquals(0,IndexHelper.indexFor(cn(5L),indexes,comp,true,3));
  assertEquals(0,IndexHelper.indexFor(cn(5L),indexes,comp,true,2));
  assertEquals(1,IndexHelper.indexFor(cn(17L),indexes,comp,true,3));
  assertEquals(2,IndexHelper.indexFor(cn(100L),indexes,comp,true,3));
  assertEquals(2,IndexHelper.indexFor(cn(100L),indexes,comp,true,4));
  assertEquals(1,IndexHelper.indexFor(cn(12L),indexes,comp,true,3));
  assertEquals(1,IndexHelper.indexFor(cn(12L),indexes,comp,true,2));
  assertEquals(1,IndexHelper.indexFor(cn(100L),indexes,comp,true,1));
  assertEquals(2,IndexHelper.indexFor(cn(100L),indexes,comp,true,2));
}
