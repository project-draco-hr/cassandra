def fetch_trace_session(cursor, session_id):
    start = time.time()
    while True:
        time_spent = (time.time() - start)
        if (time_spent >= MAX_WAIT):
            return []
        cursor.execute(('SELECT request, coordinator, started_at, duration FROM %s.%s WHERE session_id = %s' % (TRACING_KS, SESSIONS_CF, session_id)), consistency_level='ONE')
        session = cursor.fetchone()
        if ((not session) or (session[3] is None)):
            time.sleep(0.5)
            continue
        (request, coordinator, started_at, duration) = session
        cursor.execute(('SELECT activity, event_id, source, source_elapsed FROM %s.%s WHERE session_id = %s' % (TRACING_KS, EVENTS_CF, session_id)), consistency_level='ONE')
        events = cursor.fetchall()
        rows = []
        rows.append([request, format_timestamp(started_at), coordinator, 0])
        for (activity, event_id, source, source_elapsed) in events:
            rows.append([activity, format_timeuuid(event_id), source, source_elapsed])
        finished_at = format_timestamp((started_at + (duration / 1000000.0)))
        rows.append(['Request complete', finished_at, coordinator, duration])
        return rows
