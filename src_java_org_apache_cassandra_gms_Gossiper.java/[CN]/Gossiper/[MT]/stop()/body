{
  scheduledGossipTask.cancel(false);
  logger.info("Announcing shutdown");
  try {
    Thread.sleep(intervalInMillis);
  }
 catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
  MessageProducer prod=new MessageProducer(){
    public Message getMessage(    Integer version) throws IOException {
      return makeGossipShutdownMessage(version);
    }
  }
;
  for (  InetAddress ep : liveEndpoints) {
    try {
      MessagingService.instance().sendOneWay(prod.getMessage(getVersion(ep)),ep);
    }
 catch (    IOException ex) {
    }
  }
}
