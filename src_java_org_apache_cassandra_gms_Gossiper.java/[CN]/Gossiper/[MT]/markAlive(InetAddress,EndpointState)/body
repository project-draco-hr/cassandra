{
  MessageOut<EchoMessage> echoMessage=new MessageOut<EchoMessage>(MessagingService.Verb.ECHO,new EchoMessage(),EchoMessage.serializer);
  logger.trace("Sending a EchoMessage to {}",addr);
  IAsyncCallback echoHandler=new IAsyncCallback(){
    public boolean isLatencyForSnitch(){
      return false;
    }
    public void response(    MessageIn msg){
      if (logger.isTraceEnabled())       logger.trace("marking as alive {}",addr);
      localState.markAlive();
      localState.updateTimestamp();
      liveEndpoints.add(addr);
      unreachableEndpoints.remove(addr);
      expireTimeEndpointMap.remove(addr);
      logger.debug("removing expire time for endpoint : {}",addr);
      logger.info("InetAddress {} is now UP",addr);
      for (      IEndpointStateChangeSubscriber subscriber : subscribers)       subscriber.onAlive(addr,localState);
      if (logger.isTraceEnabled())       logger.trace("Notified " + subscribers);
    }
  }
;
  MessagingService.instance().sendRR(echoMessage,addr,echoHandler);
}
