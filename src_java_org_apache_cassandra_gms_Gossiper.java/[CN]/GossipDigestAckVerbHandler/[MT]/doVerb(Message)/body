{
  InetAddress from=message.getFrom();
  if (logger_.isTraceEnabled())   logger_.trace("Received a GossipDigestAckMessage from " + from);
  byte[] bytes=message.getMessageBody();
  DataInputStream dis=new DataInputStream(new ByteArrayInputStream(bytes));
  try {
    GossipDigestAckMessage gDigestAckMessage=GossipDigestAckMessage.serializer().deserialize(dis);
    List<GossipDigest> gDigestList=gDigestAckMessage.getGossipDigestList();
    Map<InetAddress,EndPointState> epStateMap=gDigestAckMessage.getEndPointStateMap();
    if (epStateMap.size() > 0) {
      Gossiper.instance.notifyFailureDetector(epStateMap);
      Gossiper.instance.applyStateLocally(epStateMap);
    }
    Map<InetAddress,EndPointState> deltaEpStateMap=new HashMap<InetAddress,EndPointState>();
    for (    GossipDigest gDigest : gDigestList) {
      InetAddress addr=gDigest.getEndPoint();
      EndPointState localEpStatePtr=Gossiper.instance.getStateForVersionBiggerThan(addr,gDigest.getMaxVersion());
      if (localEpStatePtr != null)       deltaEpStateMap.put(addr,localEpStatePtr);
    }
    GossipDigestAck2Message gDigestAck2=new GossipDigestAck2Message(deltaEpStateMap);
    Message gDigestAck2Message=Gossiper.instance.makeGossipDigestAck2Message(gDigestAck2);
    if (logger_.isTraceEnabled())     logger_.trace("Sending a GossipDigestAck2Message to " + from);
    MessagingService.instance.sendOneWay(gDigestAck2Message,from);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
