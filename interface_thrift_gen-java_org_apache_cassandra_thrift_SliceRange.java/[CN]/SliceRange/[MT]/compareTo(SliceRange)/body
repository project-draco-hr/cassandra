{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetStart()).compareTo(other.isSetStart());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStart()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.start,other.start);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetFinish()).compareTo(other.isSetFinish());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFinish()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.finish,other.finish);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetReversed()).compareTo(other.isSetReversed());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetReversed()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.reversed,other.reversed);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCount()).compareTo(other.isSetCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.count,other.count);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
