{
  return new AlteringUnfilteredRowIterator(iterator){
    private Row.Builder regularBuilder;
    @Override protected Row computeNextStatic(    Row row){
      Row.Builder staticBuilder=allocator.cloningBTreeRowBuilder();
      return Rows.copy(row,staticBuilder).build();
    }
    @Override protected Row computeNext(    Row row){
      if (regularBuilder == null)       regularBuilder=allocator.cloningBTreeRowBuilder();
      return Rows.copy(row,regularBuilder).build();
    }
    @Override protected RangeTombstoneMarker computeNext(    RangeTombstoneMarker marker){
      return marker.copy(allocator);
    }
  }
;
}
