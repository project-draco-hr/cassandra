{
  System.out.format("\nTesting commit log size %.0fmb, compressor: %s, encryption enabled: %b, sync %s%s%s\n",mb(DatabaseDescriptor.getCommitLogSegmentSize()),commitLog.configuration.getCompressorName(),commitLog.configuration.useEncryption(),commitLog.executor.getClass().getSimpleName(),randomSize ? " random size" : "",discardedRun ? " with discarded run" : "");
  final List<CommitlogThread> threads=new ArrayList<>();
  ScheduledExecutorService scheduled=startThreads(commitLog,threads);
  discardedPos=CommitLogPosition.NONE;
  if (discardedRun) {
    Thread.sleep(runTimeMs / 3);
    stop=true;
    scheduled.shutdown();
    scheduled.awaitTermination(2,TimeUnit.SECONDS);
    for (    CommitlogThread t : threads) {
      t.join();
      if (t.clsp.compareTo(discardedPos) > 0)       discardedPos=t.clsp;
    }
    verifySizes(commitLog);
    commitLog.discardCompletedSegments(Schema.instance.getCFMetaData("Keyspace1","Standard1").cfId,CommitLogPosition.NONE,discardedPos);
    threads.clear();
    System.out.format("Discarded at %s\n",discardedPos);
    verifySizes(commitLog);
    scheduled=startThreads(commitLog,threads);
  }
  Thread.sleep(runTimeMs);
  stop=true;
  scheduled.shutdown();
  scheduled.awaitTermination(2,TimeUnit.SECONDS);
  int hash=0;
  int cells=0;
  for (  CommitlogThread t : threads) {
    t.join();
    hash+=t.hash;
    cells+=t.cells;
  }
  verifySizes(commitLog);
  commitLog.shutdownBlocking();
  System.out.println("Stopped. Replaying... ");
  System.out.flush();
  Reader reader=new Reader();
  File[] files=new File(location).listFiles();
  DummyHandler handler=new DummyHandler();
  reader.readAllFiles(handler,files);
  for (  File f : files)   if (!f.delete())   Assert.fail("Failed to delete " + f);
  if (hash == reader.hash && cells == reader.cells)   System.out.format("Test success. compressor = %s, encryption enabled = %b; discarded = %d, skipped = %d\n",commitLog.configuration.getCompressorName(),commitLog.configuration.useEncryption(),reader.discarded,reader.skipped);
 else {
    System.out.format("Test failed (compressor = %s, encryption enabled = %b). Cells %d, expected %d, diff %d; discarded = %d, skipped = %d -  hash %d expected %d.\n",commitLog.configuration.getCompressorName(),commitLog.configuration.useEncryption(),reader.cells,cells,cells - reader.cells,reader.discarded,reader.skipped,reader.hash,hash);
    failed=true;
  }
}
