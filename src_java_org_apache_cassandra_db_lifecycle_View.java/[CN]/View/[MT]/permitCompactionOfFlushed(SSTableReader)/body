{
  return new Function<View,View>(){
    @Nullable public View apply(    View view){
      Set<SSTableReader> premature=ImmutableSet.copyOf(filter(view.premature,not(equalTo(reader))));
      Set<SSTableReader> compacting=ImmutableSet.copyOf(filter(view.compacting,not(equalTo(reader))));
      return new View(view.liveMemtables,view.flushingMemtables,view.sstablesMap,compacting,premature,view.intervalTree);
    }
  }
;
}
