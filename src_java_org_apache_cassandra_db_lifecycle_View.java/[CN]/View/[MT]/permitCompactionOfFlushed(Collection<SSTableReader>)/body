{
  Set<SSTableReader> expectAndRemove=ImmutableSet.copyOf(readers);
  return new Function<View,View>(){
    public View apply(    View view){
      Set<SSTableReader> premature=replace(view.premature,expectAndRemove,emptySet());
      Map<SSTableReader,SSTableReader> compactingMap=replace(view.compactingMap,expectAndRemove,emptySet());
      return new View(view.liveMemtables,view.flushingMemtables,view.sstablesMap,compactingMap,premature,view.intervalTree);
    }
  }
;
}
