{
  try {
    ByteBuffer input=bytes.duplicate();
    int n=input.getShort();
    Map<K,V> m=new LinkedHashMap<K,V>(n);
    for (int i=0; i < n; i++) {
      int sk=input.getShort();
      byte[] datak=new byte[sk];
      input.get(datak);
      ByteBuffer kbb=ByteBuffer.wrap(datak);
      keys.validate(kbb);
      int sv=input.getShort();
      byte[] datav=new byte[sv];
      input.get(datav);
      ByteBuffer vbb=ByteBuffer.wrap(datav);
      values.validate(vbb);
      m.put(keys.compose(kbb),values.compose(vbb));
    }
    return m;
  }
 catch (  BufferUnderflowException e) {
    throw new MarshalException("Not enough bytes to read a map");
  }
}
