{
  boolean hasCommutativeOperation=false;
  for (  Map.Entry<Term,Operation> column : getColumns().entrySet()) {
    if (!column.getValue().isUnary())     hasCommutativeOperation=true;
    if (hasCommutativeOperation && column.getValue().isUnary())     throw new InvalidRequestException("Mix of commutative and non-commutative operations is not allowed.");
  }
  CFMetaData metadata=validateColumnFamily(keyspace,columnFamily,hasCommutativeOperation);
  if (hasCommutativeOperation)   getConsistencyLevel().validateCounterForWrite(metadata);
  QueryProcessor.validateKeyAlias(metadata,keyName);
  clientState.hasColumnFamilyAccess(keyspace,columnFamily,Permission.MODIFY);
  List<IMutation> mutations=new LinkedList<>();
  for (  Term key : keys)   mutations.add(mutationForKey(keyspace,key.getByteBuffer(getKeyType(keyspace),variables),metadata,timestamp,clientState,variables));
  return mutations;
}
