def test_batch_mutate_remove_slice_part_of_supercolumns(self):
    _set_keyspace('Keyspace1')
    columns = [Column(_i64(1), 'value1', 0), Column(_i64(2), 'value2', 0), Column(_i64(3), 'value3', 0), Column(_i64(4), 'value4', 0), Column(_i64(5), 'value5', 0)]
    for column in columns:
        client.insert('key', ColumnParent('Super1', 'sc1'), column, ConsistencyLevel.ONE)
    r = SliceRange(start=_i64(2), finish=_i64(5))
    d = Deletion(1, super_column='sc1', predicate=SlicePredicate(slice_range=r))
    client.batch_mutate({'key': {'Super1': [Mutation(deletion=d)], }, }, ConsistencyLevel.ONE)
    _assert_columnpath_exists('key', ColumnPath('Super1', super_column='sc1', column=_i64(1)))
    _assert_no_columnpath('key', ColumnPath('Super1', super_column='sc1', column=_i64(2)))
    _assert_no_columnpath('key', ColumnPath('Super1', super_column='sc1', column=_i64(3)))
    _assert_no_columnpath('key', ColumnPath('Super1', super_column='sc1', column=_i64(4)))
    _assert_columnpath_exists('key', ColumnPath('Super1', super_column='sc1', column=_i64(5)))
