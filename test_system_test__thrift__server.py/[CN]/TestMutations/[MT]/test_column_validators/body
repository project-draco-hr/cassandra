def test_column_validators(self):
    ks = 'Keyspace1'
    _set_keyspace(ks)
    cd = ColumnDef('col', 'LongType', None, None)
    cf = CfDef('Keyspace1', 'ValidatorColumnFamily', column_metadata=[cd])
    client.system_add_column_family(cf)
    ks_def = client.describe_keyspace(ks)
    assert ('ValidatorColumnFamily' in [x.name for x in ks_def.cf_defs])
    cp = ColumnParent('ValidatorColumnFamily')
    col0 = Column('col', _i64(42), Clock(0))
    col1 = Column('col', "ceci n'est pas 64bit", Clock(0))
    client.insert('key0', cp, col0, ConsistencyLevel.ONE)
    e = _expect_exception((lambda : client.insert('key1', cp, col1, ConsistencyLevel.ONE)), InvalidRequestException)
    assert (e.why.find('failed validation') >= 0)
    scf = CfDef('Keyspace1', 'ValidatorSuperColumnFamily', column_type='Super', column_metadata=[cd])
    client.system_add_column_family(scf)
    ks_def = client.describe_keyspace(ks)
    assert ('ValidatorSuperColumnFamily' in [x.name for x in ks_def.cf_defs])
    scp = ColumnParent('ValidatorSuperColumnFamily', 'sc1')
    client.insert('key0', scp, col0, ConsistencyLevel.ONE)
    e = _expect_exception((lambda : client.insert('key1', scp, col1, ConsistencyLevel.ONE)), InvalidRequestException)
    assert (e.why.find('failed validation') >= 0)
    cf = CfDef('Keyspace1', 'DefaultValidatorColumnFamily', column_metadata=[cd], default_validation_class='UTF8Type')
    client.system_add_column_family(cf)
    ks_def = client.describe_keyspace(ks)
    assert ('DefaultValidatorColumnFamily' in [x.name for x in ks_def.cf_defs])
    dcp = ColumnParent('DefaultValidatorColumnFamily')
    client.insert('key0', dcp, col0, ConsistencyLevel.ONE)
    e = _expect_exception((lambda : client.insert('key1', dcp, col1, ConsistencyLevel.ONE)), InvalidRequestException)
    assert (e.why.find('failed validation') >= 0)
    col2 = Column('fcol', _i64(4224), Clock(0))
    e = _expect_exception((lambda : client.insert('key1', dcp, col2, ConsistencyLevel.ONE)), InvalidRequestException)
    assert (e.why.find('failed validation') >= 0)
    col3 = Column('fcol', "Stringin' it up in the Stringtel Stringifornia", Clock(0))
    client.insert('key0', dcp, col3, ConsistencyLevel.ONE)
