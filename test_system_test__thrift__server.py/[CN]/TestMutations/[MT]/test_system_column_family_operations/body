def test_system_column_family_operations(self):
    _set_keyspace('Keyspace1')
    cd = ColumnDef('ValidationColumn', 'BytesType', None, None)
    newcf = CfDef('Keyspace1', 'NewColumnFamily', column_metadata=[cd])
    client.system_add_column_family(newcf)
    ks1 = client.describe_keyspace('Keyspace1')
    assert ('NewColumnFamily' in [x.name for x in ks1.cf_defs])
    cfid = [x.id for x in ks1.cf_defs if (x.name == 'NewColumnFamily')][0]
    assert (cfid > 1000)
    modified_cf = CfDef('Keyspace1', 'NewColumnFamily', column_metadata=[cd])
    modified_cf.id = cfid

    def fail_invalid_field():
        modified_cf.comparator_type = 'LongType'
        client.system_update_column_family(modified_cf)
    _expect_exception(fail_invalid_field, InvalidRequestException)
    modified_cf.comparator_type = 'BytesType'
    modified_cf.row_cache_size = 25
    modified_cf.gc_grace_seconds = 1
    client.system_update_column_family(modified_cf)
    ks1 = client.describe_keyspace('Keyspace1')
    server_cf = [x for x in ks1.cf_defs if (x.name == 'NewColumnFamily')][0]
    assert server_cf
    assert (server_cf.row_cache_size == 25)
    assert (server_cf.gc_grace_seconds == 1)
    client.system_rename_column_family('NewColumnFamily', 'RenameColumnFamily')
    ks1 = client.describe_keyspace('Keyspace1')
    assert ('RenameColumnFamily' in [x.name for x in ks1.cf_defs])
    assert ('NewColumnFamily' not in [x.name for x in ks1.cf_defs])
    client.system_drop_column_family('RenameColumnFamily')
    ks1 = client.describe_keyspace('Keyspace1')
    assert ('RenameColumnFamily' not in [x.name for x in ks1.cf_defs])
    assert ('NewColumnFamily' not in [x.name for x in ks1.cf_defs])
    assert ('Standard1' in [x.name for x in ks1.cf_defs])
