def test_index_scan(self):
    _set_keyspace('Keyspace1')
    client.insert('key1', ColumnParent('Indexed1'), Column('birthdate', _i64(1), 0), ConsistencyLevel.ONE)
    client.insert('key2', ColumnParent('Indexed1'), Column('birthdate', _i64(2), 0), ConsistencyLevel.ONE)
    client.insert('key2', ColumnParent('Indexed1'), Column('b', _i64(2), 0), ConsistencyLevel.ONE)
    client.insert('key3', ColumnParent('Indexed1'), Column('birthdate', _i64(3), 0), ConsistencyLevel.ONE)
    client.insert('key3', ColumnParent('Indexed1'), Column('b', _i64(3), 0), ConsistencyLevel.ONE)
    cp = ColumnParent('Indexed1')
    sp = SlicePredicate(slice_range=SliceRange('', ''))
    key_range = KeyRange('', '', None, None, [IndexExpression('birthdate', IndexOperator.EQ, _i64(1))], 100)
    result = client.get_range_slices(cp, sp, key_range, ConsistencyLevel.ONE)
    assert (len(result) == 1), result
    assert (result[0].key == 'key1')
    assert (len(result[0].columns) == 1), result[0].columns
    key_range = KeyRange('', '', None, None, [IndexExpression('b', IndexOperator.EQ, _i64(1))], 100)
    result = client.get_range_slices(cp, sp, key_range, ConsistencyLevel.ONE)
    assert (len(result) == 0), result
    key_range = KeyRange('', '', None, None, [IndexExpression('b', IndexOperator.EQ, _i64(3)), IndexExpression('birthdate', IndexOperator.EQ, _i64(3))], 100)
    result = client.get_range_slices(cp, sp, key_range, ConsistencyLevel.ONE)
    assert (len(result) == 1), result
    assert (result[0].key == 'key3')
    assert (len(result[0].columns) == 2), result[0].columns
