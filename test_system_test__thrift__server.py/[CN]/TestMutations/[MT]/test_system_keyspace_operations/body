def test_system_keyspace_operations(self):
    keyspace = KsDef('CreateKeyspace', 'org.apache.cassandra.locator.SimpleStrategy', {}, 10, [CfDef('CreateKeyspace', 'CreateKsCf')])
    client.system_add_keyspace(keyspace)
    newks = client.describe_keyspace('CreateKeyspace')
    assert ('CreateKsCf' in [x.name for x in newks.cf_defs])
    _set_keyspace('CreateKeyspace')
    modified_keyspace = KsDef('CreateKeyspace', 'org.apache.cassandra.locator.OldNetworkTopologyStrategy', {}, 1, [])
    client.system_update_keyspace(modified_keyspace)
    modks = client.describe_keyspace('CreateKeyspace')
    assert (modks.replication_factor == modified_keyspace.replication_factor)
    assert (modks.strategy_class == modified_keyspace.strategy_class)
    client.system_drop_keyspace('CreateKeyspace')

    def get_second_ks():
        client.describe_keyspace('CreateKeyspace')
    _expect_exception(get_second_ks, NotFoundException)
