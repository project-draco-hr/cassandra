def test_get_range_slice_after_deletion(self):
    _set_keyspace('Keyspace2')
    key = 'key1'
    for i in range(1, 4):
        client.insert(key, ColumnParent('Super3', ('sc%d' % i)), Column('col1', 'val1', 0), ConsistencyLevel.ONE)
    cp = ColumnParent('Super3')
    predicate = SlicePredicate(slice_range=SliceRange('sc1', 'sc3', False, count=1))
    k_range = KeyRange(start_key=key, end_key=key, count=1)
    result = client.get_range_slices(cp, predicate, k_range, ConsistencyLevel.ONE)
    assert (len(result[0].columns) == 1)
    client.remove(key, ColumnPath('Super3', 'sc1'), 1, ConsistencyLevel.ONE)
    result = client.get_range_slices(cp, predicate, k_range, ConsistencyLevel.ONE)
    assert (len(result[0].columns) == 1)
    client.insert(key, ColumnParent('Super3', 'sc1'), Column('col1', 'val1', 2), ConsistencyLevel.ONE)
    result = client.get_range_slices(cp, predicate, k_range, ConsistencyLevel.ONE)
    assert (len(result[0].columns) == 1), result[0].columns
    assert (result[0].columns[0].super_column.name == 'sc1')
