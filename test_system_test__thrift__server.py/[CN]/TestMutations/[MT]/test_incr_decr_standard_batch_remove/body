def test_incr_decr_standard_batch_remove(self):
    _set_keyspace('Keyspace1')
    d1 = 12
    d2 = (-21)
    update_map = {'key1': {'Counter1': [Mutation(counter=Counter(column=CounterColumn('c1', d1))), Mutation(counter=Counter(column=CounterColumn('c1', d2)))], }, }
    client.batch_mutate(update_map, ConsistencyLevel.ONE)
    time.sleep(5)
    rv1 = client.get_counter('key1', ColumnPath(column_family='Counter1', column='c1'), ConsistencyLevel.ONE)
    assert (rv1.column.value == (d1 + d2))
    update_map = {'key1': {'Counter1': [Mutation(deletion=Deletion(predicate=SlicePredicate(column_names=['c1'])))], }, }
    client.batch_mutate(update_map, ConsistencyLevel.ONE)
    time.sleep(5)
    _assert_no_columnpath_counter('key1', ColumnPath(column_family='Counter1', column='c1'))
    update_map = {'key1': {'Counter1': [Mutation(counter=Counter(column=CounterColumn('c1', d1))), Mutation(counter=Counter(column=CounterColumn('c1', d2)))], }, }
    client.batch_mutate(update_map, ConsistencyLevel.ONE)
    time.sleep(5)
    rv2 = client.get_counter('key1', ColumnPath(column_family='Counter1', column='c1'), ConsistencyLevel.ONE)
    assert (rv2.column.value == (d1 + d2))
    update_map = {'key1': {'Counter1': [Mutation(deletion=Deletion())], }, }
    client.batch_mutate(update_map, ConsistencyLevel.ONE)
    time.sleep(5)
    _assert_no_columnpath_counter('key1', ColumnPath(column_family='Counter1', column='c1'))
