def test_batch_mutate_remove_super_columns_entire_row(self):
    _set_keyspace('Keyspace1')
    keys = [('key_%d' % i) for i in range(17, 21)]
    for key in keys:
        _insert_super(key)
    mutations = []
    mutations.append(Mutation(deletion=Deletion(20)))
    mutation_map = {'Super1': mutations, }
    keyed_mutations = dict(((key, mutation_map) for key in keys))
    for sc in _SUPER_COLUMNS:
        for key in keys:
            _assert_columnpath_exists(key, ColumnPath('Super1', super_column=sc.name))
    client.batch_mutate(keyed_mutations, ConsistencyLevel.ZERO)
    for sc in _SUPER_COLUMNS:
        for key in keys:
            waitfor(ZERO_WAIT, _assert_no_columnpath, key, ColumnPath('Super1', super_column=sc.name))
