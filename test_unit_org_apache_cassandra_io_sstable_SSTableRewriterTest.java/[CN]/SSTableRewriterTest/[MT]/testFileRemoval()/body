{
  Keyspace keyspace=Keyspace.open(KEYSPACE);
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(CF);
  cfs.truncateBlocking();
  ArrayBackedSortedColumns cf=ArrayBackedSortedColumns.factory.create(cfs.metadata);
  for (int i=0; i < 1000; i++)   cf.addColumn(Util.column(String.valueOf(i),"a",1));
  File dir=cfs.directories.getDirectoryForNewSSTables();
  SSTableWriter writer=getWriter(cfs,dir);
  for (int i=0; i < 500; i++)   writer.append(StorageService.getPartitioner().decorateKey(ByteBufferUtil.bytes(i)),cf);
  SSTableReader s=writer.openEarly(1000);
  assertFileCounts(dir.list(),2,3);
  for (int i=500; i < 1000; i++)   writer.append(StorageService.getPartitioner().decorateKey(ByteBufferUtil.bytes(i)),cf);
  SSTableReader s2=writer.openEarly(1000);
  assertTrue(s != s2);
  assertFileCounts(dir.list(),2,3);
  s.markObsolete();
  s.releaseReference();
  Thread.sleep(1000);
  assertFileCounts(dir.list(),0,3);
  writer.abort(false);
  Thread.sleep(1000);
  assertFileCounts(dir.list(),0,0);
  validateCFS(cfs);
}
