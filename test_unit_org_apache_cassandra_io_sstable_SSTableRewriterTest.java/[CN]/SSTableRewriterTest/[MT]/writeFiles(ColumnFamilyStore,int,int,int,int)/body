{
  int i=0;
  Set<SSTableReader> result=new LinkedHashSet<>();
  for (int f=0; f < fileCount; f++) {
    File dir=cfs.directories.getDirectoryForNewSSTables();
    String filename=cfs.getTempSSTablePath(dir);
    try (SSTableWriter writer=SSTableWriter.create(filename,0,0,new SerializationHeader(cfs.metadata,cfs.metadata.partitionColumns(),RowStats.NO_STATS))){
      int end=f == fileCount - 1 ? partitionCount : ((f + 1) * partitionCount) / fileCount;
      for (; i < end; i++) {
        UpdateBuilder builder=UpdateBuilder.create(cfs.metadata,ByteBufferUtil.bytes(i));
        for (int j=0; j < cellCount; j++)         builder.newRow(Integer.toString(i)).add("val",random(0,1000));
        writer.append(builder.build().unfilteredIterator());
      }
      result.add(writer.finish(true));
    }
   }
  return result;
}
