{
  if (minormax == mean)   return ismin ? new long[]{mean - 1} : new long[0];
  if (stdev < 1) {
    return ismin ? new long[]{minormax - 1,mean - 1} : new long[]{minormax};
  }
  long larger, smaller;
  if (ismin) {
    larger=mean;
    smaller=minormax;
  }
 else {
    larger=minormax;
    smaller=mean;
  }
  double stdevsTo=(larger - smaller) / stdev;
  if (stdevsTo > 0 && stdevsTo < 1)   stdevsTo=1;
 else   stdevsTo=Math.round(stdevsTo);
  final int len=Math.min(maxdevs + 1,(int)stdevsTo);
  final long[] range=new long[len];
  long next=ismin ? minormax - 1 : minormax;
  for (int i=0; i < range.length; i++) {
    long delta=(range.length - (i + 1)) * (long)stdev;
    if (ismin) {
      range[i]=next;
      next=mean - delta;
    }
 else {
      range[len - 1 - i]=next;
      next=mean + delta;
    }
  }
  return range;
}
