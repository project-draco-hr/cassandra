{
  String tableName=createTable("CREATE TABLE %s (a text, b int, c int, PRIMARY KEY (a, b)) WITH CLUSTERING ORDER BY (b DESC)");
  final ColumnFamilyStore cfs=Keyspace.open(KEYSPACE).getColumnFamilyStore(tableName);
  for (int i=0; i < 10; i++)   execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)","0",i,i);
  cfs.forceBlockingFlush();
  for (int i=10; i < 20; i++) {
    execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)","0",i,i);
    PartitionColumns columns=PartitionColumns.of(cfs.metadata.getColumnDefinition(new ColumnIdentifier("c",false)));
    ClusteringIndexSliceFilter filter=new ClusteringIndexSliceFilter(Slices.ALL,false);
    SinglePartitionReadCommand command=singlePartitionSlice(cfs,"0",filter,null);
    try (ReadExecutionController executionController=command.executionController();PartitionIterator iterator=command.executeInternal(executionController)){
      try (RowIterator rowIterator=iterator.next()){
        Row row=rowIterator.next();
        Cell cell=row.getCell(cfs.metadata.getColumnDefinition(new ColumnIdentifier("c",false)));
        assertEquals(ByteBufferUtil.bytes(i),cell.value());
      }
     }
   }
}
