{
  final Keyspace keyspace=Keyspace.open(KEYSPACE1);
  final ColumnFamilyStore cfs=keyspace.getColumnFamilyStore("StandardLong1");
  final DecoratedKey ROW=Util.dk("row4");
  for (int i=0; i < 10; i++) {
    ColumnFamily cf=ArrayBackedSortedColumns.factory.create(KEYSPACE1,"StandardLong1");
    cf.addColumn(new BufferCell(cellname((long)i),ByteBufferUtil.EMPTY_BYTE_BUFFER,0));
    Mutation rm=new Mutation(KEYSPACE1,ROW.getKey(),cf);
    rm.apply();
  }
  cfs.forceBlockingFlush();
  for (int i=10; i < 20; i++) {
    ColumnFamily cf=ArrayBackedSortedColumns.factory.create(KEYSPACE1,"StandardLong1");
    cf.addColumn(new BufferCell(cellname((long)i),ByteBufferUtil.EMPTY_BYTE_BUFFER,0));
    Mutation rm=new Mutation(KEYSPACE1,ROW.getKey(),cf);
    rm.apply();
    cf=cfs.getColumnFamily(ROW,Composites.EMPTY,Composites.EMPTY,true,1,System.currentTimeMillis());
    assertEquals(1,Iterables.size(cf.getColumnNames()));
    assertEquals(i,cf.getColumnNames().iterator().next().toByteBuffer().getLong());
  }
}
