{
  String tableName=createTable("CREATE TABLE %s (a text, b int, c int, PRIMARY KEY (a, b))");
  final ColumnFamilyStore cfs=Keyspace.open(KEYSPACE).getColumnFamilyStore(tableName);
  for (int i=1; i < 10; i++) {
    if (i == 6 || i == 8)     continue;
    execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)","0",i,i);
  }
  execute("DELETE FROM %s WHERE a = ? AND b = ?","0",4);
  for (int round=0; round < 2; round++) {
    ClusteringIndexSliceFilter filter=slices(cfs,5,null,false);
    SinglePartitionSliceCommand command=singlePartitionSlice(cfs,"0",filter,2);
    assertRowsInResult(cfs,command,5,7);
    command=singlePartitionSlice(cfs,"0",slices(cfs,4,null,false),2);
    assertRowsInResult(cfs,command,5,7);
    command=singlePartitionSlice(cfs,"0",slices(cfs,null,5,true),2);
    assertRowsInResult(cfs,command,5,3);
    command=singlePartitionSlice(cfs,"0",slices(cfs,null,6,true),2);
    assertRowsInResult(cfs,command,5,3);
    command=singlePartitionSlice(cfs,"0",slices(cfs,null,6,true),2);
    assertRowsInResult(cfs,command,5,3);
    command=singlePartitionSlice(cfs,"0",slices(cfs,null,null,true),2);
    assertRowsInResult(cfs,command,9,7);
    command=singlePartitionSlice(cfs,"0",slices(cfs,95,null,false),2);
    assertRowsInResult(cfs,command);
    command=singlePartitionSlice(cfs,"0",slices(cfs,null,0,true),2);
    assertRowsInResult(cfs,command);
    if (round == 0)     cfs.forceBlockingFlush();
  }
}
