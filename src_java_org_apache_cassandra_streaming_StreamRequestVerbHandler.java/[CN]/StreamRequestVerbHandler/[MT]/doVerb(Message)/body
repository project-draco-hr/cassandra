{
  if (logger.isDebugEnabled())   logger.debug("Received a StreamRequestMessage from {}",message.getFrom());
  byte[] body=message.getMessageBody();
  ByteArrayInputStream bufIn=new ByteArrayInputStream(body);
  try {
    StreamRequestMessage srm=StreamRequestMessage.serializer().deserialize(new DataInputStream(bufIn));
    if (logger.isDebugEnabled())     logger.debug(srm.toString());
    if (srm.file != null) {
      StreamHeader header=new StreamHeader(srm.sessionId,srm.file,false);
      MessagingService.instance.stream(header,message.getFrom());
      StreamOutSession.get(message.getFrom(),srm.sessionId).removePending(srm.file);
    }
 else {
      StreamOutSession session=StreamOutSession.create(message.getFrom(),srm.sessionId);
      StreamOut.transferRangesForRequest(session,srm.table,srm.ranges);
    }
  }
 catch (  IOException ex) {
    throw new IOError(ex);
  }
}
