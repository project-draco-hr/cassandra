{
  logger.debug("collectAllData");
  ISortedColumns.Factory factory=mutableColumns ? AtomicSortedColumns.factory() : ArrayBackedSortedColumns.factory();
  List<IColumnIterator> iterators=new ArrayList<IColumnIterator>();
  ColumnFamily returnCF=ColumnFamily.create(cfs.metadata,factory,filter.filter.isReversed());
  ColumnFamilyStore.ViewFragment view=cfs.markReferenced(filter.key);
  try {
    for (    Memtable memtable : view.memtables) {
      IColumnIterator iter=filter.getMemtableColumnIterator(memtable);
      if (iter != null) {
        returnCF.delete(iter.getColumnFamily());
        iterators.add(iter);
      }
    }
    for (    SSTableReader sstable : view.sstables) {
      IColumnIterator iter=filter.getSSTableColumnIterator(sstable);
      iterators.add(iter);
      if (iter.getColumnFamily() != null) {
        returnCF.delete(iter.getColumnFamily());
        sstablesIterated++;
      }
    }
    if (iterators.isEmpty())     return null;
    filter.collateColumns(returnCF,iterators,gcBefore);
    return returnCF;
  }
  finally {
    for (    IColumnIterator iter : iterators)     FileUtils.closeQuietly(iter);
    SSTableReader.releaseReferences(view.sstables);
  }
}
