{
  logger.debug("collectAllData");
  ISortedColumns.Factory factory=mutableColumns ? cfs.metadata.cfType == ColumnFamilyType.Super ? ThreadSafeSortedColumns.factory() : AtomicSortedColumns.factory() : ArrayBackedSortedColumns.factory();
  ColumnFamilyStore.ViewFragment view=cfs.markReferenced(filter.key);
  List<IColumnIterator> iterators=new ArrayList<IColumnIterator>(Iterables.size(view.memtables) + view.sstables.size());
  ColumnFamily returnCF=ColumnFamily.create(cfs.metadata,factory,filter.filter.isReversed());
  try {
    for (    Memtable memtable : view.memtables) {
      IColumnIterator iter=filter.getMemtableColumnIterator(memtable);
      if (iter != null) {
        returnCF.delete(iter.getColumnFamily());
        iterators.add(iter);
      }
    }
    long mostRecentRowTombstone=Long.MIN_VALUE;
    for (    SSTableReader sstable : view.sstables) {
      if (sstable.getMaxTimestamp() < mostRecentRowTombstone)       continue;
      IColumnIterator iter=filter.getSSTableColumnIterator(sstable);
      iterators.add(iter);
      if (iter.getColumnFamily() != null) {
        ColumnFamily cf=iter.getColumnFamily();
        if (cf.isMarkedForDelete())         mostRecentRowTombstone=cf.getMarkedForDeleteAt();
        returnCF.delete(cf);
        sstablesIterated++;
      }
    }
    if (mostRecentRowTombstone > Long.MIN_VALUE) {
      Iterator<IColumnIterator> it=iterators.iterator();
      while (it.hasNext()) {
        IColumnIterator iter=it.next();
        if ((iter instanceof ISSTableColumnIterator) && ((ISSTableColumnIterator)iter).getSStable().getMaxTimestamp() < mostRecentRowTombstone) {
          FileUtils.closeQuietly(iter);
          it.remove();
        }
      }
    }
    if (iterators.isEmpty())     return null;
    filter.collateColumns(returnCF,iterators,gcBefore);
    return returnCF;
  }
  finally {
    for (    IColumnIterator iter : iterators)     FileUtils.closeQuietly(iter);
    SSTableReader.releaseReferences(view.sstables);
  }
}
