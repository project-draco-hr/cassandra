{
  String type1=createType("CREATE TYPE %s (foo ascii)");
  assertComplexInvalidAlterDropStatements(type1,type1,"{foo: 'abc'}");
  type1=createType("CREATE TYPE %s (foo ascii)");
  assertComplexInvalidAlterDropStatements(type1,"list<frozen<" + type1 + ">>","[{foo: 'abc'}]");
  type1=createType("CREATE TYPE %s (foo ascii)");
  assertComplexInvalidAlterDropStatements(type1,"set<frozen<" + type1 + ">>","{{foo: 'abc'}}");
  type1=createType("CREATE TYPE %s (foo ascii)");
  assertComplexInvalidAlterDropStatements(type1,"map<text, frozen<" + type1 + ">>","{'key': {foo: 'abc'}}");
  type1=createType("CREATE TYPE %s (foo ascii)");
  String type2=createType("CREATE TYPE %s (foo frozen<" + type1 + ">)");
  assertComplexInvalidAlterDropStatements(type1,type2,"{foo: {foo: 'abc'}}");
  type1=createType("CREATE TYPE %s (foo ascii)");
  type2=createType("CREATE TYPE %s (foo frozen<" + type1 + ">)");
  assertComplexInvalidAlterDropStatements(type1,"list<frozen<" + type2 + ">>","[{foo: {foo: 'abc'}}]");
  type1=createType("CREATE TYPE %s (foo ascii)");
  type2=createType("CREATE TYPE %s (foo frozen<set<" + type1 + ">>)");
  assertComplexInvalidAlterDropStatements(type1,"map<text, frozen<" + type2 + ">>","{'key': {foo: {{foo: 'abc'}}}}");
  type1=createType("CREATE TYPE %s (foo ascii)");
  assertComplexInvalidAlterDropStatements(type1,"tuple<text, frozen<" + type1 + ">>","('key', {foo: 'abc'})");
  type1=createType("CREATE TYPE %s (foo ascii)");
  assertComplexInvalidAlterDropStatements(type1,"tuple<text, frozen<tuple<tuple<" + type1 + ", int>, int>>>","('key', (({foo: 'abc'}, 0), 0))");
  type1=createType("CREATE TYPE %s (foo ascii)");
  type2=createType("CREATE TYPE %s (foo frozen<set<" + type1 + ">>)");
  assertComplexInvalidAlterDropStatements(type1,"tuple<text, frozen<" + type2 + ">>","('key', {foo: {{foo: 'abc'}}})");
}
