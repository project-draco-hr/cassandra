{
  if (DatabaseDescriptor.getCompactionThroughputMbPerSec() < 1 || StorageService.instance.isBootstrapMode())   return;
  int totalBytesPerMS=DatabaseDescriptor.getCompactionThroughputMbPerSec() * 1024 * 1024 / 1000;
  long bytesSinceLast=bytesRead - bytesAtLastDelay;
  long msSinceLast=System.currentTimeMillis() - timeAtLastDelay;
  int newTarget=totalBytesPerMS / Math.max(1,CompactionManager.instance.getActiveCompactions());
  if (newTarget != targetBytesPerMS)   logger.debug("{} now compacting at {} bytes/ms.",this,newTarget);
  targetBytesPerMS=newTarget;
  long excessBytes=bytesSinceLast - msSinceLast * targetBytesPerMS;
  long timeToDelay=excessBytes / Math.max(1,targetBytesPerMS);
  if (timeToDelay > 0) {
    if (logger.isTraceEnabled())     logger.trace(String.format("Compacted %d bytes in %d ms: throttling for %d ms",bytesSinceLast,msSinceLast,timeToDelay));
    try {
      Thread.sleep(timeToDelay);
    }
 catch (    InterruptedException e) {
      throw new AssertionError(e);
    }
  }
  bytesAtLastDelay=bytesRead;
  timeAtLastDelay=System.currentTimeMillis();
}
