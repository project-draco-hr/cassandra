{
  try {
    serverTransport_.listen();
  }
 catch (  TTransportException ttx) {
    logger.error("Error occurred during listening.",ttx);
    return;
  }
  stopped=false;
  while (!stopped) {
    while (activeClients.get() >= args.maxWorkerThreads) {
      Uninterruptibles.sleepUninterruptibly(10,TimeUnit.MILLISECONDS);
    }
    try {
      TTransport client=serverTransport_.accept();
      activeClients.incrementAndGet();
      WorkerProcess wp=new WorkerProcess(client);
      executorService.execute(wp);
    }
 catch (    TTransportException ttx) {
      if (ttx.getCause() instanceof SocketTimeoutException)       continue;
      if (!stopped) {
        logger.warn("Transport error occurred during acceptance of message.",ttx);
      }
    }
catch (    RejectedExecutionException e) {
      logger.debug("Dropping client connection because our limit of {} has been reached",args.maxWorkerThreads);
      continue;
    }
    if (activeClients.get() >= args.maxWorkerThreads)     logger.warn("Maximum number of clients " + args.maxWorkerThreads + " reached");
  }
  executorService.shutdown();
}
