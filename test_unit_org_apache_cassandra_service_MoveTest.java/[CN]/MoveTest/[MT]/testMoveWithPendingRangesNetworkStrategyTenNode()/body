{
  StorageService ss=StorageService.instance;
  final int RING_SIZE=14;
  TokenMetadata tmd=ss.getTokenMetadata();
  tmd.clearUnsafe();
  VersionedValue.VersionedValueFactory valueFactory=new VersionedValue.VersionedValueFactory(partitioner);
  ArrayList<Token> endpointTokens=new ArrayList<>();
  ArrayList<Token> keyTokens=new ArrayList<>();
  List<InetAddress> hosts=new ArrayList<>();
  List<UUID> hostIds=new ArrayList<>();
  for (int i=0; i < RING_SIZE / 2; i++) {
    endpointTokens.add(new BigIntegerToken(String.valueOf(10 * i)));
    endpointTokens.add(new BigIntegerToken(String.valueOf((10 * i) + 1)));
  }
  Util.createInitialRing(ss,partitioner,endpointTokens,keyTokens,hosts,hostIds,RING_SIZE);
  PendingRangeCalculatorService.instance.blockUntilFinished();
  int MOVING_NODE=0;
  moveHost(hosts.get(MOVING_NODE),5,tmd,valueFactory);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(0,1,"127.0.0.1"),generatePendingMapEntry(1,5,"127.0.0.1")),Network_11_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(0,1,"127.0.0.1"),generatePendingMapEntry(1,5,"127.0.0.1")),Network_22_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(0,1,"127.0.0.1"),generatePendingMapEntry(1,5,"127.0.0.1")),Network_33_KeyspaceName);
  finishMove(hosts.get(MOVING_NODE),5,tmd);
  moveHost(hosts.get(MOVING_NODE),0,tmd,valueFactory);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(0,1,"127.0.0.3"),generatePendingMapEntry(1,5,"127.0.0.3")),Network_11_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(0,1,"127.0.0.5"),generatePendingMapEntry(1,5,"127.0.0.5")),Network_22_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(0,1,"127.0.0.7"),generatePendingMapEntry(1,5,"127.0.0.7")),Network_33_KeyspaceName);
  finishMove(hosts.get(MOVING_NODE),0,tmd);
  MOVING_NODE=1;
  moveHost(hosts.get(MOVING_NODE),5,tmd,valueFactory);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(1,5,"127.0.0.2")),Network_11_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(1,5,"127.0.0.2")),Network_22_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(1,5,"127.0.0.2")),Network_33_KeyspaceName);
  finishMove(hosts.get(MOVING_NODE),5,tmd);
  moveHost(hosts.get(MOVING_NODE),1,tmd,valueFactory);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(1,5,"127.0.0.4")),Network_11_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(1,5,"127.0.0.6")),Network_22_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(1,5,"127.0.0.8")),Network_33_KeyspaceName);
  finishMove(hosts.get(MOVING_NODE),1,tmd);
  MOVING_NODE=3;
  moveHost(hosts.get(MOVING_NODE),25,tmd,valueFactory);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(1,10,"127.0.0.6"),generatePendingMapEntry(10,11,"127.0.0.6"),generatePendingMapEntry(21,25,"127.0.0.4")),Network_11_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(61,0,"127.0.0.6"),generatePendingMapEntry(0,1,"127.0.0.6"),generatePendingMapEntry(21,25,"127.0.0.4"),generatePendingMapEntry(11,20,"127.0.0.4"),generatePendingMapEntry(20,21,"127.0.0.4")),Network_22_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(51,60,"127.0.0.6"),generatePendingMapEntry(60,61,"127.0.0.6"),generatePendingMapEntry(21,25,"127.0.0.4"),generatePendingMapEntry(11,20,"127.0.0.4"),generatePendingMapEntry(20,21,"127.0.0.4")),Network_33_KeyspaceName);
  finishMove(hosts.get(MOVING_NODE),25,tmd);
  moveHost(hosts.get(MOVING_NODE),11,tmd,valueFactory);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(1,10,"127.0.0.4"),generatePendingMapEntry(10,11,"127.0.0.4"),generatePendingMapEntry(21,25,"127.0.0.8")),Network_11_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(61,0,"127.0.0.4"),generatePendingMapEntry(0,1,"127.0.0.4"),generatePendingMapEntry(11,20,"127.0.0.8"),generatePendingMapEntry(20,21,"127.0.0.8"),generatePendingMapEntry(21,25,"127.0.0.10")),Network_22_KeyspaceName);
  assertPendingRanges(tmd,generatePendingRanges(generatePendingMapEntry(51,60,"127.0.0.4"),generatePendingMapEntry(60,61,"127.0.0.4"),generatePendingMapEntry(21,25,"127.0.0.12"),generatePendingMapEntry(11,20,"127.0.0.10"),generatePendingMapEntry(20,21,"127.0.0.10")),Network_33_KeyspaceName);
  finishMove(hosts.get(MOVING_NODE),11,tmd);
}
