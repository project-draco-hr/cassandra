{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map174=iprot.readMapBegin();
          struct.name_types=new HashMap<ByteBuffer,String>(2 * _map174.size);
          for (int _i175=0; _i175 < _map174.size; ++_i175) {
            ByteBuffer _key176;
            String _val177;
            _key176=iprot.readBinary();
            _val177=iprot.readString();
            struct.name_types.put(_key176,_val177);
          }
          iprot.readMapEnd();
        }
        struct.setName_typesIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map178=iprot.readMapBegin();
      struct.value_types=new HashMap<ByteBuffer,String>(2 * _map178.size);
      for (int _i179=0; _i179 < _map178.size; ++_i179) {
        ByteBuffer _key180;
        String _val181;
        _key180=iprot.readBinary();
        _val181=iprot.readString();
        struct.value_types.put(_key180,_val181);
      }
      iprot.readMapEnd();
    }
    struct.setValue_typesIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
struct.default_name_type=iprot.readString();
struct.setDefault_name_typeIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
struct.default_value_type=iprot.readString();
struct.setDefault_value_typeIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
