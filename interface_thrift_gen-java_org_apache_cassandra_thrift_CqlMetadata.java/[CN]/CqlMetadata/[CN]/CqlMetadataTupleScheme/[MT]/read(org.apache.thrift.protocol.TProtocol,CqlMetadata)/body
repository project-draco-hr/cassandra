{
  TTupleProtocol iprot=(TTupleProtocol)prot;
{
    org.apache.thrift.protocol.TMap _map184=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
    struct.name_types=new HashMap<ByteBuffer,String>(2 * _map184.size);
    for (int _i185=0; _i185 < _map184.size; ++_i185) {
      ByteBuffer _key186;
      String _val187;
      _key186=iprot.readBinary();
      _val187=iprot.readString();
      struct.name_types.put(_key186,_val187);
    }
  }
  struct.setName_typesIsSet(true);
{
    org.apache.thrift.protocol.TMap _map188=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
    struct.value_types=new HashMap<ByteBuffer,String>(2 * _map188.size);
    for (int _i189=0; _i189 < _map188.size; ++_i189) {
      ByteBuffer _key190;
      String _val191;
      _key190=iprot.readBinary();
      _val191=iprot.readString();
      struct.value_types.put(_key190,_val191);
    }
  }
  struct.setValue_typesIsSet(true);
  struct.default_name_type=iprot.readString();
  struct.setDefault_name_typeIsSet(true);
  struct.default_value_type=iprot.readString();
  struct.setDefault_value_typeIsSet(true);
}
