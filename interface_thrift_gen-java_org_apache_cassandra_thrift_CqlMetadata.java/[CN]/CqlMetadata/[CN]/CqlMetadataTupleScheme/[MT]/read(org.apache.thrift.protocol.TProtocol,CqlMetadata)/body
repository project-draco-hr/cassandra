{
  TTupleProtocol iprot=(TTupleProtocol)prot;
{
    org.apache.thrift.protocol.TMap _map178=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
    struct.name_types=new HashMap<ByteBuffer,String>(2 * _map178.size);
    for (int _i179=0; _i179 < _map178.size; ++_i179) {
      ByteBuffer _key180;
      String _val181;
      _key180=iprot.readBinary();
      _val181=iprot.readString();
      struct.name_types.put(_key180,_val181);
    }
  }
  struct.setName_typesIsSet(true);
{
    org.apache.thrift.protocol.TMap _map182=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
    struct.value_types=new HashMap<ByteBuffer,String>(2 * _map182.size);
    for (int _i183=0; _i183 < _map182.size; ++_i183) {
      ByteBuffer _key184;
      String _val185;
      _key184=iprot.readBinary();
      _val185=iprot.readString();
      struct.value_types.put(_key184,_val185);
    }
  }
  struct.setValue_typesIsSet(true);
  struct.default_name_type=iprot.readString();
  struct.setDefault_name_typeIsSet(true);
  struct.default_value_type=iprot.readString();
  struct.setDefault_value_typeIsSet(true);
}
