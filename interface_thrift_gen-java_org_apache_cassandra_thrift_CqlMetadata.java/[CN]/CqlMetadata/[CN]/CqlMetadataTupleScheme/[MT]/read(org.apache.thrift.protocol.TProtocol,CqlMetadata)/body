{
  TTupleProtocol iprot=(TTupleProtocol)prot;
{
    org.apache.thrift.protocol.TMap _map158=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
    struct.name_types=new HashMap<ByteBuffer,String>(2 * _map158.size);
    for (int _i159=0; _i159 < _map158.size; ++_i159) {
      ByteBuffer _key160;
      String _val161;
      _key160=iprot.readBinary();
      _val161=iprot.readString();
      struct.name_types.put(_key160,_val161);
    }
  }
  struct.setName_typesIsSet(true);
{
    org.apache.thrift.protocol.TMap _map162=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
    struct.value_types=new HashMap<ByteBuffer,String>(2 * _map162.size);
    for (int _i163=0; _i163 < _map162.size; ++_i163) {
      ByteBuffer _key164;
      String _val165;
      _key164=iprot.readBinary();
      _val165=iprot.readString();
      struct.value_types.put(_key164,_val165);
    }
  }
  struct.setValue_typesIsSet(true);
  struct.default_name_type=iprot.readString();
  struct.setDefault_name_typeIsSet(true);
  struct.default_value_type=iprot.readString();
  struct.setDefault_value_typeIsSet(true);
}
