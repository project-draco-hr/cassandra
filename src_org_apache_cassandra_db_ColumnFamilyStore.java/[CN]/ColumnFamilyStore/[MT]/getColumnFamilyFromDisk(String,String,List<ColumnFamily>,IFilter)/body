{
  List<String> files=new ArrayList<String>();
  lock_.readLock().lock();
  try {
    files.addAll(ssTables_);
    Collections.sort(files,new FileNameComparator(FileNameComparator.Descending));
  }
  finally {
    lock_.readLock().unlock();
  }
  for (  String file : files) {
    boolean bVal=SSTable.isKeyInFile(key,file);
    if (!bVal)     continue;
    ColumnFamily columnFamily=fetchColumnFamily(key,cf,filter,file);
    long start=System.currentTimeMillis();
    if (columnFamily != null) {
      Map<String,IColumn> columns=columnFamily.getColumns();
      Set<String> cNames=columns.keySet();
      for (      String cName : cNames) {
        IColumn column=columns.get(cName);
        if (column.isMarkedForDelete())         columns.remove(cName);
      }
      columnFamilies.add(columnFamily);
      if (filter.isDone()) {
        break;
      }
    }
    logger_.debug("DISK Data structure population  TIME: " + (System.currentTimeMillis() - start) + " ms.");
  }
  files.clear();
}
