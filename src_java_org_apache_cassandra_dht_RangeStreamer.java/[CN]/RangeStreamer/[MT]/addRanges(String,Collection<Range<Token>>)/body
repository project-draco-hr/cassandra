{
  Multimap<Range<Token>,InetAddress> rangesForKeyspace=useStrictSourcesForRanges(keyspaceName) ? getAllRangesWithStrictSourcesFor(keyspaceName,ranges) : getAllRangesWithSourcesFor(keyspaceName,ranges);
  if (logger.isTraceEnabled()) {
    for (    Map.Entry<Range<Token>,InetAddress> entry : rangesForKeyspace.entries())     logger.trace("{}: range {} exists on {}",description,entry.getKey(),entry.getValue());
  }
  for (  Map.Entry<InetAddress,Collection<Range<Token>>> entry : getRangeFetchMap(rangesForKeyspace,sourceFilters,keyspaceName,useStrictConsistency).asMap().entrySet()) {
    if (logger.isTraceEnabled()) {
      for (      Range<Token> r : entry.getValue())       logger.trace("{}: range {} from source {} for keyspace {}",description,r,entry.getKey(),keyspaceName);
    }
    toFetch.put(keyspaceName,entry);
  }
}
