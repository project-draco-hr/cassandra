{
  Multimap<Range<Token>,InetAddress> rangesForKeyspace=!DatabaseDescriptor.isReplacing() && useStrictConsistency && tokens != null ? getAllRangesWithStrictSourcesFor(keyspaceName,ranges) : getAllRangesWithSourcesFor(keyspaceName,ranges);
  if (logger.isDebugEnabled()) {
    for (    Map.Entry<Range<Token>,InetAddress> entry : rangesForKeyspace.entries())     logger.debug(String.format("%s: range %s exists on %s",description,entry.getKey(),entry.getValue()));
  }
  for (  Map.Entry<InetAddress,Collection<Range<Token>>> entry : getRangeFetchMap(rangesForKeyspace,sourceFilters).asMap().entrySet()) {
    if (logger.isDebugEnabled()) {
      for (      Range r : entry.getValue())       logger.debug(String.format("%s: range %s from source %s for keyspace %s",description,r,entry.getKey(),keyspaceName));
    }
    toFetch.put(keyspaceName,entry);
  }
}
