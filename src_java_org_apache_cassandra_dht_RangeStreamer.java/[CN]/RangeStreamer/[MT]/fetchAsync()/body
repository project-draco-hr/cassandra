{
  for (  Map.Entry<String,Map.Entry<InetAddress,Collection<Range<Token>>>> entry : toFetch.entries()) {
    String keyspace=entry.getKey();
    InetAddress source=entry.getValue().getKey();
    InetAddress preferred=SystemKeyspace.getPreferredIP(source);
    Collection<Range<Token>> ranges=entry.getValue().getValue();
    Set<Range<Token>> availableRanges=stateStore.getAvailableRanges(keyspace,StorageService.instance.getTokenMetadata().partitioner);
    if (ranges.removeAll(availableRanges)) {
      logger.info("Some ranges of {} are already available. Skipping streaming those ranges.",availableRanges);
    }
    if (logger.isTraceEnabled())     logger.trace("{}ing from {} ranges {}",description,source,StringUtils.join(ranges,", "));
    streamPlan.requestRanges(source,preferred,keyspace,ranges);
  }
  return streamPlan.execute();
}
