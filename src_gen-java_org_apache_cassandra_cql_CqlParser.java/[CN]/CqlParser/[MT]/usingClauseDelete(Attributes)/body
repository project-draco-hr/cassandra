{
  try {
{
      match(input,K_USING,FOLLOW_K_USING_in_usingClauseDelete921);
      pushFollow(FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete923);
      usingClauseDeleteObjective(attrs);
      state._fsp--;
      loop19:       do {
        int alt19=2;
        int LA19_0=input.LA(1);
        if ((LA19_0 == K_CONSISTENCY || LA19_0 == K_AND || LA19_0 == K_TIMESTAMP)) {
          alt19=1;
        }
switch (alt19) {
case 1:
{
            int alt18=2;
            int LA18_0=input.LA(1);
            if ((LA18_0 == K_AND)) {
              alt18=1;
            }
switch (alt18) {
case 1:
{
                match(input,K_AND,FOLLOW_K_AND_in_usingClauseDelete928);
              }
            break;
        }
        pushFollow(FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete931);
        usingClauseDeleteObjective(attrs);
        state._fsp--;
      }
    break;
default :
  break loop19;
}
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
