{
  String arg=null;
  Token value=null;
  CqlParser.comparatorType_return comparatorType21=null;
  try {
    int alt41=2;
    int LA41_0=input.LA(1);
    if (((LA41_0 >= 86 && LA41_0 <= 98))) {
      alt41=1;
    }
 else     if ((LA41_0 == IDENT || (LA41_0 >= STRING_LITERAL && LA41_0 <= INTEGER) || LA41_0 == FLOAT)) {
      alt41=2;
    }
 else {
      NoViableAltException nvae=new NoViableAltException("",41,0,input);
      throw nvae;
    }
switch (alt41) {
case 1:
{
        pushFollow(FOLLOW_comparatorType_in_createCfamKeywordArgument1991);
        comparatorType21=comparatorType();
        state._fsp--;
        arg=(comparatorType21 != null ? input.toString(comparatorType21.start,comparatorType21.stop) : null);
      }
    break;
case 2:
{
    value=(Token)input.LT(1);
    if (input.LA(1) == IDENT || (input.LA(1) >= STRING_LITERAL && input.LA(1) <= INTEGER) || input.LA(1) == FLOAT) {
      input.consume();
      state.errorRecovery=false;
    }
 else {
      MismatchedSetException mse=new MismatchedSetException(null,input);
      throw mse;
    }
    arg=(value != null ? value.getText() : null);
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return arg;
}
