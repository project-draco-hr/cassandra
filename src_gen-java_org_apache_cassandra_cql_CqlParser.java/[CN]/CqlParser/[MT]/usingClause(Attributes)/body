{
  try {
{
      match(input,K_USING,FOLLOW_K_USING_in_usingClause889);
      pushFollow(FOLLOW_usingClauseObjective_in_usingClause891);
      usingClauseObjective(attrs);
      state._fsp--;
      loop17:       do {
        int alt17=2;
        int LA17_0=input.LA(1);
        if ((LA17_0 == K_CONSISTENCY || LA17_0 == K_AND || (LA17_0 >= K_TIMESTAMP && LA17_0 <= K_TTL))) {
          alt17=1;
        }
switch (alt17) {
case 1:
{
            int alt16=2;
            int LA16_0=input.LA(1);
            if ((LA16_0 == K_AND)) {
              alt16=1;
            }
switch (alt16) {
case 1:
{
                match(input,K_AND,FOLLOW_K_AND_in_usingClause896);
              }
            break;
        }
        pushFollow(FOLLOW_usingClauseObjective_in_usingClause899);
        usingClauseObjective(attrs);
        state._fsp--;
      }
    break;
default :
  break loop17;
}
}
 while (true);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
