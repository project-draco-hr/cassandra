{
  Token t=null;
  try {
    int alt21=2;
    int LA21_0=input.LA(1);
    if ((LA21_0 == K_CONSISTENCY || LA21_0 == K_TIMESTAMP)) {
      alt21=1;
    }
 else     if ((LA21_0 == K_TTL)) {
      alt21=2;
    }
 else {
      NoViableAltException nvae=new NoViableAltException("",21,0,input);
      throw nvae;
    }
switch (alt21) {
case 1:
{
        pushFollow(FOLLOW_usingClauseDeleteObjective_in_usingClauseObjective990);
        usingClauseDeleteObjective(attrs);
        state._fsp--;
      }
    break;
case 2:
{
    match(input,K_TTL,FOLLOW_K_TTL_in_usingClauseObjective999);
    t=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_usingClauseObjective1003);
    attrs.setTimeToLive(Integer.parseInt((t != null ? t.getText() : null)));
  }
break;
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return;
}
