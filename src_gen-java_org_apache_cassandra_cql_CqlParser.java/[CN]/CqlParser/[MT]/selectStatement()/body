{
  SelectStatement expr=null;
  Token columnFamily=null;
  Token rows=null;
  Token K_LEVEL16=null;
  SelectExpression s1=null;
  SelectExpression s2=null;
  WhereClause whereClause17=null;
  try {
{
      int numRecords=10000;
      SelectExpression expression=null;
      boolean isCountOp=false;
      ConsistencyLevel cLevel=ConsistencyLevel.ONE;
      match(input,K_SELECT,FOLLOW_K_SELECT_in_selectStatement275);
      int alt2=2;
      int LA2_0=input.LA(1);
      if ((LA2_0 == IDENT || (LA2_0 >= STRING_LITERAL && LA2_0 <= INTEGER) || (LA2_0 >= K_FIRST && LA2_0 <= K_REVERSED) || (LA2_0 >= K_KEY && LA2_0 <= FLOAT) || LA2_0 == UUID || LA2_0 == 83)) {
        alt2=1;
      }
 else       if ((LA2_0 == K_COUNT)) {
        alt2=2;
      }
 else {
        NoViableAltException nvae=new NoViableAltException("",2,0,input);
        throw nvae;
      }
switch (alt2) {
case 1:
{
          pushFollow(FOLLOW_selectExpression_in_selectStatement291);
          s1=selectExpression();
          state._fsp--;
          expression=s1;
        }
      break;
case 2:
{
      match(input,K_COUNT,FOLLOW_K_COUNT_in_selectStatement323);
      match(input,80,FOLLOW_80_in_selectStatement325);
      pushFollow(FOLLOW_selectExpression_in_selectStatement329);
      s2=selectExpression();
      state._fsp--;
      match(input,81,FOLLOW_81_in_selectStatement331);
      expression=s2;
      isCountOp=true;
    }
  break;
}
match(input,K_FROM,FOLLOW_K_FROM_in_selectStatement357);
columnFamily=(Token)input.LT(1);
if (input.LA(1) == IDENT || (input.LA(1) >= STRING_LITERAL && input.LA(1) <= INTEGER)) {
input.consume();
state.errorRecovery=false;
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
throw mse;
}
int alt3=2;
int LA3_0=input.LA(1);
if ((LA3_0 == K_USING)) {
alt3=1;
}
switch (alt3) {
case 1:
{
  match(input,K_USING,FOLLOW_K_USING_in_selectStatement387);
  match(input,K_CONSISTENCY,FOLLOW_K_CONSISTENCY_in_selectStatement389);
  K_LEVEL16=(Token)match(input,K_LEVEL,FOLLOW_K_LEVEL_in_selectStatement391);
  cLevel=ConsistencyLevel.valueOf((K_LEVEL16 != null ? K_LEVEL16.getText() : null));
}
break;
}
int alt4=2;
int LA4_0=input.LA(1);
if ((LA4_0 == K_WHERE)) {
alt4=1;
}
switch (alt4) {
case 1:
{
match(input,K_WHERE,FOLLOW_K_WHERE_in_selectStatement410);
pushFollow(FOLLOW_whereClause_in_selectStatement412);
whereClause17=whereClause();
state._fsp--;
}
break;
}
int alt5=2;
int LA5_0=input.LA(1);
if ((LA5_0 == K_LIMIT)) {
alt5=1;
}
switch (alt5) {
case 1:
{
match(input,K_LIMIT,FOLLOW_K_LIMIT_in_selectStatement429);
rows=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_selectStatement433);
numRecords=Integer.parseInt((rows != null ? rows.getText() : null));
}
break;
}
pushFollow(FOLLOW_endStmnt_in_selectStatement450);
endStmnt();
state._fsp--;
return new SelectStatement(expression,isCountOp,(columnFamily != null ? columnFamily.getText() : null),cLevel,whereClause17,numRecords);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return expr;
}
