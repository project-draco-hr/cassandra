{
  Keyspace keyspace;
  try {
    keyspace=Keyspace.open(Keyspace.SYSTEM_KS);
  }
 catch (  AssertionError err) {
    ConfigurationException ex=new ConfigurationException("Could not read system keyspace!");
    ex.initCause(err);
    throw ex;
  }
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(LOCAL_CF);
{
    String req="SELECT cluster_name FROM system.%s WHERE key='%s'";
    UntypedResultSet result=executeInternal(String.format(req,LOCAL_CF,LOCAL_KEY));
    if (result.isEmpty() || !result.one().has("cluster_name")) {
      if (!cfs.getSSTables().isEmpty())       throw new ConfigurationException("Found system keyspace files, but they couldn't be loaded!");
      req="INSERT INTO system.%s (key, cluster_name) VALUES ('%s', ?)";
      executeInternal(String.format(req,LOCAL_CF,LOCAL_KEY),DatabaseDescriptor.getClusterName());
    }
 else {
      String savedClusterName=result.one().getString("cluster_name");
      if (!DatabaseDescriptor.getClusterName().equals(savedClusterName))       throw new ConfigurationException("Saved cluster name " + savedClusterName + " != configured name "+ DatabaseDescriptor.getClusterName());
    }
  }
  String req="SELECT rack, data_center FROM system.%s WHERE key='%s'";
  UntypedResultSet result=executeInternal(String.format(req,LOCAL_CF,LOCAL_KEY));
  if (!Boolean.getBoolean("cassandra.ignore_dc")) {
    if (!result.isEmpty() && result.one().has("data_center")) {
      String storedDc=result.one().getString("data_center");
      String currentDc=DatabaseDescriptor.getEndpointSnitch().getDatacenter(FBUtilities.getBroadcastAddress());
      if (!storedDc.equals(currentDc)) {
        throw new ConfigurationException("Cannot start node if snitch's data center (" + currentDc + ") differs from previous data center ("+ storedDc+ "). "+ "Please fix the snitch configuration, decommission and rebootstrap this node or use the flag -Dcassandra.ignore_dc=true.");
      }
    }
  }
  if (!Boolean.getBoolean("cassandra.ignore_rack")) {
    if (!result.isEmpty() && result.one().has("rack")) {
      String storedRack=result.one().getString("rack");
      String currentRack=DatabaseDescriptor.getEndpointSnitch().getRack(FBUtilities.getBroadcastAddress());
      if (!storedRack.equals(currentRack)) {
        throw new ConfigurationException("Cannot start node if snitch's rack (" + currentRack + ") differs from previous rack ("+ storedRack+ "). "+ "Please fix the snitch or decommission and rebootstrap this node.");
      }
    }
  }
}
