{
  ColumnDefinition.Kind kind=LegacySchemaTables.deserializeKind(row.getString("type"));
  Integer componentIndex=null;
  if (!row.isNull("component_index"))   componentIndex=row.getInt("component_index");
  AbstractType<?> comparator=isCQLTable ? UTF8Type.instance : CompactTables.columnDefinitionComparator(kind,isSuper,rawComparator,rawSubComparator);
  ColumnIdentifier name=ColumnIdentifier.getInterned(comparator.fromString(row.getString("column_name")),comparator);
  AbstractType<?> validator=TypeParser.parse(row.getString("validator"));
  return new ColumnDefinition(keyspace,table,name,validator,null,null,null,componentIndex,kind);
}
