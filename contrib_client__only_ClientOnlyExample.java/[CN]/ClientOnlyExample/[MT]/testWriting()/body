{
  StorageService.instance().initClient();
  try {
    Thread.sleep(10000L);
  }
 catch (  Exception ex) {
  }
  final AbstractType comp=ColumnFamily.getComparatorFor("Keyspace1","Standard1",null);
  for (int i=0; i < 100; i++) {
    RowMutation change=new RowMutation("Keyspace1","key" + i);
    ColumnPath cp=new ColumnPath("Standard1",null,("colb").getBytes());
    change.add(new QueryPath(cp),("value" + i).getBytes(),0);
    StorageProxy.mutate(Arrays.asList(change));
    try {
      Thread.sleep(50L);
    }
 catch (    Exception ex) {
    }
    System.out.println("wrote key" + i);
  }
  System.out.println("Done writing.");
  StorageService.instance().stopClient();
}
