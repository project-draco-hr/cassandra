{
  Map<Integer,SSTableReader> active=new HashMap<>();
  for (  SSTableReader sstable : data.getView().sstables)   active.put(sstable.descriptor.generation,sstable);
  Map<Descriptor,Set<Component>> snapshots=directories.sstableLister().snapshots(tag).list();
  List<SSTableReader> readers=new ArrayList<>(snapshots.size());
  try {
    for (    Map.Entry<Descriptor,Set<Component>> entries : snapshots.entrySet()) {
      SSTableReader sstable=active.get(entries.getKey().generation);
      if (sstable == null || !sstable.acquireReference()) {
        if (logger.isDebugEnabled())         logger.debug("using snapshot sstable {}",entries.getKey());
        sstable=SSTableReader.open(entries.getKey(),entries.getValue(),metadata,partitioner);
        sstable.acquireReference();
      }
 else       if (logger.isDebugEnabled()) {
        logger.debug("using active sstable {}",entries.getKey());
      }
      readers.add(sstable);
    }
  }
 catch (  IOException|RuntimeException e) {
    SSTableReader.releaseReferences(readers);
    throw e;
  }
  return readers;
}
