{
  Map<Integer,SSTableReader> active=new HashMap<>();
  for (  SSTableReader sstable : data.getView().sstables)   active.put(sstable.descriptor.generation,sstable);
  Map<Descriptor,Set<Component>> snapshots=directories.sstableLister().snapshots(tag).list();
  Refs<SSTableReader> refs=new Refs<>();
  try {
    for (    Map.Entry<Descriptor,Set<Component>> entries : snapshots.entrySet()) {
      SSTableReader sstable=active.get(entries.getKey().generation);
      if (sstable == null || !refs.tryRef(sstable)) {
        if (logger.isTraceEnabled())         logger.trace("using snapshot sstable {}",entries.getKey());
        sstable=SSTableReader.open(entries.getKey(),entries.getValue(),metadata,partitioner,true,false);
        refs.tryRef(sstable);
        sstable.selfRef().release();
      }
 else       if (logger.isTraceEnabled()) {
        logger.trace("using active sstable {}",entries.getKey());
      }
    }
  }
 catch (  IOException|RuntimeException e) {
    refs.release();
    throw e;
  }
  return refs;
}
