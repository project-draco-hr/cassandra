{
  List<Integer> generations=new ArrayList<Integer>();
  for (  String path : DatabaseDescriptor.getAllDataFileLocationsForTable(table.name)) {
    Iterable<Pair<Descriptor,Component>> pairs=files(new File(path));
    File incrementalsPath=new File(path,"backups");
    if (incrementalsPath.exists())     pairs=Iterables.concat(pairs,files(incrementalsPath));
    for (    Pair<Descriptor,Component> pair : pairs) {
      Descriptor desc=pair.left;
      if (!desc.cfname.equals(columnFamily))       continue;
      generations.add(desc.generation);
      if (desc.isFromTheFuture()) {
        throw new RuntimeException(String.format("Can't open sstables from the future! Current version %s, found file: %s",Descriptor.CURRENT_VERSION,desc));
      }
    }
  }
  Collections.sort(generations);
  int value=(generations.size() > 0) ? (generations.get(generations.size() - 1)) : 0;
  return new ColumnFamilyStore(table,columnFamily,partitioner,value,metadata);
}
