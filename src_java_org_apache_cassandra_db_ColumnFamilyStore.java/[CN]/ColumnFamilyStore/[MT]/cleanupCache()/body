{
  Collection<Range<Token>> ranges=StorageService.instance.getLocalRanges(keyspace.getName());
  for (  RowCacheKey key : CacheService.instance.rowCache.getKeySet()) {
    DecoratedKey dk=partitioner.decorateKey(ByteBuffer.wrap(key.key));
    if (key.ksAndCFName.equals(metadata.ksAndCFName) && !Range.isInRanges(dk.getToken(),ranges))     invalidateCachedRow(dk);
  }
  if (metadata.isCounter()) {
    for (    CounterCacheKey key : CacheService.instance.counterCache.getKeySet()) {
      DecoratedKey dk=partitioner.decorateKey(ByteBuffer.wrap(key.partitionKey));
      if (key.ksAndCFName.equals(metadata.ksAndCFName) && !Range.isInRanges(dk.getToken(),ranges))       CacheService.instance.counterCache.remove(key);
    }
  }
}
