{
  Directories directories=Directories.create(keyspace,columnfamily);
  Set<Integer> allGenerations=new HashSet<Integer>();
  for (  Descriptor desc : directories.sstableLister().list().keySet())   allGenerations.add(desc.generation);
  if (!allGenerations.containsAll(unfinishedGenerations)) {
    throw new IllegalStateException("Unfinished compactions reference missing sstables." + " This should never happen since compactions are marked finished before we start removing the old sstables.");
  }
  Set<Integer> completedAncestors=new HashSet<Integer>();
  for (  Map.Entry<Descriptor,Set<Component>> sstableFiles : directories.sstableLister().list().entrySet()) {
    Descriptor desc=sstableFiles.getKey();
    Set<Component> components=sstableFiles.getValue();
    SSTableMetadata meta;
    try {
      meta=SSTableMetadata.serializer.deserialize(desc);
    }
 catch (    IOException e) {
      throw new FSReadError(e,desc.filenameFor(Component.STATS));
    }
    Set<Integer> ancestors=meta.ancestors;
    if (!ancestors.isEmpty() && unfinishedGenerations.containsAll(ancestors)) {
      SSTable.delete(desc,components);
    }
 else {
      completedAncestors.addAll(ancestors);
    }
  }
  for (  Map.Entry<Descriptor,Set<Component>> sstableFiles : directories.sstableLister().list().entrySet()) {
    Descriptor desc=sstableFiles.getKey();
    Set<Component> components=sstableFiles.getValue();
    if (completedAncestors.contains(desc.generation))     SSTable.delete(desc,components);
  }
}
