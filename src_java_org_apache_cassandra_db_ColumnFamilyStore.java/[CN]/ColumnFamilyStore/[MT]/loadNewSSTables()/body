{
  logger.info("Loading new SSTables for {}/{}...",keyspace.getName(),name);
  Set<Descriptor> currentDescriptors=new HashSet<>();
  for (  SSTableReader sstable : getSSTables(SSTableSet.CANONICAL))   currentDescriptors.add(sstable.descriptor);
  Set<SSTableReader> newSSTables=new HashSet<>();
  Directories.SSTableLister lister=getDirectories().sstableLister(Directories.OnTxnErr.IGNORE).skipTemporary(true);
  for (  Map.Entry<Descriptor,Set<Component>> entry : lister.list().entrySet()) {
    Descriptor descriptor=entry.getKey();
    if (currentDescriptors.contains(descriptor))     continue;
    if (!descriptor.isCompatible())     throw new RuntimeException(String.format("Can't open incompatible SSTable! Current version %s, found file: %s",descriptor.getFormat().getLatestVersion(),descriptor));
    try {
      if (new File(descriptor.filenameFor(Component.STATS)).exists())       descriptor.getMetadataSerializer().mutateLevel(descriptor,0);
    }
 catch (    IOException e) {
      SSTableReader.logOpenException(entry.getKey(),e);
      continue;
    }
    Descriptor newDescriptor;
    do {
      newDescriptor=new Descriptor(descriptor.version,descriptor.directory,descriptor.ksname,descriptor.cfname,fileIndexGenerator.incrementAndGet(),descriptor.formatType);
    }
 while (new File(newDescriptor.filenameFor(Component.DATA)).exists());
    logger.info("Renaming new SSTable {} to {}",descriptor,newDescriptor);
    SSTableWriter.rename(descriptor,newDescriptor,entry.getValue());
    SSTableReader reader;
    try {
      reader=SSTableReader.open(newDescriptor,entry.getValue(),metadata);
    }
 catch (    IOException e) {
      SSTableReader.logOpenException(entry.getKey(),e);
      continue;
    }
    newSSTables.add(reader);
  }
  if (newSSTables.isEmpty()) {
    logger.info("No new SSTables were found for {}/{}",keyspace.getName(),name);
    return;
  }
  logger.info("Loading new SSTables and building secondary indexes for {}/{}: {}",keyspace.getName(),name,newSSTables);
  try (Refs<SSTableReader> refs=Refs.ref(newSSTables)){
    data.addSSTables(newSSTables);
    indexManager.maybeBuildSecondaryIndexes(newSSTables,indexManager.allIndexesNames());
  }
   logger.info("Done loading load new SSTables for {}/{}",keyspace.getName(),name);
}
