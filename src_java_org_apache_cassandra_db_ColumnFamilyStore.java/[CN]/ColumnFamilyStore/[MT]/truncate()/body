{
  try {
    forceBlockingFlush();
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  final long truncatedAt=System.currentTimeMillis();
  snapshot(Table.getTimestampedSnapshotName("before-truncate"));
  Runnable runnable=new WrappedRunnable(){
    public void runMayThrow() throws InterruptedException, IOException {
      for (      ColumnFamilyStore cfs : Iterables.concat(indexedColumns.values(),Arrays.asList(ColumnFamilyStore.this))) {
        List<SSTableReader> truncatedSSTables=new ArrayList<SSTableReader>();
        for (        SSTableReader sstable : cfs.getSSTables()) {
          if (!sstable.newSince(truncatedAt))           truncatedSSTables.add(sstable);
        }
        cfs.markCompacted(truncatedSSTables);
      }
      invalidateRowCache();
    }
  }
;
  return postFlushExecutor.submit(runnable);
}
