{
synchronized (this) {
    logger.debug("Cancelling in-progress compactions for {}",metadata.cfName);
    Iterable<ColumnFamilyStore> selfWithIndexes=concatWithIndexes();
    for (    ColumnFamilyStore cfs : selfWithIndexes)     cfs.getCompactionStrategy().pause();
    try {
      CompactionManager.instance.interruptCompactionForCFs(selfWithIndexes,interruptValidation);
      CompactionManager.instance.waitForCessation(selfWithIndexes);
      for (      ColumnFamilyStore cfs : selfWithIndexes) {
        if (!cfs.getDataTracker().getCompacting().isEmpty()) {
          logger.warn("Unable to cancel in-progress compactions for {}.  Perhaps there is an unusually large row in progress somewhere, or the system is simply overloaded.",metadata.cfName);
          return null;
        }
      }
      logger.debug("Compactions successfully cancelled");
      try {
        return callable.call();
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  finally {
      for (      ColumnFamilyStore cfs : selfWithIndexes)       cfs.getCompactionStrategy().resume();
    }
  }
}
