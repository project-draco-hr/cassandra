{
  if (filter.filter instanceof SliceQueryFilter) {
    SliceQueryFilter sliceFilter=(SliceQueryFilter)filter.filter;
    if (sliceFilter.start.length == 0 && sliceFilter.finish.length == 0) {
      if (cached.isSuper() && filter.path.superColumnName != null) {
        IColumn sc=cached.getColumn(filter.path.superColumnName);
        if (sc == null || sliceFilter.count >= sc.getSubColumns().size()) {
          ColumnFamily cf=cached.cloneMeShallow();
          if (sc != null)           cf.addColumn(sc);
          return removeDeleted(cf,gcBefore);
        }
      }
 else {
        if (sliceFilter.count >= cached.getColumnCount()) {
          removeDeletedColumnsOnly(cached,gcBefore);
          return removeDeletedCF(cached,gcBefore);
        }
      }
    }
  }
  IColumnIterator ci=filter.getMemtableColumnIterator(cached,null,getComparator());
  ColumnFamily cf=null;
  try {
    cf=ci.getColumnFamily().cloneMeShallow();
  }
 catch (  IOException e) {
    throw new IOError(e);
  }
  filter.collectCollatedColumns(cf,ci,gcBefore);
  return cf.isSuper() ? removeDeleted(cf,gcBefore) : removeDeletedCF(cf,gcBefore);
}
