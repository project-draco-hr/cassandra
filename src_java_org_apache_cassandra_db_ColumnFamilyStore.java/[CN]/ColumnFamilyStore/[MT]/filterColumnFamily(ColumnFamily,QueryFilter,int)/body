{
  if (filter.filter instanceof SliceQueryFilter) {
    SliceQueryFilter sliceFilter=(SliceQueryFilter)filter.filter;
    if (sliceFilter.start.remaining() == 0 && sliceFilter.finish.remaining() == 0) {
      if (cached.isSuper() && filter.path.superColumnName != null) {
        IColumn sc=cached.getColumn(filter.path.superColumnName);
        if (sc == null || sliceFilter.count >= sc.getSubColumns().size()) {
          ColumnFamily cf=cached.cloneMeShallow(ArrayBackedSortedColumns.factory(),filter.filter.isReversed());
          if (sc != null)           cf.addColumn(sc,HeapAllocator.instance);
          return removeDeleted(cf,gcBefore);
        }
      }
 else {
        if (sliceFilter.count >= cached.getColumnCount()) {
          removeDeletedColumnsOnly(cached,gcBefore);
          return removeDeletedCF(cached,gcBefore);
        }
      }
    }
  }
  IColumnIterator ci=filter.getMemtableColumnIterator(cached,null,getComparator());
  ColumnFamily cf=ci.getColumnFamily().cloneMeShallow(ArrayBackedSortedColumns.factory(),filter.filter.isReversed());
  filter.collateColumns(cf,Collections.singletonList(ci),getComparator(),gcBefore);
  return cf.isSuper() ? removeDeleted(cf,gcBefore) : removeDeletedCF(cf,gcBefore);
}
