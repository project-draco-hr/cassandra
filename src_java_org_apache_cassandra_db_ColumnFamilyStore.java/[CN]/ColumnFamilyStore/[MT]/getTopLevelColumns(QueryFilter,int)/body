{
  List<IColumnIterator> iterators=new ArrayList<IColumnIterator>();
  final ColumnFamily returnCF=ColumnFamily.create(table_,columnFamily_);
  try {
    IColumnIterator iter;
    iter=filter.getMemtableColumnIterator(getMemtableThreadSafe(),getComparator());
    if (iter != null) {
      returnCF.delete(iter.getColumnFamily());
      iterators.add(iter);
    }
    for (    Memtable memtable : memtablesPendingFlush) {
      iter=filter.getMemtableColumnIterator(memtable,getComparator());
      if (iter != null) {
        returnCF.delete(iter.getColumnFamily());
        iterators.add(iter);
      }
    }
    for (    SSTableReader sstable : ssTables_) {
      iter=filter.getSSTableColumnIterator(sstable);
      if (iter.getColumnFamily() != null) {
        returnCF.delete(iter.getColumnFamily());
        iterators.add(iter);
      }
    }
    Comparator<IColumn> comparator=QueryFilter.getColumnComparator(getComparator());
    Iterator collated=IteratorUtils.collatedIterator(comparator,iterators);
    filter.collectCollatedColumns(returnCF,collated,gcBefore);
    return returnCF;
  }
 catch (  IOException e) {
    throw new IOError(e);
  }
 finally {
    for (    IColumnIterator ci : iterators) {
      try {
        ci.close();
      }
 catch (      Throwable th) {
        logger_.error("error closing " + ci,th);
      }
    }
  }
}
