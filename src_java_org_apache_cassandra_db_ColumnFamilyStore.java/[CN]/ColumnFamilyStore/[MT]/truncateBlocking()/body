{
  logger.trace("truncating {}",name);
  if (keyspace.getMetadata().params.durableWrites || DatabaseDescriptor.isAutoSnapshot()) {
    forceBlockingFlush();
    viewManager.forceBlockingFlush();
    Uninterruptibles.sleepUninterruptibly(1,TimeUnit.MILLISECONDS);
  }
 else {
    dumpMemtable();
    viewManager.dumpMemtables();
  }
  Runnable truncateRunnable=new Runnable(){
    public void run(){
      logger.trace("Discarding sstable data for truncated CF + indexes");
      final long truncatedAt=System.currentTimeMillis();
      data.notifyTruncated(truncatedAt);
      if (DatabaseDescriptor.isAutoSnapshot())       snapshot(Keyspace.getTimestampedSnapshotName(name));
      ReplayPosition replayAfter=discardSSTables(truncatedAt);
      indexManager.truncateAllIndexesBlocking(truncatedAt);
      viewManager.truncateBlocking(truncatedAt);
      SystemKeyspace.saveTruncationRecord(ColumnFamilyStore.this,truncatedAt,replayAfter);
      logger.trace("cleaning out row cache");
      invalidateCaches();
    }
  }
;
  runWithCompactionsDisabled(Executors.callable(truncateRunnable),true,true);
  logger.trace("truncate complete");
}
