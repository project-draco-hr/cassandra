{
  Table.flusherLock.writeLock().lock();
  try {
    if (oldMemtable.isFrozen()) {
      return null;
    }
    oldMemtable.freeze();
    final CommitLogSegment.CommitLogContext ctx=writeCommitLog ? CommitLog.instance().getContext() : null;
    logger_.info(columnFamily_ + " has reached its threshold; switching in a fresh Memtable at " + ctx);
    final Condition condition=submitFlush(oldMemtable);
    memtable_=new Memtable(this);
    return commitLogUpdater_.submit(new WrappedRunnable(){
      public void runMayThrow() throws InterruptedException, IOException {
        condition.await();
        if (writeCommitLog) {
          final int cfId=DatabaseDescriptor.getTableMetaData(table_).get(columnFamily_).cfId;
          logger_.info("Discarding " + cfId);
          CommitLog.instance().discardCompletedSegments(cfId,ctx);
        }
      }
    }
);
  }
  finally {
    Table.flusherLock.writeLock().unlock();
    if (memtableSwitchCount == Integer.MAX_VALUE) {
      memtableSwitchCount=0;
    }
    memtableSwitchCount++;
  }
}
