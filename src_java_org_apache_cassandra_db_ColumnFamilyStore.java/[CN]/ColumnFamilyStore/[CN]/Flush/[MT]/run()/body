{
  writeBarrier.markBlocking();
  writeBarrier.await();
  Iterator<Memtable> iter=memtables.iterator();
  while (iter.hasNext()) {
    Memtable memtable=iter.next();
    memtable.cfs.data.markFlushing(memtable);
    if (memtable.isClean() || truncate) {
      memtable.cfs.replaceFlushed(memtable,null);
      reclaim(memtable);
      iter.remove();
    }
  }
  if (memtables.isEmpty()) {
    postFlush.latch.countDown();
    return;
  }
  metric.memtableSwitchCount.inc();
  try {
    for (    Memtable memtable : memtables) {
      MoreExecutors.sameThreadExecutor().execute(memtable.flushRunnable());
      reclaim(memtable);
    }
    postFlush.latch.countDown();
  }
 catch (  FSWriteError e) {
    JVMStabilityInspector.inspectThrowable(e);
    previousFlushFailure=e;
    throw e;
  }
}
