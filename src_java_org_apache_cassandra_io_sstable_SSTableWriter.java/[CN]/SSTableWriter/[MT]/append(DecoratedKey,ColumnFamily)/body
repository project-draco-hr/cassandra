{
  long startPosition=beforeAppend(decoratedKey);
  try {
    ByteBufferUtil.writeWithShortLength(decoratedKey.key,dataFile.stream);
    DataOutputBuffer buffer=new DataOutputBuffer();
    ColumnIndex.Builder builder=new ColumnIndex.Builder(cf,decoratedKey.key,buffer);
    ColumnIndex index=builder.build(cf);
    TypeSizes typeSizes=TypeSizes.NATIVE;
    long delSize=DeletionTime.serializer.serializedSize(cf.deletionInfo().getTopLevelDeletion(),typeSizes);
    dataFile.stream.writeLong(buffer.getLength() + delSize + typeSizes.sizeof(0));
    DeletionTime.serializer.serialize(cf.deletionInfo().getTopLevelDeletion(),dataFile.stream);
    dataFile.stream.writeInt(builder.writtenAtomCount());
    dataFile.stream.write(buffer.getData(),0,buffer.getLength());
    afterAppend(decoratedKey,startPosition,cf.deletionInfo().getTopLevelDeletion(),index);
  }
 catch (  IOException e) {
    throw new FSWriteError(e,dataFile.getPath());
  }
  sstableMetadataCollector.update(dataFile.getFilePointer() - startPosition,cf.getColumnStats());
}
