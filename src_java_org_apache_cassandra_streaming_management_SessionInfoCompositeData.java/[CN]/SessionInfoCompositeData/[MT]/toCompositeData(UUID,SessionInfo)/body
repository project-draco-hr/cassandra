{
  Map<String,Object> valueMap=new HashMap<>();
  valueMap.put(ITEM_NAMES[0],planId.toString());
  valueMap.put(ITEM_NAMES[1],sessionInfo.peer.getHostAddress());
  Function<StreamSummary,CompositeData> fromStreamSummary=new Function<StreamSummary,CompositeData>(){
    public CompositeData apply(    StreamSummary input){
      return StreamSummaryCompositeData.toCompositeData(input);
    }
  }
;
  valueMap.put(ITEM_NAMES[2],toArrayOfCompositeData(sessionInfo.receivingSummaries,fromStreamSummary));
  valueMap.put(ITEM_NAMES[3],toArrayOfCompositeData(sessionInfo.sendingSummaries,fromStreamSummary));
  valueMap.put(ITEM_NAMES[4],sessionInfo.state.name());
  Function<ProgressInfo,CompositeData> fromProgressInfo=new Function<ProgressInfo,CompositeData>(){
    public CompositeData apply(    ProgressInfo input){
      return ProgressInfoCompositeData.toCompositeData(planId,input);
    }
  }
;
  valueMap.put(ITEM_NAMES[5],toArrayOfCompositeData(sessionInfo.getReceivingFiles(),fromProgressInfo));
  valueMap.put(ITEM_NAMES[6],toArrayOfCompositeData(sessionInfo.getSendingFiles(),fromProgressInfo));
  valueMap.put(ITEM_NAMES[7],sessionInfo.sessionIndex);
  try {
    return new CompositeDataSupport(COMPOSITE_TYPE,valueMap);
  }
 catch (  OpenDataException e) {
    throw Throwables.propagate(e);
  }
}
