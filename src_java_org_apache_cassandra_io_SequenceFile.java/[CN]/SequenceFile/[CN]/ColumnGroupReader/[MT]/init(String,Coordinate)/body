{
  String keyInDisk=null;
  if (seekTo(key_,section) >= 0)   keyInDisk=file_.readUTF();
  if (keyInDisk != null && keyInDisk.equals(key_)) {
    int dataSize=file_.readInt();
    int totalBytesRead=IndexHelper.skipBloomFilter(file_);
    boolean hasColumnIndexes=file_.readBoolean();
    totalBytesRead+=1;
    List<IndexHelper.ColumnIndexInfo> colIndexList=new ArrayList<IndexHelper.ColumnIndexInfo>();
    if (hasColumnIndexes)     totalBytesRead+=IndexHelper.deserializeIndex(cfName_,file_,colIndexList);
    String cfName=file_.readUTF();
    localDeletionTime_=file_.readInt();
    markedForDeleteAt_=file_.readLong();
    int totalNumCols=file_.readInt();
    allColumnsSize_=dataSize - (totalBytesRead + utfPrefix_ + cfName.length()+ 4+ 8+ 4);
    columnStartPosition_=file_.getFilePointer();
    columnIndexList_=getFullColumnIndexList(colIndexList,totalNumCols);
    int index=Collections.binarySearch(columnIndexList_,new IndexHelper.ColumnNameIndexInfo(startColumn));
    curRangeIndex_=index < 0 ? (++index) * (-1) - 1 : index;
  }
 else {
    curRangeIndex_=-1;
    columnIndexList_=new ArrayList<IndexHelper.ColumnIndexInfo>();
  }
}
