{
  int dataSize=file_.readInt();
  bufOut.writeUTF(key);
  int bytesSkipped=IndexHelper.skipBloomFilter(file_);
  dataSize-=bytesSkipped;
  List<IndexHelper.ColumnIndexInfo> columnIndexList=new ArrayList<IndexHelper.ColumnIndexInfo>();
  int totalBytesRead=handleColumnTimeIndexes(columnFamilyName,columnIndexList);
  dataSize-=totalBytesRead;
  String cfName=file_.readUTF();
  dataSize-=(utfPrefix_ + cfName.length());
  String cfType=file_.readUTF();
  dataSize-=(utfPrefix_ + cfType.length());
  int indexType=file_.readInt();
  dataSize-=4;
  int localDeletionTime=file_.readInt();
  dataSize-=4;
  long markedForDeleteAt=file_.readLong();
  dataSize-=8;
  int totalNumCols=file_.readInt();
  dataSize-=4;
  IndexHelper.ColumnRange columnRange=IndexHelper.getColumnRangeFromTimeIndex(timeRange,columnIndexList,dataSize,totalNumCols);
  Coordinate coordinate=columnRange.coordinate();
  file_.skipBytes((int)coordinate.start_);
  dataSize=(int)(coordinate.end_ - coordinate.start_);
  bufOut.writeInt(dataSize + utfPrefix_ * 2 + cfName.length() + cfType.length() + 4 + 4 + 8 + 4);
  bufOut.writeUTF(cfName);
  bufOut.writeUTF(cfType);
  bufOut.writeInt(indexType);
  bufOut.writeInt(localDeletionTime);
  bufOut.writeLong(markedForDeleteAt);
  bufOut.writeInt(columnRange.count());
  bufOut.write(file_,dataSize);
}
