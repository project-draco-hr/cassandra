{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetColumn_family()).compareTo(other.isSetColumn_family());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumn_family()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.column_family,other.column_family);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRange()).compareTo(other.isSetRange());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRange()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.range,other.range);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStart_column()).compareTo(other.isSetStart_column());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStart_column()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.start_column,other.start_column);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetConsistency_level()).compareTo(other.isSetConsistency_level());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetConsistency_level()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.consistency_level,other.consistency_level);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
