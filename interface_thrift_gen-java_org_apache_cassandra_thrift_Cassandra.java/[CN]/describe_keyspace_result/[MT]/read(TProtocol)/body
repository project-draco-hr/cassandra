{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map98=iprot.readMapBegin();
          this.success=new HashMap<String,Map<String,String>>(2 * _map98.size);
          for (int _i99=0; _i99 < _map98.size; ++_i99) {
            String _key100;
            Map<String,String> _val101;
            _key100=iprot.readString();
{
              TMap _map102=iprot.readMapBegin();
              _val101=new HashMap<String,String>(2 * _map102.size);
              for (int _i103=0; _i103 < _map102.size; ++_i103) {
                String _key104;
                String _val105;
                _key104=iprot.readString();
                _val105=iprot.readString();
                _val101.put(_key104,_val105);
              }
              iprot.readMapEnd();
            }
            this.success.put(_key100,_val101);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == TType.STRUCT) {
    this.nfe=new NotFoundException();
    this.nfe.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
