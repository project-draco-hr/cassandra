{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map116=iprot.readMapBegin();
          this.success=new HashMap<String,Map<String,String>>(2 * _map116.size);
          for (int _i117=0; _i117 < _map116.size; ++_i117) {
            String _key118;
            Map<String,String> _val119;
            _key118=iprot.readString();
{
              TMap _map120=iprot.readMapBegin();
              _val119=new HashMap<String,String>(2 * _map120.size);
              for (int _i121=0; _i121 < _map120.size; ++_i121) {
                String _key122;
                String _val123;
                _key122=iprot.readString();
                _val123=iprot.readString();
                _val119.put(_key122,_val123);
              }
              iprot.readMapEnd();
            }
            this.success.put(_key118,_val119);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == TType.STRUCT) {
    this.nfe=new NotFoundException();
    this.nfe.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
