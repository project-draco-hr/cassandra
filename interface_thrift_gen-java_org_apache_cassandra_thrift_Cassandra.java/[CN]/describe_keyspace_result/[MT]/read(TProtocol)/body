{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
    _Fields fieldId=_Fields.findByThriftId(field.id);
    if (fieldId == null) {
      TProtocolUtil.skip(iprot,field.type);
    }
 else {
switch (fieldId) {
case SUCCESS:
        if (field.type == TType.MAP) {
{
            TMap _map74=iprot.readMapBegin();
            this.success=new HashMap<String,Map<String,String>>(2 * _map74.size);
            for (int _i75=0; _i75 < _map74.size; ++_i75) {
              String _key76;
              Map<String,String> _val77;
              _key76=iprot.readString();
{
                TMap _map78=iprot.readMapBegin();
                _val77=new HashMap<String,String>(2 * _map78.size);
                for (int _i79=0; _i79 < _map78.size; ++_i79) {
                  String _key80;
                  String _val81;
                  _key80=iprot.readString();
                  _val81=iprot.readString();
                  _val77.put(_key80,_val81);
                }
                iprot.readMapEnd();
              }
              this.success.put(_key76,_val77);
            }
            iprot.readMapEnd();
          }
        }
 else {
          TProtocolUtil.skip(iprot,field.type);
        }
      break;
case NFE:
    if (field.type == TType.STRUCT) {
      this.nfe=new NotFoundException();
      this.nfe.read(iprot);
    }
 else {
      TProtocolUtil.skip(iprot,field.type);
    }
  break;
}
iprot.readFieldEnd();
}
}
iprot.readStructEnd();
validate();
}
