{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map81=iprot.readMapBegin();
          this.success=new HashMap<String,Map<String,String>>(2 * _map81.size);
          for (int _i82=0; _i82 < _map81.size; ++_i82) {
            String _key83;
            Map<String,String> _val84;
            _key83=iprot.readString();
{
              TMap _map85=iprot.readMapBegin();
              _val84=new HashMap<String,String>(2 * _map85.size);
              for (int _i86=0; _i86 < _map85.size; ++_i86) {
                String _key87;
                String _val88;
                _key87=iprot.readString();
                _val88=iprot.readString();
                _val84.put(_key87,_val88);
              }
              iprot.readMapEnd();
            }
            this.success.put(_key83,_val84);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == TType.STRUCT) {
    this.nfe=new NotFoundException();
    this.nfe.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
