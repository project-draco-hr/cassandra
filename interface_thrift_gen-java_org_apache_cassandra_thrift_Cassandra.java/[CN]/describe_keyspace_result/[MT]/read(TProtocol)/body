{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map103=iprot.readMapBegin();
          this.success=new HashMap<String,Map<String,String>>(2 * _map103.size);
          for (int _i104=0; _i104 < _map103.size; ++_i104) {
            String _key105;
            Map<String,String> _val106;
            _key105=iprot.readString();
{
              TMap _map107=iprot.readMapBegin();
              _val106=new HashMap<String,String>(2 * _map107.size);
              for (int _i108=0; _i108 < _map107.size; ++_i108) {
                String _key109;
                String _val110;
                _key109=iprot.readString();
                _val110=iprot.readString();
                _val106.put(_key109,_val110);
              }
              iprot.readMapEnd();
            }
            this.success.put(_key105,_val106);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == TType.STRUCT) {
    this.nfe=new NotFoundException();
    this.nfe.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
