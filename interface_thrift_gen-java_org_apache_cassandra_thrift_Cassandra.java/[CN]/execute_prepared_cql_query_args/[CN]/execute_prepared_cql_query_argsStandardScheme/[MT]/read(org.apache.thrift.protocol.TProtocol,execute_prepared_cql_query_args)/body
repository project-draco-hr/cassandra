{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
        struct.itemId=iprot.readI32();
        struct.setItemIdIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list424=iprot.readListBegin();
      struct.values=new ArrayList<ByteBuffer>(_list424.size);
      for (int _i425=0; _i425 < _list424.size; ++_i425) {
        ByteBuffer _elem426;
        _elem426=iprot.readBinary();
        struct.values.add(_elem426);
      }
      iprot.readListEnd();
    }
    struct.setValuesIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
if (!struct.isSetItemId()) {
throw new org.apache.thrift.protocol.TProtocolException("Required field 'itemId' was not found in serialized data! Struct: " + toString());
}
struct.validate();
}
