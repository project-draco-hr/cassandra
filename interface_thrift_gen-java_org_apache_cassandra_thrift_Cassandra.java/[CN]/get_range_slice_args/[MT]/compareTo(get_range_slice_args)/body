{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  get_range_slice_args typedOther=(get_range_slice_args)other;
  lastComparison=Boolean.valueOf(isSetKeyspace()).compareTo(typedOther.isSetKeyspace());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKeyspace()) {
    lastComparison=TBaseHelper.compareTo(keyspace,typedOther.keyspace);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumn_parent()).compareTo(typedOther.isSetColumn_parent());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumn_parent()) {
    lastComparison=TBaseHelper.compareTo(column_parent,typedOther.column_parent);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPredicate()).compareTo(typedOther.isSetPredicate());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPredicate()) {
    lastComparison=TBaseHelper.compareTo(predicate,typedOther.predicate);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStart_key()).compareTo(typedOther.isSetStart_key());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStart_key()) {
    lastComparison=TBaseHelper.compareTo(start_key,typedOther.start_key);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetFinish_key()).compareTo(typedOther.isSetFinish_key());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetFinish_key()) {
    lastComparison=TBaseHelper.compareTo(finish_key,typedOther.finish_key);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRow_count()).compareTo(typedOther.isSetRow_count());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRow_count()) {
    lastComparison=TBaseHelper.compareTo(row_count,typedOther.row_count);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetConsistency_level()).compareTo(typedOther.isSetConsistency_level());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetConsistency_level()) {
    lastComparison=TBaseHelper.compareTo(consistency_level,typedOther.consistency_level);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
