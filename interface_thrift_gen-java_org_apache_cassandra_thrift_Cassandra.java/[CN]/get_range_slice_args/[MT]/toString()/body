{
  StringBuilder sb=new StringBuilder("get_range_slice_args(");
  boolean first=true;
  sb.append("column_parent:");
  if (this.column_parent == null) {
    sb.append("null");
  }
 else {
    sb.append(this.column_parent);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("predicate:");
  if (this.predicate == null) {
    sb.append("null");
  }
 else {
    sb.append(this.predicate);
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("start_key:");
  if (this.start_key == null) {
    sb.append("null");
  }
 else {
    int __start_key_size=Math.min(this.start_key.length,128);
    for (int i=0; i < __start_key_size; i++) {
      if (i != 0)       sb.append(" ");
      sb.append(Integer.toHexString(this.start_key[i]).length() > 1 ? Integer.toHexString(this.start_key[i]).substring(Integer.toHexString(this.start_key[i]).length() - 2).toUpperCase() : "0" + Integer.toHexString(this.start_key[i]).toUpperCase());
    }
    if (this.start_key.length > 128)     sb.append(" ...");
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("finish_key:");
  if (this.finish_key == null) {
    sb.append("null");
  }
 else {
    int __finish_key_size=Math.min(this.finish_key.length,128);
    for (int i=0; i < __finish_key_size; i++) {
      if (i != 0)       sb.append(" ");
      sb.append(Integer.toHexString(this.finish_key[i]).length() > 1 ? Integer.toHexString(this.finish_key[i]).substring(Integer.toHexString(this.finish_key[i]).length() - 2).toUpperCase() : "0" + Integer.toHexString(this.finish_key[i]).toUpperCase());
    }
    if (this.finish_key.length > 128)     sb.append(" ...");
  }
  first=false;
  if (!first)   sb.append(", ");
  sb.append("row_count:");
  sb.append(this.row_count);
  first=false;
  if (!first)   sb.append(", ");
  sb.append("consistency_level:");
  if (this.consistency_level == null) {
    sb.append("null");
  }
 else {
    sb.append(this.consistency_level);
  }
  first=false;
  sb.append(")");
  return sb.toString();
}
