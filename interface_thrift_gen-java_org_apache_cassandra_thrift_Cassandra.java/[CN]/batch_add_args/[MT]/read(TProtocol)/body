{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == TType.MAP) {
{
          TMap _map90=iprot.readMapBegin();
          this.update_map=new HashMap<ByteBuffer,Map<String,List<CounterMutation>>>(2 * _map90.size);
          for (int _i91=0; _i91 < _map90.size; ++_i91) {
            ByteBuffer _key92;
            Map<String,List<CounterMutation>> _val93;
            _key92=iprot.readBinary();
{
              TMap _map94=iprot.readMapBegin();
              _val93=new HashMap<String,List<CounterMutation>>(2 * _map94.size);
              for (int _i95=0; _i95 < _map94.size; ++_i95) {
                String _key96;
                List<CounterMutation> _val97;
                _key96=iprot.readString();
{
                  TList _list98=iprot.readListBegin();
                  _val97=new ArrayList<CounterMutation>(_list98.size);
                  for (int _i99=0; _i99 < _list98.size; ++_i99) {
                    CounterMutation _elem100;
                    _elem100=new CounterMutation();
                    _elem100.read(iprot);
                    _val97.add(_elem100);
                  }
                  iprot.readListEnd();
                }
                _val93.put(_key96,_val97);
              }
              iprot.readMapEnd();
            }
            this.update_map.put(_key92,_val93);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == TType.I32) {
    this.consistency_level=ConsistencyLevel.findByValue(iprot.readI32());
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
