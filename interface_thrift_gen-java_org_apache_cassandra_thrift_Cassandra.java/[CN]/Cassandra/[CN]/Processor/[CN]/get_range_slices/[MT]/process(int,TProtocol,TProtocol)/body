{
  get_range_slices_args args=new get_range_slices_args();
  try {
    args.read(iprot);
  }
 catch (  TProtocolException e) {
    iprot.readMessageEnd();
    TApplicationException x=new TApplicationException(TApplicationException.PROTOCOL_ERROR,e.getMessage());
    oprot.writeMessageBegin(new TMessage("get_range_slices",TMessageType.EXCEPTION,seqid));
    x.write(oprot);
    oprot.writeMessageEnd();
    oprot.getTransport().flush();
    return;
  }
  iprot.readMessageEnd();
  get_range_slices_result result=new get_range_slices_result();
  try {
    result.success=iface_.get_range_slices(args.keyspace,args.column_parent,args.predicate,args.range,args.consistency_level);
  }
 catch (  InvalidRequestException ire) {
    result.ire=ire;
  }
catch (  UnavailableException ue) {
    result.ue=ue;
  }
catch (  TimedOutException te) {
    result.te=te;
  }
catch (  Throwable th) {
    LOGGER.error("Internal error processing get_range_slices",th);
    TApplicationException x=new TApplicationException(TApplicationException.INTERNAL_ERROR,"Internal error processing get_range_slices");
    oprot.writeMessageBegin(new TMessage("get_range_slices",TMessageType.EXCEPTION,seqid));
    x.write(oprot);
    oprot.writeMessageEnd();
    oprot.getTransport().flush();
    return;
  }
  oprot.writeMessageBegin(new TMessage("get_range_slices",TMessageType.REPLY,seqid));
  result.write(oprot);
  oprot.writeMessageEnd();
  oprot.getTransport().flush();
}
