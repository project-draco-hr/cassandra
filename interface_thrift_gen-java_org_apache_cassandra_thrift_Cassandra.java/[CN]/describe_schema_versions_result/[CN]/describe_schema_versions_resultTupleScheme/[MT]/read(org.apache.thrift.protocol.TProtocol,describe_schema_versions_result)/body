{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(2);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TMap _map333=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.LIST,iprot.readI32());
      struct.success=new HashMap<String,List<String>>(2 * _map333.size);
      for (int _i334=0; _i334 < _map333.size; ++_i334) {
        String _key335;
        List<String> _val336;
        _key335=iprot.readString();
{
          org.apache.thrift.protocol.TList _list337=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
          _val336=new ArrayList<String>(_list337.size);
          for (int _i338=0; _i338 < _list337.size; ++_i338) {
            String _elem339;
            _elem339=iprot.readString();
            _val336.add(_elem339);
          }
        }
        struct.success.put(_key335,_val336);
      }
    }
    struct.setSuccessIsSet(true);
  }
  if (incoming.get(1)) {
    struct.ire=new InvalidRequestException();
    struct.ire.read(iprot);
    struct.setIreIsSet(true);
  }
}
