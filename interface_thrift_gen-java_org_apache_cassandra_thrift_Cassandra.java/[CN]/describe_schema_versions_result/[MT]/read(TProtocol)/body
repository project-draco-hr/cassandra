{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map121=iprot.readMapBegin();
          this.success=new HashMap<String,List<String>>(2 * _map121.size);
          for (int _i122=0; _i122 < _map121.size; ++_i122) {
            String _key123;
            List<String> _val124;
            _key123=iprot.readString();
{
              TList _list125=iprot.readListBegin();
              _val124=new ArrayList<String>(_list125.size);
              for (int _i126=0; _i126 < _list125.size; ++_i126) {
                String _elem127;
                _elem127=iprot.readString();
                _val124.add(_elem127);
              }
              iprot.readListEnd();
            }
            this.success.put(_key123,_val124);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == TType.STRUCT) {
    this.ire=new InvalidRequestException();
    this.ire.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
