{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map129=iprot.readMapBegin();
          this.success=new HashMap<String,List<String>>(2 * _map129.size);
          for (int _i130=0; _i130 < _map129.size; ++_i130) {
            String _key131;
            List<String> _val132;
            _key131=iprot.readString();
{
              TList _list133=iprot.readListBegin();
              _val132=new ArrayList<String>(_list133.size);
              for (int _i134=0; _i134 < _list133.size; ++_i134) {
                String _elem135;
                _elem135=iprot.readString();
                _val132.add(_elem135);
              }
              iprot.readListEnd();
            }
            this.success.put(_key131,_val132);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == TType.STRUCT) {
    this.ire=new InvalidRequestException();
    this.ire.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
