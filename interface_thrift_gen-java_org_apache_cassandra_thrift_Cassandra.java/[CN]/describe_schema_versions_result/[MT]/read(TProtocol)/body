{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map115=iprot.readMapBegin();
          this.success=new HashMap<String,List<String>>(2 * _map115.size);
          for (int _i116=0; _i116 < _map115.size; ++_i116) {
            String _key117;
            List<String> _val118;
            _key117=iprot.readString();
{
              TList _list119=iprot.readListBegin();
              _val118=new ArrayList<String>(_list119.size);
              for (int _i120=0; _i120 < _list119.size; ++_i120) {
                String _elem121;
                _elem121=iprot.readString();
                _val118.add(_elem121);
              }
              iprot.readListEnd();
            }
            this.success.put(_key117,_val118);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == TType.STRUCT) {
    this.ire=new InvalidRequestException();
    this.ire.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
