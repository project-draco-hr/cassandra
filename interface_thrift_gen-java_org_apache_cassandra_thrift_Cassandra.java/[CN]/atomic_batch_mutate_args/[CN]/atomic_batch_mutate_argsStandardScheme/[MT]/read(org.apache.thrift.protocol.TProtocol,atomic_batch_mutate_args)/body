{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map344=iprot.readMapBegin();
          struct.mutation_map=new HashMap<ByteBuffer,Map<String,List<Mutation>>>(2 * _map344.size);
          for (int _i345=0; _i345 < _map344.size; ++_i345) {
            ByteBuffer _key346;
            Map<String,List<Mutation>> _val347;
            _key346=iprot.readBinary();
{
              org.apache.thrift.protocol.TMap _map348=iprot.readMapBegin();
              _val347=new HashMap<String,List<Mutation>>(2 * _map348.size);
              for (int _i349=0; _i349 < _map348.size; ++_i349) {
                String _key350;
                List<Mutation> _val351;
                _key350=iprot.readString();
{
                  org.apache.thrift.protocol.TList _list352=iprot.readListBegin();
                  _val351=new ArrayList<Mutation>(_list352.size);
                  for (int _i353=0; _i353 < _list352.size; ++_i353) {
                    Mutation _elem354;
                    _elem354=new Mutation();
                    _elem354.read(iprot);
                    _val351.add(_elem354);
                  }
                  iprot.readListEnd();
                }
                _val347.put(_key350,_val351);
              }
              iprot.readMapEnd();
            }
            struct.mutation_map.put(_key346,_val347);
          }
          iprot.readMapEnd();
        }
        struct.setMutation_mapIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
    struct.consistency_level=ConsistencyLevel.findByValue(iprot.readI32());
    struct.setConsistency_levelIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
