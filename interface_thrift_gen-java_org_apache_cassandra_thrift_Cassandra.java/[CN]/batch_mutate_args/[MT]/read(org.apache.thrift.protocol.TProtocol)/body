{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map89=iprot.readMapBegin();
          this.mutation_map=new HashMap<ByteBuffer,Map<String,List<Mutation>>>(2 * _map89.size);
          for (int _i90=0; _i90 < _map89.size; ++_i90) {
            ByteBuffer _key91;
            Map<String,List<Mutation>> _val92;
            _key91=iprot.readBinary();
{
              org.apache.thrift.protocol.TMap _map93=iprot.readMapBegin();
              _val92=new HashMap<String,List<Mutation>>(2 * _map93.size);
              for (int _i94=0; _i94 < _map93.size; ++_i94) {
                String _key95;
                List<Mutation> _val96;
                _key95=iprot.readString();
{
                  org.apache.thrift.protocol.TList _list97=iprot.readListBegin();
                  _val96=new ArrayList<Mutation>(_list97.size);
                  for (int _i98=0; _i98 < _list97.size; ++_i98) {
                    Mutation _elem99;
                    _elem99=new Mutation();
                    _elem99.read(iprot);
                    _val96.add(_elem99);
                  }
                  iprot.readListEnd();
                }
                _val92.put(_key95,_val96);
              }
              iprot.readMapEnd();
            }
            this.mutation_map.put(_key91,_val92);
          }
          iprot.readMapEnd();
        }
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.I32) {
    this.consistency_level=ConsistencyLevel.findByValue(iprot.readI32());
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
