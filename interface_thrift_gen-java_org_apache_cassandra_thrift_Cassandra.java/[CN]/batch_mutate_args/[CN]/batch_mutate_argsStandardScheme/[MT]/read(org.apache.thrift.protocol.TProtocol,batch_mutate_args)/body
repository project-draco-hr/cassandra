{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map316=iprot.readMapBegin();
          struct.mutation_map=new HashMap<ByteBuffer,Map<String,List<Mutation>>>(2 * _map316.size);
          for (int _i317=0; _i317 < _map316.size; ++_i317) {
            ByteBuffer _key318;
            Map<String,List<Mutation>> _val319;
            _key318=iprot.readBinary();
{
              org.apache.thrift.protocol.TMap _map320=iprot.readMapBegin();
              _val319=new HashMap<String,List<Mutation>>(2 * _map320.size);
              for (int _i321=0; _i321 < _map320.size; ++_i321) {
                String _key322;
                List<Mutation> _val323;
                _key322=iprot.readString();
{
                  org.apache.thrift.protocol.TList _list324=iprot.readListBegin();
                  _val323=new ArrayList<Mutation>(_list324.size);
                  for (int _i325=0; _i325 < _list324.size; ++_i325) {
                    Mutation _elem326;
                    _elem326=new Mutation();
                    _elem326.read(iprot);
                    _val323.add(_elem326);
                  }
                  iprot.readListEnd();
                }
                _val319.put(_key322,_val323);
              }
              iprot.readMapEnd();
            }
            struct.mutation_map.put(_key318,_val319);
          }
          iprot.readMapEnd();
        }
        struct.setMutation_mapIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
    struct.consistency_level=ConsistencyLevel.findByValue(iprot.readI32());
    struct.setConsistency_levelIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
