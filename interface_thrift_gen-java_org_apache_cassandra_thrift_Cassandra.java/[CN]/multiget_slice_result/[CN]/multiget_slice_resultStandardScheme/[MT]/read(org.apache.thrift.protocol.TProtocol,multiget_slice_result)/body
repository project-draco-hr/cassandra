{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 0:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map214=iprot.readMapBegin();
          struct.success=new HashMap<ByteBuffer,List<ColumnOrSuperColumn>>(2 * _map214.size);
          for (int _i215=0; _i215 < _map214.size; ++_i215) {
            ByteBuffer _key216;
            List<ColumnOrSuperColumn> _val217;
            _key216=iprot.readBinary();
{
              org.apache.thrift.protocol.TList _list218=iprot.readListBegin();
              _val217=new ArrayList<ColumnOrSuperColumn>(_list218.size);
              for (int _i219=0; _i219 < _list218.size; ++_i219) {
                ColumnOrSuperColumn _elem220;
                _elem220=new ColumnOrSuperColumn();
                _elem220.read(iprot);
                _val217.add(_elem220);
              }
              iprot.readListEnd();
            }
            struct.success.put(_key216,_val217);
          }
          iprot.readMapEnd();
        }
        struct.setSuccessIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 1:
  if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
    struct.ire=new InvalidRequestException();
    struct.ire.read(iprot);
    struct.setIreIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 2:
if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
struct.ue=new UnavailableException();
struct.ue.read(iprot);
struct.setUeIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
struct.te=new TimedOutException();
struct.te.read(iprot);
struct.setTeIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
