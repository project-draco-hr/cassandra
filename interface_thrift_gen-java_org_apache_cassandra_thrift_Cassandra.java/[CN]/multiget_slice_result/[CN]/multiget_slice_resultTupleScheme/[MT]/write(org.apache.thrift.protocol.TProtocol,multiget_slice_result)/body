{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetSuccess()) {
    optionals.set(0);
  }
  if (struct.isSetIre()) {
    optionals.set(1);
  }
  if (struct.isSetUe()) {
    optionals.set(2);
  }
  if (struct.isSetTe()) {
    optionals.set(3);
  }
  oprot.writeBitSet(optionals,4);
  if (struct.isSetSuccess()) {
{
      oprot.writeI32(struct.success.size());
      for (      Map.Entry<ByteBuffer,List<ColumnOrSuperColumn>> _iter249 : struct.success.entrySet()) {
        oprot.writeBinary(_iter249.getKey());
{
          oprot.writeI32(_iter249.getValue().size());
          for (          ColumnOrSuperColumn _iter250 : _iter249.getValue()) {
            _iter250.write(oprot);
          }
        }
      }
    }
  }
  if (struct.isSetIre()) {
    struct.ire.write(oprot);
  }
  if (struct.isSetUe()) {
    struct.ue.write(oprot);
  }
  if (struct.isSetTe()) {
    struct.te.write(oprot);
  }
}
