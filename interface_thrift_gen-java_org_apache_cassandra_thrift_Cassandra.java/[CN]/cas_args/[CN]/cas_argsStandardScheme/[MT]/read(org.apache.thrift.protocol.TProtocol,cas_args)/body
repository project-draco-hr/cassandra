{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
        struct.key=iprot.readBinary();
        struct.setKeyIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
    struct.column_family=iprot.readString();
    struct.setColumn_familyIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
  org.apache.thrift.protocol.TList _list300=iprot.readListBegin();
  struct.expected=new ArrayList<Column>(_list300.size);
  for (int _i301=0; _i301 < _list300.size; ++_i301) {
    Column _elem302;
    _elem302=new Column();
    _elem302.read(iprot);
    struct.expected.add(_elem302);
  }
  iprot.readListEnd();
}
struct.setExpectedIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list303=iprot.readListBegin();
struct.updates=new ArrayList<Column>(_list303.size);
for (int _i304=0; _i304 < _list303.size; ++_i304) {
Column _elem305;
_elem305=new Column();
_elem305.read(iprot);
struct.updates.add(_elem305);
}
iprot.readListEnd();
}
struct.setUpdatesIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 5:
if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
struct.serial_consistency_level=ConsistencyLevel.findByValue(iprot.readI32());
struct.setSerial_consistency_levelIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 6:
if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
struct.commit_consistency_level=ConsistencyLevel.findByValue(iprot.readI32());
struct.setCommit_consistency_levelIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
