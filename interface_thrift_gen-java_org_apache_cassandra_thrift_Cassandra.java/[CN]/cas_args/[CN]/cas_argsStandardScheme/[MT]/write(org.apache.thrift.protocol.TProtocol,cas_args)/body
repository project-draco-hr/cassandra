{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.key != null) {
    oprot.writeFieldBegin(KEY_FIELD_DESC);
    oprot.writeBinary(struct.key);
    oprot.writeFieldEnd();
  }
  if (struct.column_family != null) {
    oprot.writeFieldBegin(COLUMN_FAMILY_FIELD_DESC);
    oprot.writeString(struct.column_family);
    oprot.writeFieldEnd();
  }
  if (struct.expected != null) {
    oprot.writeFieldBegin(EXPECTED_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.expected.size()));
      for (      Column _iter306 : struct.expected) {
        _iter306.write(oprot);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.updates != null) {
    oprot.writeFieldBegin(UPDATES_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.updates.size()));
      for (      Column _iter307 : struct.updates) {
        _iter307.write(oprot);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.serial_consistency_level != null) {
    oprot.writeFieldBegin(SERIAL_CONSISTENCY_LEVEL_FIELD_DESC);
    oprot.writeI32(struct.serial_consistency_level.getValue());
    oprot.writeFieldEnd();
  }
  if (struct.commit_consistency_level != null) {
    oprot.writeFieldBegin(COMMIT_CONSISTENCY_LEVEL_FIELD_DESC);
    oprot.writeI32(struct.commit_consistency_level.getValue());
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
