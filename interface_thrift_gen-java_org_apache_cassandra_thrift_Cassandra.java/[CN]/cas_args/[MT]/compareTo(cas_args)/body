{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetKey()).compareTo(other.isSetKey());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetKey()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.key,other.key);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumn_family()).compareTo(other.isSetColumn_family());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumn_family()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.column_family,other.column_family);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetExpected()).compareTo(other.isSetExpected());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetExpected()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.expected,other.expected);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetUpdates()).compareTo(other.isSetUpdates());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetUpdates()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.updates,other.updates);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSerial_consistency_level()).compareTo(other.isSetSerial_consistency_level());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSerial_consistency_level()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.serial_consistency_level,other.serial_consistency_level);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCommit_consistency_level()).compareTo(other.isSetCommit_consistency_level());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCommit_consistency_level()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.commit_consistency_level,other.commit_consistency_level);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
