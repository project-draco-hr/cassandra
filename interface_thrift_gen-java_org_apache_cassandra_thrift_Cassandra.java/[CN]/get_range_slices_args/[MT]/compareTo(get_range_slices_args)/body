{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  get_range_slices_args typedOther=(get_range_slices_args)other;
  lastComparison=Boolean.valueOf(isSetKeyspace()).compareTo(isSetKeyspace());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(keyspace,typedOther.keyspace);
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=Boolean.valueOf(isSetColumn_parent()).compareTo(isSetColumn_parent());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(column_parent,typedOther.column_parent);
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=Boolean.valueOf(isSetPredicate()).compareTo(isSetPredicate());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(predicate,typedOther.predicate);
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=Boolean.valueOf(isSetRange()).compareTo(isSetRange());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(range,typedOther.range);
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=Boolean.valueOf(isSetConsistency_level()).compareTo(isSetConsistency_level());
  if (lastComparison != 0) {
    return lastComparison;
  }
  lastComparison=TBaseHelper.compareTo(consistency_level,typedOther.consistency_level);
  if (lastComparison != 0) {
    return lastComparison;
  }
  return 0;
}
