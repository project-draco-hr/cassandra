{
  createTable("CREATE TABLE %s (key int PRIMARY KEY, d double)");
  execute("INSERT INTO %s(key, d) VALUES (?, ?)",1,1d);
  execute("INSERT INTO %s(key, d) VALUES (?, ?)",2,2d);
  execute("INSERT INTO %s(key, d) VALUES (?, ?)",3,3d);
  execute("CREATE FUNCTION " + KS_FOO + ".sin ( input double ) RETURNS double LANGUAGE java AS 'return Double.valueOf(Math.sin(input.doubleValue()));'");
  assertInvalid("CREATE FUNCTION " + KS_FOO + ".sin ( input double ) RETURNS double LANGUAGE java AS 'return Double.valueOf(Math.sin(input.doubleValue()));'");
  execute("CREATE FUNCTION IF NOT EXISTS " + KS_FOO + ".sin ( input double ) RETURNS double LANGUAGE java AS 'return Double.valueOf(Math.sin(input.doubleValue()));'");
  assertRows(execute("SELECT key, " + KS_FOO + ".sin(d) FROM %s"),row(1,Math.sin(1d)),row(2,Math.sin(2d)),row(3,Math.sin(3d)));
  assertInvalid("CREATE OR REPLACE FUNCTION " + KS_FOO + ".sin ( input double ) RETURNS text LANGUAGE java AS 'return Double.valueOf(42d);'");
  execute("CREATE OR REPLACE FUNCTION " + KS_FOO + ".sin ( input double ) RETURNS double LANGUAGE java AS 'return Double.valueOf(42d);'");
  assertRows(execute("SELECT key, " + KS_FOO + ".sin(d) FROM %s"),row(1,42.0),row(2,42.0),row(3,42.0));
  execute("CREATE FUNCTION " + KEYSPACE + ".sin ( input double ) RETURNS double LANGUAGE java AS 'return Double.valueOf(Math.sin(input.doubleValue()));'");
  assertRows(execute("SELECT key, " + KEYSPACE + ".sin(d) FROM %s"),row(1,Math.sin(1d)),row(2,Math.sin(2d)),row(3,Math.sin(3d)));
  execute("DROP FUNCTION " + KS_FOO + ".sin");
  execute("DROP FUNCTION " + KEYSPACE + ".sin");
  assertInvalid("DROP FUNCTION " + KS_FOO + ".sin");
  execute("DROP FUNCTION IF EXISTS " + KS_FOO + ".sin");
  assertInvalid("DROP FUNCTION dateof");
  assertInvalid("DROP FUNCTION uuid");
  assertInvalid("SELECT key, sin(d) FROM %s");
}
