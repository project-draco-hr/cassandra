{
  createTable("CREATE TABLE %s (k text PRIMARY KEY, v int)");
  execute("INSERT INTO %s(k, v) VALUES (?, ?)","f2",1);
  String fOverload=createFunction(KEYSPACE_PER_TEST,"varchar","CREATE FUNCTION %s ( input varchar ) " + "RETURNS text " + "LANGUAGE java "+ "AS 'return \"f1\";'");
  createFunctionOverload(fOverload,"int","CREATE OR REPLACE FUNCTION %s(i int) RETURNS text LANGUAGE java AS 'return \"f2\";'");
  createFunctionOverload(fOverload,"text,text","CREATE OR REPLACE FUNCTION %s(v1 text, v2 text) RETURNS text LANGUAGE java AS 'return \"f3\";'");
  createFunctionOverload(fOverload,"ascii","CREATE OR REPLACE FUNCTION %s(v ascii) RETURNS text LANGUAGE java AS 'return \"f1\";'");
  assertInvalid("CREATE FUNCTION " + fOverload + "(v varchar) RETURNS text LANGUAGE java AS 'return \"f1\";'");
  assertRows(execute("SELECT " + fOverload + "(k), "+ fOverload+ "(v), "+ fOverload+ "(k, k) FROM %s"),row("f1","f2","f3"));
  forcePreparedValues();
  assertInvalid("SELECT v FROM %s WHERE k = " + fOverload + "(?)","foo");
  stopForcingPreparedValues();
  assertEmpty(execute("SELECT v FROM %s WHERE k = " + fOverload + "((text)?)","foo"));
  assertRows(execute("SELECT v FROM %s WHERE k = " + fOverload + "((int)?)",3),row(1));
  assertEmpty(execute("SELECT v FROM %s WHERE k = " + fOverload + "((ascii)?)","foo"));
  assertEmpty(execute("SELECT v FROM %s WHERE k = " + fOverload + "((varchar)?)","foo"));
  assertInvalid("DROP FUNCTION " + fOverload + "(boolean)");
  assertInvalid("DROP FUNCTION " + fOverload + "(bigint)");
  assertInvalid("DROP FUNCTION " + fOverload);
  execute("DROP FUNCTION " + fOverload + "(varchar)");
  assertInvalid("SELECT v FROM %s WHERE k = " + fOverload + "((text)?)","foo");
  execute("DROP FUNCTION " + fOverload + "(text, text)");
  assertInvalid("SELECT v FROM %s WHERE k = " + fOverload + "((text)?,(text)?)","foo","bar");
  execute("DROP FUNCTION " + fOverload + "(ascii)");
  assertInvalid("SELECT v FROM %s WHERE k = " + fOverload + "((ascii)?)","foo");
  assertRows(execute("SELECT v FROM %s WHERE k = " + fOverload + "((int)?)",3),row(1));
  execute("DROP FUNCTION " + fOverload + "");
}
