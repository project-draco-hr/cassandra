{
  createTable("CREATE TABLE %s (k text PRIMARY KEY, v int)");
  execute("INSERT INTO %s(k, v) VALUES (?, ?)","f2",1);
  execute("CREATE FUNCTION overloaded(v varchar) RETURNS text USING 'org.apache.cassandra.cql3.UFTest'");
  execute("CREATE OR REPLACE FUNCTION overloaded(i int) RETURNS text USING 'org.apache.cassandra.cql3.UFTest'");
  execute("CREATE OR REPLACE FUNCTION overloaded(v1 text, v2 text) RETURNS text USING 'org.apache.cassandra.cql3.UFTest'");
  execute("CREATE OR REPLACE FUNCTION overloaded(v ascii) RETURNS text USING 'org.apache.cassandra.cql3.UFTest'");
  assertInvalid("CREATE FUNCTION overloaded(v varchar) RETURNS text USING 'org.apache.cassandra.cql3.UFTest'");
  assertRows(execute("SELECT overloaded(k), overloaded(v), overloaded(k, k) FROM %s"),row("f1","f2","f3"));
  forcePreparedValues();
  assertInvalid("SELECT v FROM %s WHERE k = overloaded(?)","foo");
  stopForcingPreparedValues();
  assertEmpty(execute("SELECT v FROM %s WHERE k = overloaded((text)?)","foo"));
  assertRows(execute("SELECT v FROM %s WHERE k = overloaded((int)?)",3),row(1));
  assertEmpty(execute("SELECT v FROM %s WHERE k = overloaded((ascii)?)","foo"));
  assertEmpty(execute("SELECT v FROM %s WHERE k = overloaded((varchar)?)","foo"));
  assertInvalid("DROP FUNCTION overloaded(boolean)");
  assertInvalid("DROP FUNCTION overloaded(bigint)");
  assertInvalid("DROP FUNCTION overloaded");
  execute("DROP FUNCTION overloaded(varchar)");
  assertInvalid("SELECT v FROM %s WHERE k = overloaded((text)?)","foo");
  execute("DROP FUNCTION overloaded(text, text)");
  assertInvalid("SELECT v FROM %s WHERE k = overloaded((text)?,(text)?)","foo","bar");
  execute("DROP FUNCTION overloaded(ascii)");
  assertInvalid("SELECT v FROM %s WHERE k = overloaded((ascii)?)","foo");
  assertRows(execute("SELECT v FROM %s WHERE k = overloaded((int)?)",3),row(1));
  execute("DROP FUNCTION overloaded");
}
