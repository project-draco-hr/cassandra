{
  String type=KEYSPACE + "." + createType("CREATE TYPE %s (txt text, i int)");
  createTable("CREATE TABLE %s (key int primary key, udt frozen<" + type + ">)");
  String fName=createFunction(KEYSPACE,"frozen<" + type + ">","CREATE FUNCTION %s( udt frozen<" + type + "> ) "+ "RETURNS int "+ "LANGUAGE java "+ "AS $$return "+ "     Integer.valueOf(udt.getInt(\"i\"));$$;");
  FunctionName fNameName=parseFunctionName(fName);
  Assert.assertEquals(1,Functions.find(fNameName).size());
  ResultMessage.Prepared prepared=QueryProcessor.prepare(String.format("SELECT key, %s(udt) FROM %s.%s",fName,KEYSPACE,currentTable()),ClientState.forInternalCalls(),false);
  Assert.assertNotNull(QueryProcessor.instance.getPrepared(prepared.statementId));
  assertInvalid("DROP TYPE " + type);
  execute("DROP TABLE %s");
  assertInvalid("DROP TYPE " + type);
  Assert.assertNull(QueryProcessor.instance.getPrepared(prepared.statementId));
  Assert.assertEquals(1,Functions.find(fNameName).size());
}
