{
  String[] allNodesAndFilter=nodes.split("-");
  String nodesToLoad=null;
  String filterSources=null;
  if (allNodesAndFilter.length == 2) {
    nodesToLoad=allNodesAndFilter[0];
    filterSources=allNodesAndFilter[1];
  }
 else {
    nodesToLoad=allNodesAndFilter[0];
  }
  String[] allNodes=nodesToLoad.split(":");
  EndPoint[] endpoints=new EndPoint[allNodes.length];
  BigInteger[] tokens=new BigInteger[allNodes.length];
  for (int i=0; i < allNodes.length; ++i) {
    endpoints[i]=new EndPoint(allNodes[i].trim(),DatabaseDescriptor.getStoragePort());
    tokens[i]=tokenMetadata_.getToken(endpoints[i]);
  }
  if (filterSources == null)   bootStrapper_.submit(new BootStrapper(endpoints,tokens));
 else {
    String[] allFilters=filterSources.split(":");
    EndPoint[] filters=new EndPoint[allFilters.length];
    for (int i=0; i < allFilters.length; ++i) {
      filters[i]=new EndPoint(allFilters[i].trim(),DatabaseDescriptor.getStoragePort());
    }
    bootStrapper_.submit(new BootStrapper(endpoints,tokens,filters));
  }
}
