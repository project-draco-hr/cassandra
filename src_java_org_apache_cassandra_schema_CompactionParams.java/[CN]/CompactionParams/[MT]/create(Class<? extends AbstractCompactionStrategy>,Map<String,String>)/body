{
  boolean isEnabled=options.containsKey(Option.ENABLED.toString()) ? Boolean.parseBoolean(options.get(Option.ENABLED.toString())) : DEFAULT_ENABLED;
  TombstoneOption tombstoneOption=TombstoneOption.valueOf(options.getOrDefault(Option.PROVIDE_OVERLAPPING_TOMBSTONES.toString(),DEFAULT_PROVIDE_OVERLAPPING_TOMBSTONES.toString()).toUpperCase());
  Map<String,String> allOptions=new HashMap<>(options);
  if (supportsThresholdParams(klass)) {
    allOptions.putIfAbsent(Option.MIN_THRESHOLD.toString(),Integer.toString(DEFAULT_MIN_THRESHOLD));
    allOptions.putIfAbsent(Option.MAX_THRESHOLD.toString(),Integer.toString(DEFAULT_MAX_THRESHOLD));
  }
  return new CompactionParams(klass,allOptions,isEnabled,tombstoneOption);
}
