{
  Table table=Table.open("Keyspace2");
  RowMutation rm;
  rm=new RowMutation("Keyspace2",ByteBufferUtil.bytes("k100"));
  rm.add(new QueryPath("Indexed1",null,ByteBufferUtil.bytes("birthdate")),ByteBufferUtil.bytes(100L),1,1000);
  rm.apply();
  IndexExpression expr=new IndexExpression(ByteBufferUtil.bytes("birthdate"),IndexOperator.EQ,ByteBufferUtil.bytes(100L));
  List<IndexExpression> clause=Arrays.asList(expr);
  IDiskAtomFilter filter=new IdentityQueryFilter();
  Range<RowPosition> range=Util.range("","");
  List<Row> rows=table.getColumnFamilyStore("Indexed1").search(clause,range,100,filter);
  assertEquals(1,rows.size());
  TimeUnit.SECONDS.sleep(1);
  rm=new RowMutation("Keyspace2",ByteBufferUtil.bytes("k100"));
  rm.add(new QueryPath("Indexed1",null,ByteBufferUtil.bytes("birthdate")),ByteBufferUtil.bytes(100L),1,1000);
  rm.apply();
  rows=table.getColumnFamilyStore("Indexed1").search(clause,range,100,filter);
  assertEquals(1,rows.size());
  rm=new RowMutation("Keyspace2",ByteBufferUtil.bytes("k101"));
  rm.add(new QueryPath("Indexed1",null,ByteBufferUtil.bytes("birthdate")),ByteBufferUtil.bytes(101L),1,1000);
  rm.apply();
  expr=new IndexExpression(ByteBufferUtil.bytes("birthdate"),IndexOperator.EQ,ByteBufferUtil.bytes(101L));
  clause=Arrays.asList(expr);
  rows=table.getColumnFamilyStore("Indexed1").search(clause,range,100,filter);
  assertEquals(1,rows.size());
  TimeUnit.SECONDS.sleep(1);
  rm=new RowMutation("Keyspace2",ByteBufferUtil.bytes("k101"));
  rm.add(new QueryPath("Indexed1",null,ByteBufferUtil.bytes("birthdate")),ByteBufferUtil.bytes(102L),1,1000);
  rm.apply();
  rows=table.getColumnFamilyStore("Indexed1").search(clause,range,100,filter);
  assertEquals(0,rows.size());
  expr=new IndexExpression(ByteBufferUtil.bytes("birthdate"),IndexOperator.EQ,ByteBufferUtil.bytes(102L));
  clause=Arrays.asList(expr);
  rows=table.getColumnFamilyStore("Indexed1").search(clause,range,100,filter);
  assertEquals(1,rows.size());
}
