{
  String cfname=CF_STANDARDINT;
  Keyspace keyspace=Keyspace.open(KEYSPACE1);
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(cfname);
  Mutation rm=new Mutation(KEYSPACE1,ByteBufferUtil.bytes("k1"));
  CellName column1=cellname(ByteBuffer.wrap(new byte[]{1}));
  rm.add(cfname,column1,ByteBufferUtil.bytes("data1"),1);
  rm.apply();
  cfs.forceBlockingFlush();
  rm=new Mutation(KEYSPACE1,ByteBufferUtil.bytes("k1"));
  CellName column2=cellname(ByteBuffer.wrap(new byte[]{0,0,1}));
  rm.add(cfname,column2,ByteBufferUtil.bytes("data2"),2);
  rm.apply();
  cfs.forceBlockingFlush();
  SliceByNamesReadCommand cmd=new SliceByNamesReadCommand(KEYSPACE1,ByteBufferUtil.bytes("k1"),cfname,System.currentTimeMillis(),new NamesQueryFilter(FBUtilities.singleton(column1,cfs.getComparator())));
  ColumnFamily cf=cmd.getRow(keyspace).cf;
  assertEquals(1,cf.getColumnCount());
  Cell cell=cf.getColumn(column1);
  assertEquals("data2",ByteBufferUtil.string(cell.value()));
  assertEquals(column2,cell.name());
  cmd=new SliceByNamesReadCommand(KEYSPACE1,ByteBufferUtil.bytes("k1"),cfname,System.currentTimeMillis(),new NamesQueryFilter(FBUtilities.singleton(column2,cfs.getComparator())));
  cf=cmd.getRow(keyspace).cf;
  assertEquals(1,cf.getColumnCount());
  cell=cf.getColumn(column2);
  assertEquals("data2",ByteBufferUtil.string(cell.value()));
  assertEquals(column2,cell.name());
}
