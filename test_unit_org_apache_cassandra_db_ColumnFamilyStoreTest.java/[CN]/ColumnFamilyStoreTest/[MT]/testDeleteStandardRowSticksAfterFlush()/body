{
  String keyspaceName=KEYSPACE1;
  String cfName=CF_STANDARD1;
  Keyspace keyspace=Keyspace.open(keyspaceName);
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(cfName);
  ByteBuffer col=ByteBufferUtil.bytes("val");
  ByteBuffer val=ByteBufferUtil.bytes("val1");
  ColumnDefinition newCol=ColumnDefinition.regularDef(cfs.metadata,ByteBufferUtil.bytes("val2"),AsciiType.instance);
  new RowUpdateBuilder(cfs.metadata,0,"key1").clustering("Column1").add("val","val1").build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,0,"key2").clustering("Column1").add("val","val1").build().applyUnsafe();
  assertRangeCount(cfs,col,val,2);
  cfs.forceBlockingFlush();
  new RowUpdateBuilder(cfs.metadata,1,"key3").clustering("Column1").add("val","val1").build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,1,"key4").clustering("Column1").add("val","val1").build().applyUnsafe();
  assertRangeCount(cfs,col,val,4);
  RowUpdateBuilder.deleteRow(cfs.metadata,5,"key1","Column1").applyUnsafe();
  RowUpdateBuilder.deleteRow(cfs.metadata,5,"key3","Column1").applyUnsafe();
  assertRangeCount(cfs,col,val,2);
  cfs.forceBlockingFlush();
  assertRangeCount(cfs,col,val,2);
  new RowUpdateBuilder(cfs.metadata,2,"key1").clustering("Column1").add("val","val1").build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,2,"key3").clustering("Column1").add("val","val1").build().applyUnsafe();
  assertRangeCount(cfs,col,val,2);
  new RowUpdateBuilder(cfs.metadata,10,"key5").clustering("Column1").add("val","val1").build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,10,"key6").clustering("Column1").add("val","val1").build().applyUnsafe();
  assertRangeCount(cfs,col,val,4);
  cfs.forceBlockingFlush();
  assertRangeCount(cfs,col,val,4);
}
