{
  String keyspaceName="Keyspace1";
  String cfName="Super1";
  ByteBuffer scfName=ByteBufferUtil.bytes("SuperDuper");
  Keyspace keyspace=Keyspace.open(keyspaceName);
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(cfName);
  DecoratedKey key=Util.dk("flush-resurrection");
  putColsSuper(cfs,key,scfName,new Column(getBytes(1L),ByteBufferUtil.bytes("val1"),1),new Column(getBytes(2L),ByteBufferUtil.bytes("val2"),1),new Column(getBytes(3L),ByteBufferUtil.bytes("val3"),1));
  cfs.forceBlockingFlush();
  putColsSuper(cfs,key,scfName,new Column(getBytes(4L),ByteBufferUtil.bytes("val4"),1),new Column(getBytes(5L),ByteBufferUtil.bytes("val5"),1),new Column(getBytes(6L),ByteBufferUtil.bytes("val6"),1));
  final SlicePredicate sp=new SlicePredicate();
  sp.setSlice_range(new SliceRange());
  sp.getSlice_range().setCount(100);
  sp.getSlice_range().setStart(ArrayUtils.EMPTY_BYTE_ARRAY);
  sp.getSlice_range().setFinish(ArrayUtils.EMPTY_BYTE_ARRAY);
  assertRowAndColCount(1,6,false,cfs.getRangeSlice(Util.range("f","g"),null,ThriftValidation.asIFilter(sp,cfs.metadata,scfName),100));
  RowMutation rm=new RowMutation(keyspace.getName(),key.key);
  rm.deleteRange(cfName,SuperColumns.startOf(scfName),SuperColumns.endOf(scfName),2);
  rm.apply();
  assertRowAndColCount(1,0,false,cfs.getRangeSlice(Util.range("f","g"),null,ThriftValidation.asIFilter(sp,cfs.metadata,scfName),100));
  cfs.forceBlockingFlush();
  assertRowAndColCount(1,0,false,cfs.getRangeSlice(Util.range("f","g"),null,ThriftValidation.asIFilter(sp,cfs.metadata,scfName),100));
  putColsSuper(cfs,key,scfName,new Column(getBytes(4L),ByteBufferUtil.bytes("val4"),1L),new Column(getBytes(7L),ByteBufferUtil.bytes("val7"),1L));
  assertRowAndColCount(1,0,false,cfs.getRangeSlice(Util.range("f","g"),null,ThriftValidation.asIFilter(sp,cfs.metadata,scfName),100));
  putColsSuper(cfs,key,scfName,new Column(getBytes(3L),ByteBufferUtil.bytes("val3"),3),new Column(getBytes(8L),ByteBufferUtil.bytes("val8"),3),new Column(getBytes(9L),ByteBufferUtil.bytes("val9"),3));
  assertRowAndColCount(1,3,false,cfs.getRangeSlice(Util.range("f","g"),null,ThriftValidation.asIFilter(sp,cfs.metadata,scfName),100));
}
