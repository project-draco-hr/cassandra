{
  String keySpace="Keyspace2";
  String cfName="Indexed2";
  Table table=Table.open(keySpace);
  ColumnFamilyStore cfs=table.getColumnFamilyStore(cfName);
  cfs.truncate().get();
  ByteBuffer rowKey=ByteBufferUtil.bytes("k1");
  ByteBuffer clusterKey=ByteBufferUtil.bytes("ck1");
  ByteBuffer colName=ByteBufferUtil.bytes("col1");
  CompositeType baseComparator=(CompositeType)cfs.getComparator();
  CompositeType.Builder builder=baseComparator.builder();
  builder.add(clusterKey);
  builder.add(colName);
  ByteBuffer compositeName=builder.build();
  ByteBuffer val1=ByteBufferUtil.bytes("v1");
  ByteBuffer val2=ByteBufferUtil.bytes("v2");
  RowMutation rm;
  rm=new RowMutation(keySpace,rowKey);
  rm.add(new QueryPath(cfName,null,compositeName),val1,0);
  rm.apply();
  IndexExpression expr=new IndexExpression(colName,IndexOperator.EQ,val1);
  List<IndexExpression> clause=Arrays.asList(expr);
  IDiskAtomFilter filter=new IdentityQueryFilter();
  Range<RowPosition> range=Util.range("","");
  List<Row> rows=table.getColumnFamilyStore(cfName).search(clause,range,100,filter);
  assertEquals(1,rows.size());
  table.getColumnFamilyStore(cfName).forceBlockingFlush();
  rows=table.getColumnFamilyStore(cfName).search(clause,range,100,filter);
  assertEquals(1,rows.size());
  rm=new RowMutation(keySpace,rowKey);
  rm.add(new QueryPath(cfName,null,compositeName),val2,1);
  table.apply(rm,true,false);
  rows=table.getColumnFamilyStore(cfName).search(clause,range,100,filter);
  assertEquals(0,rows.size());
  expr=new IndexExpression(colName,IndexOperator.EQ,val2);
  clause=Arrays.asList(expr);
  filter=new IdentityQueryFilter();
  range=Util.range("","");
  rows=table.getColumnFamilyStore(cfName).search(clause,range,100,filter);
  assertEquals(0,rows.size());
  rm=new RowMutation(keySpace,rowKey);
  rm.add(new QueryPath(cfName,null,compositeName),val1,2);
  table.apply(rm,true,false);
  expr=new IndexExpression(colName,IndexOperator.EQ,val1);
  clause=Arrays.asList(expr);
  filter=new IdentityQueryFilter();
  range=Util.range("","");
  rows=table.getColumnFamilyStore(cfName).search(clause,range,100,filter);
  assertEquals(0,rows.size());
}
