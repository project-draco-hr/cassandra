{
  completedTasks=Metrics.newGauge(factory.createMetricName("CompletedTasks"),new Gauge<Long>(){
    public Long value(){
      return service.getCompletedTasks();
    }
  }
);
  pendingTasks=Metrics.newGauge(factory.createMetricName("PendingTasks"),new Gauge<Long>(){
    public Long value(){
      return service.getPendingTasks();
    }
  }
);
  totalCommitLogSize=Metrics.newGauge(factory.createMetricName("TotalCommitLogSize"),new Gauge<Long>(){
    public Long value(){
      return allocator.bytesUsed();
    }
  }
);
  waitingOnSegmentAllocation=Metrics.newTimer(factory.createMetricName("WaitingOnSegmentAllocation"),TimeUnit.MICROSECONDS,TimeUnit.SECONDS);
  waitingOnCommit=Metrics.newTimer(factory.createMetricName("WaitingOnCommit"),TimeUnit.MICROSECONDS,TimeUnit.SECONDS);
}
