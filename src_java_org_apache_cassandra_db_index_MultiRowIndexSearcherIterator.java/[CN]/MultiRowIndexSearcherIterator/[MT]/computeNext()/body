{
  if (currentIndexKeyData == null)   resetState();
  Row result=null;
  while (result == null && curIndexKey != null) {
    if (!currentIndexKeyData.hasNext()) {
      if (columnsRead < rowsPerQuery) {
        logger.debug("Read only {} (< {}) last page through, must be done",columnsRead,rowsPerQuery);
        resetState();
      }
 else {
        if (logger.isDebugEnabled())         logger.debug(String.format("Scanning index %s starting with %s",expressionString(expression),baseCfs.metadata.getKeyValidator().getString(startKey)));
        QueryFilter indexFilter=QueryFilter.getSliceFilter(curIndexKey,new QueryPath(indexCfs.getColumnFamilyName()),lastSeenKey,endKey,false,rowsPerQuery);
        ColumnFamily indexRow=indexCfs.getColumnFamily(indexFilter);
        if (indexRow != null) {
          Collection<IColumn> sortedColumns=indexRow.getSortedColumns();
          columnsRead=sortedColumns.size();
          currentIndexKeyData=sortedColumns.iterator();
          IColumn firstColumn=sortedColumns.iterator().next();
          if (lastSeenKey != startKey && lastSeenKey.equals(firstColumn.name())) {
            currentIndexKeyData.next();
            logger.debug("Skipping {}",baseCfs.metadata.getKeyValidator().getString(firstColumn.name()));
          }
 else           if (range instanceof Range && currentIndexKeyData.hasNext() && firstColumn.name().equals(startKey)) {
            currentIndexKeyData.next();
            logger.debug("Skipping first key as range excludes it {}",baseCfs.metadata.getKeyValidator().getString(firstColumn.name()));
          }
        }
 else {
          columnsRead=0;
          currentIndexKeyData=EMPTY_ITERATOR;
        }
      }
    }
    while (result == null && currentIndexKeyData.hasNext()) {
      IColumn column=currentIndexKeyData.next();
      lastSeenKey=column.name();
      if (column.isMarkedForDelete()) {
        logger.debug("Skipping {}",column);
        continue;
      }
      DecoratedKey dk=baseCfs.partitioner.decorateKey(lastSeenKey);
      if (rightRangeIsNotMinimum && range.right.compareTo(dk) < 0) {
        logger.debug("Reached end of assigned scan range");
        resetState();
      }
 else       if (range.contains(dk)) {
        logger.debug("Returning index hit for {}",dk);
        ColumnFamily data=baseCfs.getColumnFamily(new QueryFilter(dk,path,filter.initialFilter()));
        if (data == null)         data=ColumnFamily.create(baseCfs.metadata);
        result=new Row(dk,data);
      }
 else {
        logger.debug("Skipping entry {} outside of assigned scan range",dk.token);
      }
    }
  }
  return result == null ? endOfData() : result;
}
