{
  try {
    predictor.enableConsistencyPredictionLogging();
    predictor.init();
    for (int i=0; i < 10; ++i) {
      createWriteResponse(10,0,10 * i);
      createReadResponse(0,0,10 * i + 1);
    }
    for (int i=0; i < 10; ++i) {
      createWriteResponse(0,0,10 * i + 2);
    }
    PBSPredictionResult result=predictor.doPrediction(2,1,1,10.0f,1,0.99f);
    assertEquals(1,result.getConsistencyProbability(),0);
    assertEquals(2.5,result.getAverageWriteLatency(),.5);
    result=predictor.doPrediction(2,1,1,0f,1,0.99f);
    assertEquals(.75,result.getConsistencyProbability(),0.05);
    result=predictor.doPrediction(2,1,1,5.0f,5,0.99f);
    assertEquals(.98,result.getConsistencyProbability(),0.05);
    assertEquals(2.5,result.getAverageWriteLatency(),.5);
    for (int i=0; i < 10; ++i) {
      createWriteResponse(20,0,10 * i + 3);
    }
    result=predictor.doPrediction(2,1,1,5.0f,1,0.99f);
    assertEquals(.67,result.getConsistencyProbability(),.05);
    result=predictor.doPrediction(5,1,1,5.0f,1,0.99f);
    assertEquals(.42,result.getConsistencyProbability(),.05);
    assertEquals(1.33,result.getAverageWriteLatency(),.5);
    for (int i=0; i < 10; ++i) {
      createWriteResponse(100,100,10 * i + 4);
      createReadResponse(100,100,10 * i + 5);
    }
    result=predictor.doPrediction(2,1,1,0f,1,0.99f);
    assertEquals(.860,result.getConsistencyProbability(),.05);
    assertEquals(26.5,result.getAverageWriteLatency(),1);
    assertEquals(100.33,result.getAverageReadLatency(),4);
    result=predictor.doPrediction(2,2,1,0f,1,0.99f);
    assertEquals(1,result.getConsistencyProbability(),0);
  }
 catch (  Exception e) {
    fail(e.getMessage());
  }
}
