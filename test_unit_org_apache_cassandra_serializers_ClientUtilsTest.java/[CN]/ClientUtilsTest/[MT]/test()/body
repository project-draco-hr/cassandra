{
  AsciiSerializer.instance.serialize(AsciiSerializer.instance.deserialize("string"));
  BooleanSerializer.instance.serialize(BooleanSerializer.instance.deserialize(true));
  BytesSerializer.instance.serialize(BytesSerializer.instance.deserialize(ByteBuffer.wrap("string".getBytes())));
  Date date=new Date(System.currentTimeMillis());
  ByteBuffer dateBB=TimestampSerializer.instance.deserialize(date);
  TimestampSerializer.instance.serialize(dateBB);
  assert(TimestampSerializer.instance.toString(date).equals(TimestampSerializer.instance.getString(dateBB)));
  DecimalSerializer.instance.serialize(DecimalSerializer.instance.deserialize(new BigDecimal(1)));
  DoubleSerializer.instance.serialize(DoubleSerializer.instance.deserialize(new Double(1.0d)));
  FloatSerializer.instance.serialize(FloatSerializer.instance.deserialize(new Float(1.0f)));
  Int32Serializer.instance.serialize(Int32Serializer.instance.deserialize(1));
  IntegerSerializer.instance.serialize(IntegerSerializer.instance.deserialize(new BigInteger("1")));
  LongSerializer.instance.serialize(LongSerializer.instance.deserialize(1L));
  UTF8Serializer.instance.serialize(UTF8Serializer.instance.deserialize("string"));
  UUID uuid=UUIDGen.getTimeUUID();
  UUIDSerializer.instance.serialize(UUIDSerializer.instance.deserialize(uuid));
  try {
    UUIDSerializer.instance.getString(ByteBuffer.wrap("notauuid".getBytes()));
  }
 catch (  MarshalException me) {
  }
}
