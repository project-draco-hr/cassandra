{
  createTable("CREATE TABLE %s (account text, id int, categories map<text,text>, PRIMARY KEY (account, id))");
  createIndex("CREATE INDEX ON %s(categories)");
  execute("INSERT INTO %s (account, id , categories) VALUES (?, ?, ?)","test",5,map("lmn","foo"));
  assertEmpty(execute("SELECT * FROM %s WHERE account = ? AND categories CONTAINS ?","xyz","foo"));
  assertRows(execute("SELECT * FROM %s WHERE account = ? AND categories CONTAINS ?","test","foo"),row("test",5,map("lmn","foo")));
  assertRows(execute("SELECT * FROM %s WHERE categories CONTAINS ?","foo"),row("test",5,map("lmn","foo")));
  assertRows(execute("SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ?","test",5,"foo"),row("test",5,map("lmn","foo")));
  assertInvalidMessage("Unsupported null value for column categories","SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ?","test",5,null);
  assertInvalidMessage("Unsupported unset value for column categories","SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ?","test",5,unset());
  assertInvalidMessage(StatementRestrictions.REQUIRES_ALLOW_FILTERING_MESSAGE,"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ? AND categories CONTAINS ?","test",5,"foo","notPresent");
  assertEmpty(execute("SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ? AND categories CONTAINS ? ALLOW FILTERING","test",5,"foo","notPresent"));
}
