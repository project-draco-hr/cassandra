{
  createTable("CREATE TABLE %s ( k text, c int, v int, PRIMARY KEY (k, c) ) WITH COMPACT STORAGE AND CLUSTERING ORDER BY (c DESC)");
  for (int i=0; i < 10; i++)   execute("INSERT INTO %s (k, c, v) VALUES ('foo', ?, ?)",i,i);
  assertRows(execute("SELECT c FROM %s WHERE c > 2 AND c < 6 AND k = 'foo'"),row(5),row(4),row(3));
  assertRows(execute("SELECT c FROM %s WHERE c >= 2 AND c <= 6 AND k = 'foo'"),row(6),row(5),row(4),row(3),row(2));
  assertRows(execute("SELECT c FROM %s WHERE c > 2 AND c < 6 AND k = 'foo' ORDER BY c ASC"),row(3),row(4),row(5));
  assertRows(execute("SELECT c FROM %s WHERE c >= 2 AND c <= 6 AND k = 'foo' ORDER BY c ASC"),row(2),row(3),row(4),row(5),row(6));
  assertRows(execute("SELECT c FROM %s WHERE c > 2 AND c < 6 AND k = 'foo' ORDER BY c DESC"),row(5),row(4),row(3));
  assertRows(execute("SELECT c FROM %s WHERE c >= 2 AND c <= 6 AND k = 'foo' ORDER BY c DESC"),row(6),row(5),row(4),row(3),row(2));
  createTable("CREATE TABLE %s ( k text, c int, v int, PRIMARY KEY (k, c) ) WITH COMPACT STORAGE");
  for (int i=0; i < 10; i++)   execute("INSERT INTO %s(k, c, v) VALUES ('foo', ?, ?)",i,i);
  assertRows(execute("SELECT c FROM %s WHERE c > 2 AND c < 6 AND k = 'foo'"),row(3),row(4),row(5));
  assertRows(execute("SELECT c FROM %s WHERE c >= 2 AND c <= 6 AND k = 'foo'"),row(2),row(3),row(4),row(5),row(6));
  assertRows(execute("SELECT c FROM %s WHERE c > 2 AND c < 6 AND k = 'foo' ORDER BY c ASC"),row(3),row(4),row(5));
  assertRows(execute("SELECT c FROM %s WHERE c >= 2 AND c <= 6 AND k = 'foo' ORDER BY c ASC"),row(2),row(3),row(4),row(5),row(6));
  assertRows(execute("SELECT c FROM %s WHERE c > 2 AND c < 6 AND k = 'foo' ORDER BY c DESC"),row(5),row(4),row(3));
  assertRows(execute("SELECT c FROM %s WHERE c >= 2 AND c <= 6 AND k = 'foo' ORDER BY c DESC"),row(6),row(5),row(4),row(3),row(2));
}
