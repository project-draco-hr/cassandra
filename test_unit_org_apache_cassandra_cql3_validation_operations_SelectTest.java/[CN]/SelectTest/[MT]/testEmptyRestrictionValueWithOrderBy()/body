{
  for (  String options : new String[]{""," WITH COMPACT STORAGE"," WITH CLUSTERING ORDER BY (c DESC)"," WITH COMPACT STORAGE AND CLUSTERING ORDER BY (c DESC)"}) {
    String orderingClause=options.contains("ORDER") ? "" : "ORDER BY c DESC";
    createTable("CREATE TABLE %s (pk blob, c blob, v blob, PRIMARY KEY ((pk), c))" + options);
    execute("INSERT INTO %s (pk, c, v) VALUES (?, ?, ?)",bytes("foo123"),bytes("1"),bytes("1"));
    execute("INSERT INTO %s (pk, c, v) VALUES (?, ?, ?)",bytes("foo123"),bytes("2"),bytes("2"));
    for (    boolean flush : new boolean[]{false,true}) {
      if (flush)       flush();
      assertRows(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c > textAsBlob('')" + orderingClause),row(bytes("foo123"),bytes("2"),bytes("2")),row(bytes("foo123"),bytes("1"),bytes("1")));
      assertRows(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c >= textAsBlob('')" + orderingClause),row(bytes("foo123"),bytes("2"),bytes("2")),row(bytes("foo123"),bytes("1"),bytes("1")));
      assertEmpty(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c < textAsBlob('')" + orderingClause));
      assertEmpty(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c <= textAsBlob('')" + orderingClause));
    }
    if (options.contains("COMPACT")) {
      assertInvalidMessage("Missing PRIMARY KEY part c","INSERT INTO %s (pk, c, v) VALUES (?, ?, ?)",bytes("foo123"),EMPTY_BYTE_BUFFER,bytes("4"));
    }
 else {
      execute("INSERT INTO %s (pk, c, v) VALUES (?, ?, ?)",bytes("foo123"),EMPTY_BYTE_BUFFER,bytes("4"));
      for (      boolean flush : new boolean[]{false,true}) {
        if (flush)         flush();
        assertRows(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c IN (textAsBlob(''), textAsBlob('1'))" + orderingClause),row(bytes("foo123"),bytes("1"),bytes("1")),row(bytes("foo123"),EMPTY_BYTE_BUFFER,bytes("4")));
        assertRows(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c > textAsBlob('')" + orderingClause),row(bytes("foo123"),bytes("2"),bytes("2")),row(bytes("foo123"),bytes("1"),bytes("1")));
        assertRows(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c >= textAsBlob('')" + orderingClause),row(bytes("foo123"),bytes("2"),bytes("2")),row(bytes("foo123"),bytes("1"),bytes("1")),row(bytes("foo123"),EMPTY_BYTE_BUFFER,bytes("4")));
        assertEmpty(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c < textAsBlob('')" + orderingClause));
        assertRows(execute("SELECT * FROM %s WHERE pk = textAsBlob('foo123') AND c <= textAsBlob('')" + orderingClause),row(bytes("foo123"),EMPTY_BYTE_BUFFER,bytes("4")));
      }
    }
  }
}
