{
  createTable("CREATE TABLE %s (id int PRIMARY KEY, name text)");
  for (int id=0; id < 5; id++)   execute("INSERT INTO %s (id, name) VALUES (?, ?) USING TTL 10 AND TIMESTAMP 0",id,"name" + id);
  UntypedResultSet rs=execute("SELECT count(*) AS user_count FROM %s");
  assertEquals("user_count",rs.metadata().get(0).name.toString());
  assertEquals(5L,rs.one().getLong(rs.metadata().get(0).name.toString()));
  rs=execute("SELECT name AS user_name FROM %s WHERE id = 0");
  assertEquals("user_name",rs.metadata().get(0).name.toString());
  assertEquals("name0",rs.one().getString(rs.metadata().get(0).name.toString()));
  rs=execute("SELECT writeTime(name) AS name_writetime FROM %s WHERE id = 0");
  assertEquals("name_writetime",rs.metadata().get(0).name.toString());
  assertEquals(0,rs.one().getInt(rs.metadata().get(0).name.toString()));
  rs=execute("SELECT ttl(name) AS name_ttl FROM %s WHERE id = 0");
  assertEquals("name_ttl",rs.metadata().get(0).name.toString());
  int ttl=rs.one().getInt(rs.metadata().get(0).name.toString());
  assertTrue(ttl == 9 || ttl == 10);
  rs=execute("SELECT intAsBlob(id) AS id_blob FROM %s WHERE id = 0");
  assertEquals("id_blob",rs.metadata().get(0).name.toString());
  assertEquals(ByteBuffer.wrap(new byte[4]),rs.one().getBlob(rs.metadata().get(0).name.toString()));
  assertInvalidMessage("Aliases aren't allowed in the where clause","SELECT id AS user_id, name AS user_name FROM %s WHERE user_id = 0");
  assertInvalidMessage("Aliases are not allowed in order by clause","SELECT id AS user_id, name AS user_name FROM %s WHERE id IN (0) ORDER BY user_name");
}
