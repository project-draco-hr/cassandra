{
  if (exhausted)   return null;
  SliceQueryFilter sliceFilter=new SliceQueryFilter(slices,false,DEFAULT_PAGE_SIZE);
  QueryFilter filter=new QueryFilter(key,cfs.name,sliceFilter);
  ColumnFamily cf=cfs.getColumnFamily(filter);
  if (cf == null || sliceFilter.getLiveCount(cf) < DEFAULT_PAGE_SIZE) {
    exhausted=true;
  }
 else {
    Iterator<Column> iter=cf.getReverseSortedColumns().iterator();
    Column lastColumn=iter.next();
    while (lastColumn.isMarkedForDelete())     lastColumn=iter.next();
    int i=0;
    for (; i < slices.length; ++i) {
      ColumnSlice current=slices[i];
      if (cfs.getComparator().compare(lastColumn.name(),current.finish) <= 0)       break;
    }
    if (i >= slices.length)     exhausted=true;
 else     slices=Arrays.copyOfRange(slices,i,slices.length);
  }
  return cf == null ? ColumnFamily.create(cfs.metadata) : cf;
}
