{
  this.baseCfs=baseCfs;
  this.viewPrimaryKey=viewPrimaryKey;
  this.basePartitionKey=key;
  this.startRow=row;
  this.startIsNew=isNew;
  this.nowInSec=nowInSec;
  LivenessInfo liveness=row.primaryKeyLivenessInfo();
  this.viewClusteringLocalDeletionTime=minValueIfSet(viewClusteringLocalDeletionTime,row.deletion().localDeletionTime(),NO_DELETION_TIME);
  this.viewClusteringTimestamp=minValueIfSet(viewClusteringTimestamp,liveness.timestamp(),NO_TIMESTAMP);
  this.viewClusteringTtl=minValueIfSet(viewClusteringTtl,liveness.ttl(),NO_TTL);
  List<ColumnDefinition> clusteringDefs=baseCfs.metadata.clusteringColumns();
  clusteringColumns=new HashMap<>();
  for (int i=0; i < clusteringDefs.size(); i++) {
    ColumnDefinition cdef=clusteringDefs.get(i);
    clusteringColumns.put(cdef.name,row.clustering().get(i));
    addColumnValue(cdef.name,null,NO_TIMESTAMP,NO_TTL,NO_DELETION_TIME,row.clustering().get(i),isNew);
  }
}
