{
  CFMetaData metadata=makeCfMetaData("ks1","cf1",TriggerDefinition.create("test",SameKeySameCfTrigger.class.getName()));
  PartitionUpdate cf1=makeCf(metadata,"k1","k1v1",null);
  PartitionUpdate cf2=makeCf(metadata,"k2","k2v1",null);
  Mutation rm1=new Mutation("ks1",cf1.partitionKey()).add(cf1);
  Mutation rm2=new Mutation("ks1",cf2.partitionKey()).add(cf2);
  List<? extends IMutation> tmutations=new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1,rm2)));
  assertEquals(2,tmutations.size());
  Collections.sort(tmutations,new RmComparator());
  List<PartitionUpdate> mutatedCFs=new ArrayList<>(tmutations.get(0).getPartitionUpdates());
  assertEquals(1,mutatedCFs.size());
  Row row=mutatedCFs.get(0).iterator().next();
  assertEquals(bytes("k1v1"),row.getCell(metadata.getColumnDefinition(bytes("c1"))).value());
  assertEquals(bytes("trigger"),row.getCell(metadata.getColumnDefinition(bytes("c2"))).value());
  mutatedCFs=new ArrayList<>(tmutations.get(1).getPartitionUpdates());
  assertEquals(1,mutatedCFs.size());
  row=mutatedCFs.get(0).iterator().next();
  assertEquals(bytes("k2v1"),row.getCell(metadata.getColumnDefinition(bytes("c1"))).value());
  assertEquals(bytes("trigger"),row.getCell(metadata.getColumnDefinition(bytes("c2"))).value());
}
