{
  createTable("CREATE TABLE %s (" + "k int, " + "c int, "+ "val text, "+ "PRIMARY KEY(k,c))");
  execute("USE " + keyspace());
  executeNet(protocolVersion,"USE " + keyspace());
  createView("mv_tstest","CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)");
  for (int i=0; i < 100; i++)   updateMV("INSERT into %s (k,c,val)VALUES(?,?,?)",0,i % 2,"baz");
  Keyspace.open(keyspace()).getColumnFamilyStore(currentTable()).forceBlockingFlush();
  Assert.assertEquals(2,execute("select * from %s").size());
  Assert.assertEquals(2,execute("select * from mv_tstest").size());
  assertRows(execute("SELECT val from %s where k = 0 and c = 0"),row("baz"));
  assertRows(execute("SELECT c from mv_tstest where k = 0 and val = ?","baz"),row(0),row(1));
  updateMV("UPDATE %s USING TIMESTAMP 100 SET val = ? where k = ? AND c = ?","bar",0,0);
  assertRows(execute("SELECT val from %s where k = 0 and c = 0"),row("baz"));
  assertRows(execute("SELECT c from mv_tstest where k = 0 and val = ?","baz"),row(0),row(1));
  assertRows(execute("SELECT c from mv_tstest where k = 0 and val = ?","bar"));
  updateMV("UPDATE %s SET val = ? where k = ? AND c = ?","bar",0,0);
  assertRows(execute("SELECT val from %s where k = 0 and c = 0"),row("bar"));
  assertRows(execute("SELECT c from mv_tstest where k = 0 and val = ?","bar"),row(0));
  assertRows(execute("SELECT c from mv_tstest where k = 0 and val = ?","baz"),row(1));
}
