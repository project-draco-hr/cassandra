{
  super(metadata,in,helper);
  this.header=header;
  int clusteringSize=metadata.comparator.size();
  Columns regularColumns=header == null ? metadata.partitionColumns().regulars : header.columns().regulars;
  this.row=new ReusableRow(clusteringSize,regularColumns,true,metadata.isCounter());
  this.markerBuilder=new RangeTombstoneMarker.Builder(clusteringSize);
}
