{
  for (  GarbageCollectorMXBean gc : beans) {
    Long previousTotal=gctimes.get(gc.getName());
    Long total=gc.getCollectionTime();
    if (previousTotal == null)     previousTotal=0L;
    if (previousTotal.equals(total))     continue;
    gctimes.put(gc.getName(),total);
    Long duration=total - previousTotal;
    Long previousCount=gccounts.get(gc.getName());
    Long count=gc.getCollectionCount();
    if (previousCount == null)     previousCount=0L;
    if (count.equals(previousCount))     continue;
    gccounts.put(gc.getName(),count);
    MemoryUsage mu=membean.getHeapMemoryUsage();
    long memoryUsed=mu.getUsed();
    long memoryMax=mu.getMax();
    String st=String.format("GC for %s: %s ms for %s collections, %s used; max is %s",gc.getName(),duration,count - previousCount,memoryUsed,memoryMax);
    long durationPerCollection=duration / (count - previousCount);
    if (durationPerCollection > MIN_DURATION)     logger.info(st);
 else     if (logger.isDebugEnabled())     logger.debug(st);
    if (durationPerCollection > MIN_DURATION_TPSTATS)     StatusLogger.log();
    if (gc.getName().equals("ConcurrentMarkSweep")) {
      SSTableDeletingTask.rescheduleFailedTasks();
      double usage=(double)memoryUsed / memoryMax;
      if (memoryUsed > DatabaseDescriptor.getReduceCacheSizesAt() * memoryMax && !cacheSizesReduced) {
        cacheSizesReduced=true;
        logger.warn("Heap is " + usage + " full.  You may need to reduce memtable and/or cache sizes.  Cassandra is now reducing cache sizes to free up memory.  Adjust reduce_cache_sizes_at threshold in cassandra.yaml if you don't want Cassandra to do this automatically");
        StorageService.instance.reduceCacheSizes();
      }
      if (memoryUsed > DatabaseDescriptor.getFlushLargestMemtablesAt() * memoryMax) {
        logger.warn("Heap is " + usage + " full.  You may need to reduce memtable and/or cache sizes.  Cassandra will now flush up to the two largest memtables to free up memory.  Adjust flush_largest_memtables_at threshold in cassandra.yaml if you don't want Cassandra to do this automatically");
        StorageService.instance.flushLargestMemtables();
      }
    }
  }
}
