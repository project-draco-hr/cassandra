{
  StorageService ss=StorageService.instance;
  VersionedValue.VersionedValueFactory valueFactory=new VersionedValue.VersionedValueFactory(partitioner);
  ArrayList<Token> endpointTokens=new ArrayList<Token>();
  List<InetAddress> hosts=new ArrayList<InetAddress>();
  Util.createInitialRing(ss,partitioner,endpointTokens,new ArrayList<Token>(),hosts,new ArrayList<UUID>(),2);
  InetAddress toRemove=hosts.get(1);
  SystemTable.updatePeerInfo(toRemove,"data_center","'dc42'");
  SystemTable.updatePeerInfo(toRemove,"rack","'rack42'");
  assertEquals("rack42",SystemTable.loadDcRackInfo().get(toRemove).get("rack"));
  Gossiper.instance.injectApplicationState(toRemove,ApplicationState.STATUS,valueFactory.left(Collections.singleton(endpointTokens.get(1)),Gossiper.computeExpireTime()));
  assertTrue(Gossiper.instance.isDeadState(Gossiper.instance.getEndpointStateForEndpoint(hosts.get(1))));
  ss.onChange(hosts.get(1),ApplicationState.RACK,valueFactory.rack("rack9999"));
  assertEquals("rack42",SystemTable.loadDcRackInfo().get(toRemove).get("rack"));
}
