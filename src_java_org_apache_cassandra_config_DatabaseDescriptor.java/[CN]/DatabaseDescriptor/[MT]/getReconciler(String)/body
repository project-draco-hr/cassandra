{
  if (reconcileWith == null || "".equals(reconcileWith)) {
    return null;
  }
  Class<? extends AbstractReconciler> reconcilerClass;
{
    String className=reconcileWith.contains(".") ? reconcileWith : TimestampReconciler.class.getPackage().getName() + "." + reconcileWith;
    try {
      reconcilerClass=(Class<? extends AbstractReconciler>)Class.forName(className);
    }
 catch (    ClassNotFoundException e) {
      throw new ConfigurationException("Unable to load class " + className);
    }
  }
  try {
    return reconcilerClass.getConstructor().newInstance();
  }
 catch (  InstantiationException e) {
    ConfigurationException ex=new ConfigurationException(e.getMessage());
    ex.initCause(e);
    throw ex;
  }
catch (  IllegalAccessException e) {
    ConfigurationException ex=new ConfigurationException(e.getMessage());
    ex.initCause(e);
    throw ex;
  }
catch (  InvocationTargetException e) {
    ConfigurationException ex=new ConfigurationException(e.getMessage());
    ex.initCause(e);
    throw ex;
  }
catch (  NoSuchMethodException e) {
    ConfigurationException ex=new ConfigurationException(e.getMessage());
    ex.initCause(e);
    throw ex;
  }
}
