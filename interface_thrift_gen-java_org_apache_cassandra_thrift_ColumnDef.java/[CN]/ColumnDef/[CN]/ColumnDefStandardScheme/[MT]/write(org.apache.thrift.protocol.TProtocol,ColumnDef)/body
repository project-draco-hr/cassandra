{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.name != null) {
    oprot.writeFieldBegin(NAME_FIELD_DESC);
    oprot.writeBinary(struct.name);
    oprot.writeFieldEnd();
  }
  if (struct.validation_class != null) {
    oprot.writeFieldBegin(VALIDATION_CLASS_FIELD_DESC);
    oprot.writeString(struct.validation_class);
    oprot.writeFieldEnd();
  }
  if (struct.index_type != null) {
    if (struct.isSetIndex_type()) {
      oprot.writeFieldBegin(INDEX_TYPE_FIELD_DESC);
      oprot.writeI32(struct.index_type.getValue());
      oprot.writeFieldEnd();
    }
  }
  if (struct.index_name != null) {
    if (struct.isSetIndex_name()) {
      oprot.writeFieldBegin(INDEX_NAME_FIELD_DESC);
      oprot.writeString(struct.index_name);
      oprot.writeFieldEnd();
    }
  }
  if (struct.index_options != null) {
    if (struct.isSetIndex_options()) {
      oprot.writeFieldBegin(INDEX_OPTIONS_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.index_options.size()));
        for (        Map.Entry<String,String> _iter86 : struct.index_options.entrySet()) {
          oprot.writeString(_iter86.getKey());
          oprot.writeString(_iter86.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
