@classmethod
def scrub_sub(cls, sub, flags):
    scrubbedsub = []
    seqtypes = (type(()), type([]))
    for (op, arg) in sub.data:
        if (type(arg) in seqtypes):
            arg = [(cls.scrub_sub(a, flags) if isinstance(a, re.sre_parse.SubPattern) else a) for a in arg]
        if (op in (BRANCH, SUBPATTERN)):
            arg = ([None] + arg[1:])
        if (op in (GROUPREF, GROUPREF_IGNORE, GROUPREF_EXISTS)):
            raise ValueError('Group references not allowed in SaferScanner lexicon')
        scrubbedsub.append((op, arg))
    if sub.pattern.groupdict:
        raise ValueError('Named captures not allowed in SaferScanner lexicon')
    if (sub.pattern.flags ^ flags):
        raise ValueError(('RE flag setting not allowed in SaferScanner lexicon (%s)' % (bin(sub.pattern.flags),)))
    return re.sre_parse.SubPattern(sub.pattern, scrubbedsub)
