{
  Long mi=bin.get(p);
  if (mi != null) {
    bin.put(p,mi + m);
  }
 else {
    bin.put(p,m);
    while (bin.size() > maxBinSize) {
      Iterator<Double> keys=bin.keySet().iterator();
      double p1=keys.next();
      double p2=keys.next();
      double smallestDiff=p2 - p1;
      double q1=p1, q2=p2;
      while (keys.hasNext()) {
        p1=p2;
        p2=keys.next();
        double diff=p2 - p1;
        if (diff < smallestDiff) {
          smallestDiff=diff;
          q1=p1;
          q2=p2;
        }
      }
      long k1=bin.remove(q1);
      long k2=bin.remove(q2);
      bin.put((q1 * k1 + q2 * k2) / (k1 + k2),k1 + k2);
    }
  }
}
