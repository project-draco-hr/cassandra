{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(6);
  if (incoming.get(0)) {
    struct.key=iprot.readBinary();
    struct.setKeyIsSet(true);
  }
  if (incoming.get(1)) {
    struct.column_parent=new ColumnParent();
    struct.column_parent.read(iprot);
    struct.setColumn_parentIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TList _list221=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.column_slices=new ArrayList<ColumnSlice>(_list221.size);
      for (int _i222=0; _i222 < _list221.size; ++_i222) {
        ColumnSlice _elem223;
        _elem223=new ColumnSlice();
        _elem223.read(iprot);
        struct.column_slices.add(_elem223);
      }
    }
    struct.setColumn_slicesIsSet(true);
  }
  if (incoming.get(3)) {
    struct.reversed=iprot.readBool();
    struct.setReversedIsSet(true);
  }
  if (incoming.get(4)) {
    struct.count=iprot.readI32();
    struct.setCountIsSet(true);
  }
  if (incoming.get(5)) {
    struct.consistency_level=ConsistencyLevel.findByValue(iprot.readI32());
    struct.setConsistency_levelIsSet(true);
  }
}
