{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetKey()) {
    optionals.set(0);
  }
  if (struct.isSetColumn_parent()) {
    optionals.set(1);
  }
  if (struct.isSetColumn_slices()) {
    optionals.set(2);
  }
  if (struct.isSetReversed()) {
    optionals.set(3);
  }
  if (struct.isSetCount()) {
    optionals.set(4);
  }
  if (struct.isSetConsistency_level()) {
    optionals.set(5);
  }
  oprot.writeBitSet(optionals,6);
  if (struct.isSetKey()) {
    oprot.writeBinary(struct.key);
  }
  if (struct.isSetColumn_parent()) {
    struct.column_parent.write(oprot);
  }
  if (struct.isSetColumn_slices()) {
{
      oprot.writeI32(struct.column_slices.size());
      for (      ColumnSlice _iter220 : struct.column_slices) {
        _iter220.write(oprot);
      }
    }
  }
  if (struct.isSetReversed()) {
    oprot.writeBool(struct.reversed);
  }
  if (struct.isSetCount()) {
    oprot.writeI32(struct.count);
  }
  if (struct.isSetConsistency_level()) {
    oprot.writeI32(struct.consistency_level.getValue());
  }
}
