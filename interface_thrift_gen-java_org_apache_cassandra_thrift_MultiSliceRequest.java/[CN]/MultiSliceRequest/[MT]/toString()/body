{
  StringBuilder sb=new StringBuilder("MultiSliceRequest(");
  boolean first=true;
  if (isSetKey()) {
    sb.append("key:");
    if (this.key == null) {
      sb.append("null");
    }
 else {
      org.apache.thrift.TBaseHelper.toString(this.key,sb);
    }
    first=false;
  }
  if (isSetColumn_parent()) {
    if (!first)     sb.append(", ");
    sb.append("column_parent:");
    if (this.column_parent == null) {
      sb.append("null");
    }
 else {
      sb.append(this.column_parent);
    }
    first=false;
  }
  if (isSetColumn_slices()) {
    if (!first)     sb.append(", ");
    sb.append("column_slices:");
    if (this.column_slices == null) {
      sb.append("null");
    }
 else {
      sb.append(this.column_slices);
    }
    first=false;
  }
  if (isSetReversed()) {
    if (!first)     sb.append(", ");
    sb.append("reversed:");
    sb.append(this.reversed);
    first=false;
  }
  if (isSetCount()) {
    if (!first)     sb.append(", ");
    sb.append("count:");
    sb.append(this.count);
    first=false;
  }
  if (isSetConsistency_level()) {
    if (!first)     sb.append(", ");
    sb.append("consistency_level:");
    if (this.consistency_level == null) {
      sb.append("null");
    }
 else {
      sb.append(this.consistency_level);
    }
    first=false;
  }
  sb.append(")");
  return sb.toString();
}
