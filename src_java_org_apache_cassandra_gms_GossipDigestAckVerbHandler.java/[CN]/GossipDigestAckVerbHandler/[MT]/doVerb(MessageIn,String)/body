{
  InetAddress from=message.getFrom();
  if (logger.isTraceEnabled())   logger.trace("Received a GossipDigestAckMessage from {}",from);
  if (!Gossiper.instance.isEnabled()) {
    if (logger.isTraceEnabled())     logger.trace("Ignoring GossipDigestAckMessage because gossip is disabled");
    return;
  }
  byte[] bytes=message.getMessageBody();
  DataInputStream dis=new DataInputStream(new FastByteArrayInputStream(bytes));
  try {
    GossipDigestAckMessage gDigestAckMessage=GossipDigestAckMessage.serializer().deserialize(dis,message.getVersion());
    List<GossipDigest> gDigestList=gDigestAckMessage.getGossipDigestList();
    Map<InetAddress,EndpointState> epStateMap=gDigestAckMessage.getEndpointStateMap();
    if (epStateMap.size() > 0) {
      Gossiper.instance.notifyFailureDetector(epStateMap);
      Gossiper.instance.applyStateLocally(epStateMap);
    }
    Map<InetAddress,EndpointState> deltaEpStateMap=new HashMap<InetAddress,EndpointState>();
    for (    GossipDigest gDigest : gDigestList) {
      InetAddress addr=gDigest.getEndpoint();
      EndpointState localEpStatePtr=Gossiper.instance.getStateForVersionBiggerThan(addr,gDigest.getMaxVersion());
      if (localEpStatePtr != null)       deltaEpStateMap.put(addr,localEpStatePtr);
    }
    MessageOut<GossipDigestAck2Message> gDigestAck2Message=new MessageOut<GossipDigestAck2Message>(StorageService.Verb.GOSSIP_DIGEST_ACK2,new GossipDigestAck2Message(deltaEpStateMap),GossipDigestAck2Message.serializer());
    if (logger.isTraceEnabled())     logger.trace("Sending a GossipDigestAck2Message to {}",from);
    MessagingService.instance().sendOneWay(gDigestAck2Message,from);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
