{
  InetAddress from=message.from;
  if (logger.isTraceEnabled())   logger.trace("Received a GossipDigestAckMessage from {}",from);
  if (!Gossiper.instance.isEnabled()) {
    if (logger.isTraceEnabled())     logger.trace("Ignoring GossipDigestAckMessage because gossip is disabled");
    return;
  }
  GossipDigestAck gDigestAckMessage=message.payload;
  List<GossipDigest> gDigestList=gDigestAckMessage.getGossipDigestList();
  Map<InetAddress,EndpointState> epStateMap=gDigestAckMessage.getEndpointStateMap();
  if (epStateMap.size() > 0) {
    Gossiper.instance.notifyFailureDetector(epStateMap);
    Gossiper.instance.applyStateLocally(epStateMap);
  }
  Map<InetAddress,EndpointState> deltaEpStateMap=new HashMap<InetAddress,EndpointState>();
  for (  GossipDigest gDigest : gDigestList) {
    InetAddress addr=gDigest.getEndpoint();
    EndpointState localEpStatePtr=Gossiper.instance.getStateForVersionBiggerThan(addr,gDigest.getMaxVersion());
    if (localEpStatePtr != null)     deltaEpStateMap.put(addr,localEpStatePtr);
  }
  MessageOut<GossipDigestAck2> gDigestAck2Message=new MessageOut<GossipDigestAck2>(MessagingService.Verb.GOSSIP_DIGEST_ACK2,new GossipDigestAck2(deltaEpStateMap),GossipDigestAck2.serializer);
  if (logger.isTraceEnabled())   logger.trace("Sending a GossipDigestAck2Message to {}",from);
  MessagingService.instance().sendOneWay(gDigestAck2Message,from);
}
