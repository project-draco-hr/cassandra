{
  if (compressorClass == null) {
    if (!compressionOptions.isEmpty())     throw new ConfigurationException("Unknown compression options (" + compressionOptions.keySet() + ") since no compression class found");
    return null;
  }
  try {
    Method method=compressorClass.getMethod("create",Map.class);
    ICompressor compressor=(ICompressor)method.invoke(null,compressionOptions);
    AbstractSet<String> supportedOpts=Sets.union(compressor.supportedOptions(),GLOBAL_OPTIONS);
    for (    String provided : compressionOptions.keySet())     if (!supportedOpts.contains(provided))     throw new ConfigurationException("Unknown compression options " + provided);
    return compressor;
  }
 catch (  NoSuchMethodException e) {
    throw new ConfigurationException("create method not found",e);
  }
catch (  SecurityException e) {
    throw new ConfigurationException("Access forbiden",e);
  }
catch (  IllegalAccessException e) {
    throw new ConfigurationException("Cannot access method create in " + compressorClass.getName(),e);
  }
catch (  InvocationTargetException e) {
    Throwable cause=e.getCause();
    throw new ConfigurationException(String.format("%s.create() threw an error: %s",compressorClass.getSimpleName(),cause == null ? e.getClass().getName() + " " + e.getMessage() : cause.getClass().getName() + " " + cause.getMessage()),e);
  }
catch (  ExceptionInInitializerError e) {
    throw new ConfigurationException("Cannot initialize class " + compressorClass.getName());
  }
}
