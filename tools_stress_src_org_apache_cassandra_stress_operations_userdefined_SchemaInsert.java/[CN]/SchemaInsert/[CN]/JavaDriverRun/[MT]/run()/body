{
  Partition.RowIterator[] iterators=new Partition.RowIterator[partitions.size()];
  for (int i=0; i < iterators.length; i++)   iterators[i]=partitions.get(i).iterator(selectChance.next(),true);
  List<BoundStatement> stmts=new ArrayList<>();
  partitionCount=partitions.size();
  for (  Partition.RowIterator iterator : iterators) {
    if (iterator.done())     continue;
    for (    Row row : iterator.next())     stmts.add(bindRow(row));
  }
  rowCount+=stmts.size();
  for (int j=0; j < stmts.size(); j+=65535) {
    List<BoundStatement> substmts=stmts.subList(j,Math.min(stmts.size(),j + 65535));
    Statement stmt;
    if (stmts.size() == 1) {
      stmt=substmts.get(0);
    }
 else {
      BatchStatement batch=new BatchStatement(batchType);
      batch.setConsistencyLevel(JavaDriverClient.from(cl));
      batch.addAll(substmts);
      stmt=batch;
    }
    validate(client.getSession().execute(stmt));
  }
  for (  Partition.RowIterator iterator : iterators)   iterator.markWriteFinished();
  return true;
}
