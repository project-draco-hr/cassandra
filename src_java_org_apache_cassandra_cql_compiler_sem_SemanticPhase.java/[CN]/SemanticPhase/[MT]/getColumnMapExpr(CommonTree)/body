{
  int type=ast.getType();
  if (type != CqlParser.A_COLUMN_MAP_VALUE) {
    throw new SemanticException(CompilerErrorMsg.INVALID_TYPE.getMsg(ast));
  }
  int size=ast.getChildCount();
  ColumnMapExpr result=new ColumnMapExpr();
  for (int idx=0; idx < size; idx++) {
    CommonTree entryNode=(CommonTree)(ast.getChild(idx));
    OperandDef columnKey=getSimpleExpr((CommonTree)(entryNode.getChild(0)));
    OperandDef columnValue=getSimpleExpr((CommonTree)(entryNode.getChild(1)));
    Pair<OperandDef,OperandDef> entry=new Pair<OperandDef,OperandDef>(columnKey,columnValue);
    result.add(entry);
  }
  return result;
}
