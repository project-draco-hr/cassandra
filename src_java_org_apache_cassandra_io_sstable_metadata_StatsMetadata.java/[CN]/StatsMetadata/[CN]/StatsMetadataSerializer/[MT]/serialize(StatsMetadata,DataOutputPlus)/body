{
  EstimatedHistogram.serializer.serialize(component.estimatedRowSize,out);
  EstimatedHistogram.serializer.serialize(component.estimatedColumnCount,out);
  ReplayPosition.serializer.serialize(component.replayPosition,out);
  out.writeLong(component.minTimestamp);
  out.writeLong(component.maxTimestamp);
  out.writeInt(component.maxLocalDeletionTime);
  out.writeDouble(component.compressionRatio);
  StreamingHistogram.serializer.serialize(component.estimatedTombstoneDropTime,out);
  out.writeInt(component.sstableLevel);
  out.writeLong(component.repairedAt);
  out.writeInt(component.minColumnNames.size());
  for (  ByteBuffer columnName : component.minColumnNames)   ByteBufferUtil.writeWithShortLength(columnName,out);
  out.writeInt(component.maxColumnNames.size());
  for (  ByteBuffer columnName : component.maxColumnNames)   ByteBufferUtil.writeWithShortLength(columnName,out);
  out.writeBoolean(component.hasLegacyCounterShards);
}
