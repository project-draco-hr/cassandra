{
  BufferedReader bufReader=new BufferedReader(new InputStreamReader(new FileInputStream(filepath)),16 * 1024 * 1024);
  String line=null;
  String delimiter_=new String(",");
  String firstuser=null;
  String nextuser=null;
  RowMutation rmInbox=null;
  RowMutation rmOutbox=null;
  ColumnFamily cfInbox=null;
  ColumnFamily cfOutbox=null;
  while ((line=bufReader.readLine()) != null) {
    StringTokenizer st=new StringTokenizer(line,delimiter_);
    int i=0;
    String threadId=null;
    int lastUpdated=0;
    int isDeleted=0;
    int folder=0;
    String user=null;
    while (st.hasMoreElements()) {
switch (i) {
case 0:
        user=(String)st.nextElement();
      break;
case 1:
    folder=Integer.parseInt((String)st.nextElement());
  break;
case 2:
threadId=(String)st.nextElement();
break;
case 3:
lastUpdated=Integer.parseInt((String)st.nextElement());
break;
case 4:
isDeleted=Integer.parseInt((String)st.nextElement());
break;
default :
break;
}
++i;
}
nextuser=user;
if (firstuser == null || firstuser.compareTo(nextuser) != 0) {
firstuser=nextuser;
if (rmInbox != null) {
applyLoad(rmInbox);
}
if (rmOutbox != null) {
applyLoad(rmOutbox);
}
rmInbox=new RowMutation(tablename_,firstuser + ":0");
rmOutbox=new RowMutation(tablename_,firstuser + ":1");
}
if (folder == 0) {
rmInbox.add(columnFamily_ + (columnFamilyHack_ % divideby_) + ":"+ threadId,String.valueOf(isDeleted).getBytes(),lastUpdated);
}
 else {
rmOutbox.add(columnFamily_ + (columnFamilyHack_ % divideby_) + ":"+ threadId,String.valueOf(isDeleted).getBytes(),lastUpdated);
}
}
if (firstuser != null) {
if (rmInbox != null) {
applyLoad(rmInbox);
}
if (rmOutbox != null) {
applyLoad(rmOutbox);
}
}
}
