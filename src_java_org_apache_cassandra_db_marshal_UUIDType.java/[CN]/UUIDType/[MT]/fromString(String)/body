{
  if (source.isEmpty())   return ByteBufferUtil.EMPTY_BYTE_BUFFER;
  if (TimeUUIDType.regexPattern.matcher(source).matches()) {
    UUID uuid;
    try {
      uuid=UUID.fromString(source);
      return ByteBuffer.wrap(UUIDGen.decompose(uuid));
    }
 catch (    IllegalArgumentException e) {
      throw new MarshalException(String.format("unable to make UUID from '%s'",source),e);
    }
  }
  try {
    return ByteBuffer.wrap(UUIDGen.getTimeUUIDBytes(TimestampSerializer.dateStringToTimestamp(source)));
  }
 catch (  MarshalException e) {
    throw new MarshalException(String.format("unable to make version 1 UUID from '%s'",source),e);
  }
}
