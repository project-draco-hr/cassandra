{
  StringBuilder sb=new StringBuilder();
  sb.append("Row");
  if (fullDetails) {
    sb.append("[info=").append(primaryKeyLivenessInfo());
    if (!deletion().isLive())     sb.append(" del=").append(deletion());
    sb.append(" ]");
  }
  sb.append(": ");
  if (includeClusterKeys)   sb.append(clustering().toString(metadata));
 else   sb.append(clustering().toCQLString(metadata));
  sb.append(" | ");
  boolean isFirst=true;
  for (  ColumnData cd : this) {
    if (isFirst)     isFirst=false;
 else     sb.append(", ");
    if (fullDetails) {
      if (cd.column().isSimple()) {
        sb.append(cd);
      }
 else {
        ComplexColumnData complexData=(ComplexColumnData)cd;
        if (!complexData.complexDeletion().isLive())         sb.append("del(").append(cd.column().name).append(")=").append(complexData.complexDeletion());
        for (        Cell cell : complexData)         sb.append(", ").append(cell);
      }
    }
 else {
      if (cd.column().isSimple()) {
        Cell cell=(Cell)cd;
        sb.append(cell.column().name).append('=');
        if (cell.isTombstone())         sb.append("<tombstone>");
 else         sb.append(cell.column().type.getString(cell.value()));
      }
 else {
        ComplexColumnData complexData=(ComplexColumnData)cd;
        CollectionType ct=(CollectionType)cd.column().type;
        sb.append(cd.column().name).append("={");
        int i=0;
        for (        Cell cell : complexData) {
          sb.append(i++ == 0 ? "" : ", ");
          sb.append(ct.nameComparator().getString(cell.path().get(0))).append("->").append(ct.valueComparator().getString(cell.value()));
        }
        sb.append('}');
      }
    }
  }
  return sb.toString();
}
