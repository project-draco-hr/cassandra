{
  Keyspace keyspace=Keyspace.open("Keyspace1");
  ColumnFamilyStore store=keyspace.getColumnFamilyStore("Standard1");
  for (int j=0; j < 10; j++) {
    ByteBuffer key=ByteBufferUtil.bytes(String.valueOf(j));
    Mutation rm=new Mutation("Keyspace1",key);
    rm.add("Standard1",cellname("0"),ByteBufferUtil.EMPTY_BYTE_BUFFER,j);
    rm.apply();
  }
  store.forceBlockingFlush();
  SSTableReader sstable=store.getSSTables().iterator().next();
  assertEquals(0,sstable.readMeter.count());
  DecoratedKey key=sstable.partitioner.decorateKey(ByteBufferUtil.bytes("4"));
  store.getColumnFamily(key,Composites.EMPTY,Composites.EMPTY,false,100,100);
  assertEquals(1,sstable.readMeter.count());
  store.getColumnFamily(key,cellname("0"),cellname("0"),false,100,100);
  assertEquals(2,sstable.readMeter.count());
  store.getColumnFamily(Util.namesQueryFilter(store,key,cellname("0")));
  assertEquals(3,sstable.readMeter.count());
}
