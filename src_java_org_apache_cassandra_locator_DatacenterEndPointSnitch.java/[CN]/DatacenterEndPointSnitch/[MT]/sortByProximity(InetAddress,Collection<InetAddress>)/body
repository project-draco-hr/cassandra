{
  List<InetAddress> preferred=new ArrayList<InetAddress>(unsortedAddress);
  Collections.sort(preferred,new Comparator<InetAddress>(){
    public int compare(    InetAddress a1,    InetAddress a2){
      try {
        if (address.equals(a1) && !address.equals(a2))         return -1;
        if (address.equals(a2) && !address.equals(a1))         return 1;
        if (isOnSameRack(address,a1) && !isOnSameRack(address,a2))         return -1;
        if (isOnSameRack(address,a2) && !isOnSameRack(address,a1))         return 1;
        if (isInSameDataCenter(address,a1) && !isInSameDataCenter(address,a2))         return -1;
        if (isInSameDataCenter(address,a2) && !isInSameDataCenter(address,a1))         return 1;
        return 0;
      }
 catch (      UnknownHostException e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  return preferred;
}
