{
  Object[] row=row(0,0,0,0);
  createTable("CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b))");
  String indexName=currentTable() + "_custom_index";
  execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",row);
  assertInvalidMessage(String.format(IndexRestrictions.INDEX_NOT_FOUND,indexName,keyspace(),currentTable()),String.format("SELECT * FROM %%s WHERE expr(%s, 'foo bar baz')",indexName));
  createIndex(String.format("CREATE CUSTOM INDEX %s ON %%s(c) USING '%s'",indexName,StubIndex.class.getName()));
  assertInvalidThrowMessage(Server.CURRENT_VERSION,String.format(IndexRestrictions.INDEX_NOT_FOUND,"no_such_index",keyspace(),currentTable()),QueryValidationException.class,"SELECT * FROM %s WHERE expr(no_such_index, 'foo bar baz ')");
  assertRows(execute(String.format("SELECT * FROM %%s WHERE expr(%s, 'foo bar baz')",indexName)),row);
  assertRows(execute(String.format("SELECT * FROM %%s WHERE expr(\"%s\", 'foo bar baz')",indexName)),row);
  assertRows(execute(String.format("SELECT * FROM %%s WHERE expr(%s, $$foo \" ~~~ bar Baz$$)",indexName)),row);
  assertInvalidThrowMessage(Server.CURRENT_VERSION,IndexRestrictions.MULTIPLE_EXPRESSIONS,QueryValidationException.class,String.format("SELECT * FROM %%s WHERE expr(%1$s, 'foo') AND expr(%1$s, 'bar')",indexName));
  createIndex(String.format("CREATE CUSTOM INDEX other_custom_index ON %%s(d) USING '%s'",StubIndex.class.getName()));
  assertInvalidThrowMessage(Server.CURRENT_VERSION,IndexRestrictions.MULTIPLE_EXPRESSIONS,QueryValidationException.class,String.format("SELECT * FROM %%s WHERE expr(%s, 'foo') AND expr(other_custom_index, 'bar')",indexName));
  assertInvalidThrowMessage(Server.CURRENT_VERSION,StatementRestrictions.REQUIRES_ALLOW_FILTERING_MESSAGE,QueryValidationException.class,String.format("SELECT * FROM %%s WHERE expr(%s, 'foo') AND d=0",indexName));
  assertRows(execute(String.format("SELECT * FROM %%s WHERE expr(%s, 'foo') AND d=0 ALLOW FILTERING",indexName)),row);
}
