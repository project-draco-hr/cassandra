{
  Object[] row=row(0,0,0,0);
  createTable("CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY (a, b))");
  execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",row);
  assertInvalidMessage(String.format(IndexRestrictions.INDEX_NOT_FOUND,"custom_index",keyspace(),currentTable()),"SELECT * FROM %s WHERE expr(custom_index, 'foo bar baz')");
  createIndex(String.format("CREATE CUSTOM INDEX custom_index ON %%s(c) USING '%s'",StubIndex.class.getName()));
  assertInvalidMessage(String.format(IndexRestrictions.INDEX_NOT_FOUND,"no_such_index",keyspace(),currentTable()),"SELECT * FROM %s WHERE expr(no_such_index, 'foo bar baz ')");
  assertRows(execute("SELECT * FROM %s WHERE expr(custom_index, 'foo bar baz')"),row);
  assertRows(execute("SELECT * FROM %s WHERE expr(\"custom_index\", 'foo bar baz')"),row);
  assertRows(execute("SELECT * FROM %s WHERE expr(custom_index, $$foo \" ~~~ bar Baz$$)"),row);
  assertInvalidMessage(IndexRestrictions.MULTIPLE_EXPRESSIONS,"SELECT * FROM %s WHERE expr(custom_index, 'foo') AND expr(custom_index, 'bar')");
  createIndex(String.format("CREATE CUSTOM INDEX other_custom_index ON %%s(d) USING '%s'",StubIndex.class.getName()));
  assertInvalidMessage(IndexRestrictions.MULTIPLE_EXPRESSIONS,"SELECT * FROM %s WHERE expr(custom_index, 'foo') AND expr(other_custom_index, 'bar')");
  assertInvalidMessage(SelectStatement.REQUIRES_ALLOW_FILTERING_MESSAGE,"SELECT * FROM %s WHERE expr(custom_index, 'foo') AND d=0");
  assertRows(execute("SELECT * FROM %s WHERE expr(custom_index, 'foo') AND d=0 ALLOW FILTERING"),row);
}
