{
  long partitionCount=0, rowCount=0, errorCount=0;
  long end=0;
  long pauseStart=0;
  Histogram responseTime=new Histogram(3);
  Histogram serviceTime=new Histogram(3);
  Histogram waitTime=new Histogram(3);
  boolean isFixed=false;
  for (  TimingInterval interval : intervals) {
    if (interval != null) {
      end=Math.max(end,interval.endNs);
      partitionCount+=interval.partitionCount;
      rowCount+=interval.rowCount;
      errorCount+=interval.errorCount;
      if (interval.getLatencyHistogram().getMaxValue() > serviceTime.getMaxValue()) {
        pauseStart=interval.pauseStart;
      }
      responseTime.add(interval.responseTime);
      serviceTime.add(interval.serviceTime);
      waitTime.add(interval.waitTime);
      isFixed|=interval.isFixed;
    }
  }
  return new TimingInterval(start,end,pauseStart,partitionCount,rowCount,errorCount,responseTime,serviceTime,waitTime,isFixed);
}
