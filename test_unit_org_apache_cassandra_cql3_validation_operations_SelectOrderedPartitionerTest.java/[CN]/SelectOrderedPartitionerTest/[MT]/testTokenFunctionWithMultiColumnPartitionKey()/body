{
  createTable("CREATE TABLE IF NOT EXISTS %s (a int, b text, PRIMARY KEY ((a, b)))");
  execute("INSERT INTO %s (a, b) VALUES (0, 'a')");
  execute("INSERT INTO %s (a, b) VALUES (0, 'b')");
  execute("INSERT INTO %s (a, b) VALUES (0, 'c')");
  assertRows(execute("SELECT * FROM %s WHERE token(a, b) > token(?, ?)",0,"a"),row(0,"b"),row(0,"c"));
  assertRows(execute("SELECT * FROM %s WHERE token(a, b) > token(?, ?) and token(a, b) < token(?, ?)",0,"a",0,"d"),row(0,"b"),row(0,"c"));
  assertInvalidMessage("The token() function must be applied to all partition key components or none of them","SELECT * FROM %s WHERE token(a) > token(?) and token(b) > token(?)",0,"a");
  assertInvalidMessage("The token() function must be applied to all partition key components or none of them","SELECT * FROM %s WHERE token(a) > token(?, ?) and token(a) < token(?, ?) and token(b) > token(?, ?) ",0,"a",0,"d",0,"a");
  assertInvalidMessage("The token function arguments must be in the partition key order: a, b","SELECT * FROM %s WHERE token(b, a) > token(0, 'c')");
  assertInvalidMessage("The token() function must be applied to all partition key components or none of them","SELECT * FROM %s WHERE token(a, b) > token(?, ?) and token(b) < token(?, ?)",0,"a",0,"a");
  assertInvalidMessage("The token() function must be applied to all partition key components or none of them","SELECT * FROM %s WHERE token(a) > token(?, ?) and token(b) > token(?, ?)",0,"a",0,"a");
}
