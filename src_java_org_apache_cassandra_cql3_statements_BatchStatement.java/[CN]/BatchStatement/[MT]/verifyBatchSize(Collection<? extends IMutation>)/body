{
  if (mutations.size() <= 1)   return;
  long size=0;
  long warnThreshold=DatabaseDescriptor.getBatchSizeWarnThreshold();
  long failThreshold=DatabaseDescriptor.getBatchSizeFailThreshold();
  for (  IMutation mutation : mutations) {
    for (    PartitionUpdate update : mutation.getPartitionUpdates())     size+=update.dataSize();
  }
  if (size > warnThreshold) {
    Set<String> tableNames=new HashSet<>();
    for (    IMutation mutation : mutations) {
      for (      PartitionUpdate update : mutation.getPartitionUpdates())       tableNames.add(String.format("%s.%s",update.metadata().ksName,update.metadata().cfName));
    }
    String format="Batch for {} is of size {}, exceeding specified threshold of {} by {}.{}";
    if (size > failThreshold) {
      Tracing.trace(format,tableNames,FBUtilities.prettyPrintMemory(size),FBUtilities.prettyPrintMemory(failThreshold),FBUtilities.prettyPrintMemory(size - failThreshold)," (see batch_size_fail_threshold_in_kb)");
      logger.error(format,tableNames,FBUtilities.prettyPrintMemory(size),FBUtilities.prettyPrintMemory(failThreshold),FBUtilities.prettyPrintMemory(size - failThreshold)," (see batch_size_fail_threshold_in_kb)");
      throw new InvalidRequestException("Batch too large");
    }
 else     if (logger.isWarnEnabled()) {
      logger.warn(format,tableNames,FBUtilities.prettyPrintMemory(size),FBUtilities.prettyPrintMemory(warnThreshold),FBUtilities.prettyPrintMemory(size - warnThreshold),"");
    }
    ClientWarn.instance.warn(MessageFormatter.arrayFormat(format,new Object[]{tableNames,size,warnThreshold,size - warnThreshold,""}).getMessage());
  }
}
