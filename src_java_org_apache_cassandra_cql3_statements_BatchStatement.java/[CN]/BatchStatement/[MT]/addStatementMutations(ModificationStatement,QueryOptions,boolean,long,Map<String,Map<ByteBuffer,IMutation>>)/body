{
  String ksName=statement.keyspace();
  Map<ByteBuffer,IMutation> ksMap=mutations.get(ksName);
  if (ksMap == null) {
    ksMap=new HashMap<>();
    mutations.put(ksName,ksMap);
  }
  List<ByteBuffer> keys=statement.buildPartitionKeyNames(options);
  CBuilder clustering=statement.createClustering(options);
  UpdateParameters params=statement.makeUpdateParameters(keys,clustering,options,local,now);
  for (  ByteBuffer key : keys) {
    DecoratedKey dk=StorageService.getPartitioner().decorateKey(key);
    IMutation mutation=ksMap.get(dk.getKey());
    Mutation mut;
    if (mutation == null) {
      mut=new Mutation(ksName,dk);
      mutation=statement.cfm.isCounter() ? new CounterMutation(mut,options.getConsistency()) : mut;
      ksMap.put(dk.getKey(),mutation);
    }
 else {
      mut=statement.cfm.isCounter() ? ((CounterMutation)mutation).getMutation() : (Mutation)mutation;
    }
    PartitionUpdate upd=mut.get(statement.cfm);
    if (upd == null) {
      upd=new PartitionUpdate(statement.cfm,dk,updatedColumns(),updatedRows());
      mut.add(upd);
    }
    statement.addUpdateForKey(upd,clustering,params);
  }
}
