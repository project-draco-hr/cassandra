{
  if (writer == null)   return;
  switchWriter(null);
  moveStarts(null,Functions.forMap(originalStarts),true);
  List<SSTableReader> close=Lists.newArrayList(finishedOpenedEarly);
  if (currentlyOpenedEarly != null)   close.add(currentlyOpenedEarly);
  for (  Pair<SSTableWriter,SSTableReader> w : finishedWriters) {
    w.left.abort(w.right == null);
  }
  for (  SSTableReader sstable : close)   sstable.markObsolete();
  if (!isOffline) {
    dataTracker.replaceReaders(close,Collections.<SSTableReader>emptyList(),false);
    dataTracker.unmarkCompacting(close);
  }
}
