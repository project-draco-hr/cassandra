{
  if (session.getColumnFamilyType() == ColumnFamilyType.Super)   throw new RuntimeException("Super columns are not implemented for CQL");
  StringBuilder query=new StringBuilder("SELECT ");
  if (session.columnNames == null) {
    query.append("FIRST ").append(session.getColumnsPerKey()).append(" ''..''");
  }
 else {
    for (int i=0; i < session.columnNames.size(); i++) {
      if (i > 0)       query.append(",");
      query.append('\'').append(new String(session.columnNames.get(i).array())).append('\'');
    }
  }
  byte[] key=generateKey();
  query.append(" FROM Standard1 USING CONSISTENCY ").append(session.getConsistencyLevel().toString());
  query.append(" WHERE KEY=").append(getQuotedCqlBlob(key));
  long start=System.currentTimeMillis();
  boolean success=false;
  String exceptionMessage=null;
  for (int t=0; t < session.getRetryTimes(); t++) {
    if (success)     break;
    try {
      CqlResult result=client.execute_cql_query(ByteBuffer.wrap(query.toString().getBytes()),Compression.NONE);
      success=(result.rows.get(0).columns.size() != 0);
    }
 catch (    Exception e) {
      exceptionMessage=getExceptionMessage(e);
      success=false;
    }
  }
  if (!success) {
    error(String.format("Operation [%d] retried %d times - error reading key %s %s%n",index,session.getRetryTimes(),new String(key),(exceptionMessage == null) ? "" : "(" + exceptionMessage + ")"));
  }
  session.operations.getAndIncrement();
  session.keys.getAndIncrement();
  session.latency.getAndAdd(System.currentTimeMillis() - start);
}
