{
  final Clustering clustering=clustering().takeAlias();
  final LivenessInfo info=primaryKeyLivenessInfo().takeAlias();
  final DeletionTime deletion=deletion().takeAlias();
  final RowDataBlock data=data();
  final int row=row();
  return new AbstractReusableRow(){
    protected RowDataBlock data(){
      return data;
    }
    protected int row(){
      return row;
    }
    public Clustering clustering(){
      return clustering;
    }
    public LivenessInfo primaryKeyLivenessInfo(){
      return info;
    }
    public DeletionTime deletion(){
      return deletion;
    }
    @Override public Row takeAlias(){
      return this;
    }
  }
;
}
