{
  int liveColumns=0;
  AbstractType comparator=container.getComparator();
  while (reducedColumns.hasNext()) {
    if (liveColumns >= count)     break;
    IColumn column=reducedColumns.next();
    if (logger.isDebugEnabled())     logger.debug(String.format("collecting %s of %s: %s",liveColumns,count,column.getString(comparator)));
    if (finish.length > 0 && ((!reversed && comparator.compare(column.name(),finish) > 0)) || (reversed && comparator.compare(column.name(),finish) < 0))     break;
    if (!column.isMarkedForDelete() && (!container.isMarkedForDelete() || column.mostRecentLiveChangeAt() > container.getMarkedForDeleteAt())) {
      liveColumns++;
    }
    if (QueryFilter.isRelevant(column,container,gcBefore))     container.addColumn(column);
  }
}
