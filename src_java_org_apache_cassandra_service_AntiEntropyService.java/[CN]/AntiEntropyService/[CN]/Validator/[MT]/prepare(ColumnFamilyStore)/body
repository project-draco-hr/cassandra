{
  List<DecoratedKey> keys=new ArrayList<DecoratedKey>();
  for (  DecoratedKey sample : cfs.allKeySamples())   keys.add(sample);
  if (keys.isEmpty()) {
    tree.init();
  }
 else {
    int numkeys=keys.size();
    Random random=new Random();
    while (true) {
      DecoratedKey dk=keys.get(random.nextInt(numkeys));
      if (!tree.split(dk.token))       break;
    }
  }
  logger.debug("Prepared AEService tree of size " + tree.size() + " for "+ request);
  mintoken=tree.partitioner().getMinimumToken();
  ranges=tree.invalids(new Range(mintoken,mintoken));
}
