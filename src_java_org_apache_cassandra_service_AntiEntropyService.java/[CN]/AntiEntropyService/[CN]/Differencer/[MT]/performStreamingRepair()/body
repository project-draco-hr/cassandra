{
  logger.info("Performing streaming repair of " + differences.size() + " ranges for "+ request);
  ColumnFamilyStore cfstore=Table.open(request.cf.left).getColumnFamilyStore(request.cf.right);
  try {
    final List<Range> ranges=new ArrayList<Range>(differences);
    final Collection<SSTableReader> sstables=cfstore.getSSTables();
    Future f=StageManager.getStage(Stage.STREAM).submit(new WrappedRunnable(){
      protected void runMayThrow() throws Exception {
        StreamOutSession session=StreamOutSession.create(request.cf.left,request.endpoint,null);
        StreamOut.transferSSTables(session,sstables,ranges);
        session.close();
      }
    }
);
    StreamIn.requestRanges(request.endpoint,request.cf.left,ranges);
    f.get();
  }
 catch (  Exception e) {
    throw new IOException("Streaming repair failed.",e);
  }
  logger.info("Finished streaming repair for " + request);
}
