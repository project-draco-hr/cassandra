def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('describe_keyspace_result')
    if (self.success != None):
        oprot.writeFieldBegin('success', TType.MAP, 0)
        oprot.writeMapBegin(TType.STRING, TType.MAP, len(self.success))
        for (kiter166, viter167) in self.success.items():
            oprot.writeString(kiter166)
            oprot.writeMapBegin(TType.STRING, TType.STRING, len(viter167))
            for (kiter168, viter169) in viter167.items():
                oprot.writeString(kiter168)
                oprot.writeString(viter169)
            oprot.writeMapEnd()
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.nfe != None):
        oprot.writeFieldBegin('nfe', TType.STRUCT, 1)
        self.nfe.write(oprot)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
