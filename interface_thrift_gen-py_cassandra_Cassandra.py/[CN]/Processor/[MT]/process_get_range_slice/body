def process_get_range_slice(self, seqid, iprot, oprot):
    args = get_range_slice_args()
    args.read(iprot)
    iprot.readMessageEnd()
    result = get_range_slice_result()
    try:
        result.success = self._handler.get_range_slice(args.keyspace, args.column_parent, args.predicate, args.start_key, args.finish_key, args.row_count, args.consistency_level)
    except InvalidRequestException as ire:
        result.ire = ire
    except UnavailableException as ue:
        result.ue = ue
    except TimedOutException as te:
        result.te = te
    oprot.writeMessageBegin('get_range_slice', TMessageType.REPLY, seqid)
    result.write(oprot)
    oprot.writeMessageEnd()
    oprot.trans.flush()
