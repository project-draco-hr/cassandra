def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('get_range_slice_args')
    if (self.keyspace != None):
        oprot.writeFieldBegin('keyspace', TType.STRING, 1)
        oprot.writeString(self.keyspace)
        oprot.writeFieldEnd()
    if (self.column_parent != None):
        oprot.writeFieldBegin('column_parent', TType.STRUCT, 2)
        self.column_parent.write(oprot)
        oprot.writeFieldEnd()
    if (self.predicate != None):
        oprot.writeFieldBegin('predicate', TType.STRUCT, 3)
        self.predicate.write(oprot)
        oprot.writeFieldEnd()
    if (self.start_key != None):
        oprot.writeFieldBegin('start_key', TType.STRING, 4)
        oprot.writeString(self.start_key)
        oprot.writeFieldEnd()
    if (self.finish_key != None):
        oprot.writeFieldBegin('finish_key', TType.STRING, 5)
        oprot.writeString(self.finish_key)
        oprot.writeFieldEnd()
    if (self.row_count != None):
        oprot.writeFieldBegin('row_count', TType.I32, 6)
        oprot.writeI32(self.row_count)
        oprot.writeFieldEnd()
    if (self.consistency_level != None):
        oprot.writeFieldBegin('consistency_level', TType.I32, 7)
        oprot.writeI32(self.consistency_level)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
