def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('get_args')
    if (self.keyspace != None):
        oprot.writeFieldBegin('keyspace', TType.STRING, 1)
        oprot.writeString(self.keyspace)
        oprot.writeFieldEnd()
    if (self.key != None):
        oprot.writeFieldBegin('key', TType.STRING, 2)
        oprot.writeString(self.key)
        oprot.writeFieldEnd()
    if (self.column_path != None):
        oprot.writeFieldBegin('column_path', TType.STRUCT, 3)
        self.column_path.write(oprot)
        oprot.writeFieldEnd()
    if (self.consistency_level != None):
        oprot.writeFieldBegin('consistency_level', TType.I32, 4)
        oprot.writeI32(self.consistency_level)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
