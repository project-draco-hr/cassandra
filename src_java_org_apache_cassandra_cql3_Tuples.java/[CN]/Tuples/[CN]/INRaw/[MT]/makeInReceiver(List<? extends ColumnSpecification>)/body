{
  List<AbstractType<?>> types=new ArrayList<>(receivers.size());
  StringBuilder inName=new StringBuilder("in(");
  for (int i=0; i < receivers.size(); i++) {
    ColumnSpecification receiver=receivers.get(i);
    inName.append(receiver.name);
    if (i < receivers.size() - 1)     inName.append(",");
    if (receiver.type.isCollection() && receiver.type.isMultiCell())     throw new InvalidRequestException("Non-frozen collection columns do not support IN relations");
    types.add(receiver.type);
  }
  inName.append(')');
  ColumnIdentifier identifier=new ColumnIdentifier(inName.toString(),true);
  TupleType type=new TupleType(types);
  return new ColumnSpecification(receivers.get(0).ksName,receivers.get(0).cfName,identifier,ListType.getInstance(type,false));
}
