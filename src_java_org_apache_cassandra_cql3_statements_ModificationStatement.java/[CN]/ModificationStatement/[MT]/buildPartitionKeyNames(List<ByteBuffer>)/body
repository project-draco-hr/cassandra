{
  CBuilder keyBuilder=cfm.getKeyValidatorAsCType().builder();
  List<ByteBuffer> keys=new ArrayList<ByteBuffer>();
  for (  ColumnDefinition def : cfm.partitionKeyColumns()) {
    Restriction r=processedKeys.get(def.name);
    if (r == null)     throw new InvalidRequestException(String.format("Missing mandatory PRIMARY KEY part %s",def.name));
    List<ByteBuffer> values=r.values(variables);
    if (keyBuilder.remainingCount() == 1) {
      for (      ByteBuffer val : values) {
        if (val == null)         throw new InvalidRequestException(String.format("Invalid null value for partition key part %s",def.name));
        keys.add(keyBuilder.buildWith(val).toByteBuffer());
      }
    }
 else {
      if (values.size() != 1)       throw new InvalidRequestException("IN is only supported on the last column of the partition key");
      ByteBuffer val=values.get(0);
      if (val == null)       throw new InvalidRequestException(String.format("Invalid null value for partition key part %s",def.name));
      keyBuilder.add(val);
    }
  }
  return keys;
}
