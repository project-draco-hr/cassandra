{
  long totalSize=totalSize();
  Pair<String,String> kscf=Schema.instance.getCF(cfId);
  ColumnFamilyStore cfs=Table.open(kscf.left).getColumnFamilyStore(kscf.right);
  Directories.DataDirectory localDir=cfs.directories.getLocationCapableOfSize(totalSize);
  if (localDir == null)   throw new IOException("Insufficient disk space to store " + totalSize + " bytes");
  desc=Descriptor.fromFilename(cfs.getTempSSTablePath(cfs.directories.getLocationForDisk(localDir)));
  SSTableWriter writer=new SSTableWriter(desc.filenameFor(Component.DATA),estimatedKeys);
  try {
    DataInputStream dis=new DataInputStream(new LZFInputStream(Channels.newInputStream(channel)));
    BytesReadTracker in=new BytesReadTracker(dis);
    while (in.getBytesRead() < totalSize) {
      writeRow(writer,in,cfs);
      session.progress(desc,ProgressInfo.Direction.IN,in.getBytesRead(),totalSize);
    }
    return writer.closeAndOpenReader();
  }
 catch (  Throwable e) {
    writer.abort();
    if (e instanceof IOException)     throw (IOException)e;
 else     throw Throwables.propagate(e);
  }
}
