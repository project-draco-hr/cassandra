{
  Map<String,String> options=new HashMap<>();
  options.put(SizeTieredCompactionStrategyOptions.COLD_READS_TO_OMIT_KEY,"0.35");
  options.put(SizeTieredCompactionStrategyOptions.BUCKET_LOW_KEY,"0.5");
  options.put(SizeTieredCompactionStrategyOptions.BUCKET_HIGH_KEY,"1.5");
  options.put(SizeTieredCompactionStrategyOptions.MIN_SSTABLE_SIZE_KEY,"10000");
  Map<String,String> unvalidated=validateOptions(options);
  assertTrue(unvalidated.isEmpty());
  try {
    options.put(SizeTieredCompactionStrategyOptions.COLD_READS_TO_OMIT_KEY,"-0.5");
    validateOptions(options);
    fail(String.format("Negative %s should be rejected",SizeTieredCompactionStrategyOptions.COLD_READS_TO_OMIT_KEY));
  }
 catch (  ConfigurationException e) {
  }
  try {
    options.put(SizeTieredCompactionStrategyOptions.COLD_READS_TO_OMIT_KEY,"10.0");
    validateOptions(options);
    fail(String.format("%s > 1.0 should be rejected",SizeTieredCompactionStrategyOptions.COLD_READS_TO_OMIT_KEY));
  }
 catch (  ConfigurationException e) {
    options.put(SizeTieredCompactionStrategyOptions.COLD_READS_TO_OMIT_KEY,"0.25");
  }
  try {
    options.put(SizeTieredCompactionStrategyOptions.BUCKET_LOW_KEY,"1000.0");
    validateOptions(options);
    fail("bucket_low greater than bucket_high should be rejected");
  }
 catch (  ConfigurationException e) {
    options.put(SizeTieredCompactionStrategyOptions.BUCKET_LOW_KEY,"0.5");
  }
  options.put("bad_option","1.0");
  unvalidated=validateOptions(options);
  assertTrue(unvalidated.containsKey("bad_option"));
}
