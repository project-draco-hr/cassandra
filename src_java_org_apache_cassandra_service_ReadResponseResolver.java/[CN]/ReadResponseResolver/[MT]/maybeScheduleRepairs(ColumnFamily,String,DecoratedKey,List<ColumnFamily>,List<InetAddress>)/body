{
  for (int i=0; i < versions.size(); i++) {
    ColumnFamily diffCf=ColumnFamily.diff(versions.get(i),resolved);
    if (diffCf == null)     continue;
    RowMutation rowMutation=new RowMutation(table,key.key);
    AbstractType defaultValidator=diffCf.metadata().getDefaultValidator();
    if (defaultValidator.isCommutative())     ((AbstractCommutativeType)defaultValidator).cleanContext(diffCf,endpoints.get(i));
    if (diffCf.getColumnsMap().isEmpty() && !diffCf.isMarkedForDelete())     continue;
    rowMutation.add(diffCf);
    Message repairMessage;
    try {
      repairMessage=rowMutation.makeRowMutationMessage(StorageService.Verb.READ_REPAIR);
    }
 catch (    IOException e) {
      throw new IOError(e);
    }
    MessagingService.instance().sendOneWay(repairMessage,endpoints.get(i));
  }
}
