{
  StringBuilder code=new StringBuilder(1024);
  code.append("public java.nio.ByteBuffer execute(java.util.List params)\n" + "throws org.apache.cassandra.exceptions.InvalidRequestException\n" + "{\n"+ "  try\n"+ "  {\n"+ "    Object result = executeInternal(");
  for (int i=0; i < paramTypes.length; i++) {
    if (i > 0)     code.append(',');
    if (logger.isDebugEnabled())     code.append("\n      /* ").append(argNames.get(i)).append(" */ ");
    code.append("\n      (").append(paramTypes[i].getName()).append(")").append("org.apache.cassandra.cql3.functions.JavaSourceUDFFactory.compose(argTypes, params, ").append(i).append(')');
  }
  code.append("\n    );\n" + "    return result != null ? returnType.decompose(result) : null;\n" + "  }\n"+ "  catch (Throwable t)\n"+ "  {\n"+ "    logger.error(\"Invocation of function '{}' failed\", this, t);\n"+ "    if (t instanceof VirtualMachineError)\n"+ "      throw (VirtualMachineError)t;\n"+ "    throw new org.apache.cassandra.exceptions.InvalidRequestException(\"Invocation of function '\" + this + \"' failed: \" + t);\n"+ "  }\n"+ "}");
  return code.toString();
}
