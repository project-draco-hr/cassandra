{
  for (  Map.Entry<String,String> entry : all.entrySet()) {
    CassandraMetricsRegistry.MetricName name=factory.createMetricName(entry.getKey());
    CassandraMetricsRegistry.MetricName alias=aliasFactory.createMetricName(entry.getValue());
    allTableMetrics.get(entry.getKey()).remove(Metrics.getMetrics().get(name.getMetricName()));
    Metrics.remove(name,alias);
  }
  readLatency.release();
  writeLatency.release();
  rangeLatency.release();
  Metrics.remove(factory.createMetricName("EstimatedPartitionSizeHistogram"),aliasFactory.createMetricName("EstimatedRowSizeHistogram"));
  Metrics.remove(factory.createMetricName("EstimatedPartitionCount"),aliasFactory.createMetricName("EstimatedRowCount"));
  Metrics.remove(factory.createMetricName("EstimatedColumnCountHistogram"),aliasFactory.createMetricName("EstimatedColumnCountHistogram"));
  Metrics.remove(factory.createMetricName("KeyCacheHitRate"),aliasFactory.createMetricName("KeyCacheHitRate"));
  Metrics.remove(factory.createMetricName("CoordinatorReadLatency"),aliasFactory.createMetricName("CoordinatorReadLatency"));
  Metrics.remove(factory.createMetricName("CoordinatorScanLatency"),aliasFactory.createMetricName("CoordinatorScanLatency"));
  Metrics.remove(factory.createMetricName("WaitingOnFreeMemtableSpace"),aliasFactory.createMetricName("WaitingOnFreeMemtableSpace"));
}
