{
  IAuthenticator authenticator=DatabaseDescriptor.getAuthenticator();
  if (authenticator.requireAuthentication() && !(authenticator instanceof ISaslAwareAuthenticator)) {
    logger.error("Not starting native transport as the configured IAuthenticator is not capable of SASL authentication");
    isRunning.compareAndSet(true,false);
    return;
  }
  executionHandler=new ExecutionHandler(new RequestThreadPoolExecutor());
  factory=new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),Executors.newCachedThreadPool());
  ServerBootstrap bootstrap=new ServerBootstrap(factory);
  bootstrap.setOption("child.tcpNoDelay",true);
  final EncryptionOptions.ClientEncryptionOptions clientEnc=DatabaseDescriptor.getClientEncryptionOptions();
  if (clientEnc.enabled) {
    logger.info("Enabling encrypted CQL connections between client and server");
    bootstrap.setPipelineFactory(new SecurePipelineFactory(this,clientEnc));
  }
 else {
    bootstrap.setPipelineFactory(new PipelineFactory(this));
  }
  logger.info("Starting listening for CQL clients on {}...",socket);
  Channel channel=bootstrap.bind(socket);
  connectionTracker.allChannels.add(channel);
  isRunning.set(true);
}
