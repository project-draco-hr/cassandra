{
  conf=HadoopCompat.getConfiguration(job);
  setLocationFromUri(location);
  if (username != null && password != null)   ConfigHelper.setOutputKeyspaceUserNameAndPassword(conf,username,password);
  if (splitSize > 0)   ConfigHelper.setInputSplitSize(conf,splitSize);
  if (partitionerClass != null)   ConfigHelper.setOutputPartitioner(conf,partitionerClass);
  if (rpcPort != null) {
    ConfigHelper.setOutputRpcPort(conf,rpcPort);
    ConfigHelper.setInputRpcPort(conf,rpcPort);
  }
  if (initHostAddress != null) {
    ConfigHelper.setOutputInitialAddress(conf,initHostAddress);
    ConfigHelper.setInputInitialAddress(conf,initHostAddress);
  }
  ConfigHelper.setOutputColumnFamily(conf,keyspace,column_family);
  CqlConfigHelper.setOutputCql(conf,outputQuery);
  if (bulkOutputFormat) {
    DEFAULT_OUTPUT_FORMAT=BULK_OUTPUT_FORMAT;
    if (bulkCfSchema != null)     CqlBulkOutputFormat.setColumnFamilySchema(conf,column_family,bulkCfSchema);
 else     throw new IOException("bulk_cf_schema is missing in input url parameter");
    if (bulkInsertStatement != null)     CqlBulkOutputFormat.setColumnFamilyInsertStatement(conf,column_family,bulkInsertStatement);
 else     throw new IOException("bulk_insert_statement is missing in input url parameter");
    if (bulkOutputLocation != null)     conf.set(AbstractBulkRecordWriter.OUTPUT_LOCATION,bulkOutputLocation);
    if (bulkBuffSize > 0)     conf.set(AbstractBulkRecordWriter.BUFFER_SIZE_IN_MB,String.valueOf(bulkBuffSize));
    if (bulkStreamThrottle > 0)     conf.set(AbstractBulkRecordWriter.STREAM_THROTTLE_MBITS,String.valueOf(bulkStreamThrottle));
    if (bulkMaxFailedHosts > 0)     conf.set(AbstractBulkRecordWriter.MAX_FAILED_HOSTS,String.valueOf(bulkMaxFailedHosts));
    CqlBulkOutputFormat.setSSLStoragePort(conf,sslStoragePort);
    CqlBulkOutputFormat.setStoragePort(conf,storagePort);
    if (serverEncrypted()) {
      if (!StringUtils.isEmpty(serverKeystore))       CqlBulkOutputFormat.setServerKeystore(conf,serverKeystore);
      if (!StringUtils.isEmpty(serverTruststore))       CqlBulkOutputFormat.setServerTruststore(conf,serverTruststore);
      if (!StringUtils.isEmpty(serverKeystorePassword))       CqlBulkOutputFormat.setServerKeystorePassword(conf,serverKeystorePassword);
      if (!StringUtils.isEmpty(serverTruststorePassword))       CqlBulkOutputFormat.setServerTruststorePassword(conf,serverTruststorePassword);
      if (!StringUtils.isEmpty(serverCipherSuites))       CqlBulkOutputFormat.setServerCipherSuites(conf,serverCipherSuites);
    }
  }
  setConnectionInformation();
  if (ConfigHelper.getOutputRpcPort(conf) == 0)   throw new IOException("PIG_OUTPUT_RPC_PORT or PIG_RPC_PORT environment variable not set");
  if (ConfigHelper.getOutputInitialAddress(conf) == null)   throw new IOException("PIG_OUTPUT_INITIAL_ADDRESS or PIG_INITIAL_ADDRESS environment variable not set");
  if (ConfigHelper.getOutputPartitioner(conf) == null)   throw new IOException("PIG_OUTPUT_PARTITIONER or PIG_PARTITIONER environment variable not set");
  initSchema(storeSignature);
}
