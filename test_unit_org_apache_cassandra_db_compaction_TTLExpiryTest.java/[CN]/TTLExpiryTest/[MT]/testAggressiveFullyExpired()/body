{
  ColumnFamilyStore cfs=Keyspace.open(KEYSPACE1).getColumnFamilyStore("Standard1");
  cfs.disableAutoCompaction();
  cfs.metadata.gcGraceSeconds(0);
  String key="ttl";
  new RowUpdateBuilder(cfs.metadata,1L,1,key).add("col1",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,3L,1,key).add("col2",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  cfs.forceBlockingFlush();
  new RowUpdateBuilder(cfs.metadata,2L,1,key).add("col1",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,5L,1,key).add("col2",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  cfs.forceBlockingFlush();
  new RowUpdateBuilder(cfs.metadata,4L,1,key).add("col1",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,7L,1,key).add("shadow",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  cfs.forceBlockingFlush();
  new RowUpdateBuilder(cfs.metadata,6L,3,key).add("shadow",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,8L,1,key).add("col2",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  cfs.forceBlockingFlush();
  Set<SSTableReader> sstables=Sets.newHashSet(cfs.getLiveSSTables());
  int now=(int)(System.currentTimeMillis() / 1000);
  int gcBefore=now + 2;
  Set<SSTableReader> expired=CompactionController.getFullyExpiredSSTables(cfs,sstables,Collections.EMPTY_SET,gcBefore);
  assertEquals(2,expired.size());
  cfs.clearUnsafe();
}
