{
  CheaterFutureTask firstTask=queue.take();
  if (!(firstTask.getRawCallable() instanceof CommitLog.LogRecordAdder)) {
    firstTask.run();
    return;
  }
  incompleteTasks.clear();
  taskValues.clear();
  long end=System.nanoTime() + 1000 * DatabaseDescriptor.getCommitLogSyncDelay();
  incompleteTasks.add(firstTask);
  taskValues.add(firstTask.getRawCallable().call());
  while (!queue.isEmpty() && queue.peek().getRawCallable() instanceof CommitLog.LogRecordAdder && System.nanoTime() < end) {
    CheaterFutureTask task=queue.remove();
    incompleteTasks.add(task);
    taskValues.add(task.getRawCallable().call());
  }
  try {
    CommitLog.open().sync();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  for (int i=0; i < incompleteTasks.size(); i++) {
    incompleteTasks.get(i).set(taskValues.get(i));
  }
}
