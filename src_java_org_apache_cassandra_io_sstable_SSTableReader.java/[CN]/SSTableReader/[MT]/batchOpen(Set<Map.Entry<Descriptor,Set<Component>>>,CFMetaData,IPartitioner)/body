{
  final Collection<SSTableReader> sstables=new LinkedBlockingQueue<SSTableReader>();
  ExecutorService executor=DebuggableThreadPoolExecutor.createWithFixedPoolSize("SSTableBatchOpen",FBUtilities.getAvailableProcessors());
  for (  final Map.Entry<Descriptor,Set<Component>> entry : entries) {
    Runnable runnable=new Runnable(){
      public void run(){
        SSTableReader sstable;
        try {
          sstable=open(entry.getKey(),entry.getValue(),metadata,partitioner);
        }
 catch (        IOException ex) {
          logger.error("Corrupt sstable " + entry + "; skipped",ex);
          return;
        }
        sstables.add(sstable);
      }
    }
;
    executor.submit(runnable);
  }
  executor.shutdown();
  try {
    executor.awaitTermination(7,TimeUnit.DAYS);
  }
 catch (  InterruptedException e) {
    throw new AssertionError(e);
  }
  return sstables;
}
