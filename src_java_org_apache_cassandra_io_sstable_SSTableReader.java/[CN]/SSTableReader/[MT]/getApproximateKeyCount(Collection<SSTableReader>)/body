{
  long count=-1;
  boolean cardinalityAvailable=!sstables.isEmpty() && Iterators.all(sstables.iterator(),new Predicate<SSTableReader>(){
    public boolean apply(    SSTableReader sstable){
      return sstable.descriptor.version.newStatsFile;
    }
  }
);
  if (cardinalityAvailable) {
    boolean failed=false;
    ICardinality cardinality=null;
    for (    SSTableReader sstable : sstables) {
      try {
        CompactionMetadata metadata=(CompactionMetadata)sstable.descriptor.getMetadataSerializer().deserialize(sstable.descriptor,MetadataType.COMPACTION);
        if (cardinality == null)         cardinality=metadata.cardinalityEstimator;
 else         cardinality=cardinality.merge(metadata.cardinalityEstimator);
      }
 catch (      IOException e) {
        logger.warn("Reading cardinality from Statistics.db failed.",e);
        failed=true;
        break;
      }
catch (      CardinalityMergeException e) {
        logger.warn("Cardinality merge failed.",e);
        failed=true;
        break;
      }
    }
    if (cardinality != null && !failed)     count=cardinality.cardinality();
  }
  if (count < 0) {
    for (    SSTableReader sstable : sstables) {
      count+=(sstable.getMaxIndexSummarySize() + 1) * sstable.indexSummary.getSamplingLevel();
    }
  }
  return count;
}
