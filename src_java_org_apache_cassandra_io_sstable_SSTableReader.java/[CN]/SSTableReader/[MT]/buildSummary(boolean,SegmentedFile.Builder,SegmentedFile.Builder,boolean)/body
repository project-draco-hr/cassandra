{
  RandomAccessReader primaryIndex=RandomAccessReader.open(new File(descriptor.filenameFor(Component.PRIMARY_INDEX)),true);
  try {
    long indexSize=primaryIndex.length();
    long histogramCount=sstableMetadata.estimatedRowSize.count();
    long estimatedKeys=histogramCount > 0 && !sstableMetadata.estimatedRowSize.isOverflowed() ? histogramCount : estimateRowsFromIndex(primaryIndex);
    if (recreatebloom)     bf=LegacyBloomFilter.getFilter(estimatedKeys,15);
    IndexSummaryBuilder summaryBuilder=null;
    if (!summaryLoaded)     summaryBuilder=new IndexSummaryBuilder(estimatedKeys);
    long indexPosition;
    while ((indexPosition=primaryIndex.getFilePointer()) != indexSize) {
      ByteBuffer key=ByteBufferUtil.readWithShortLength(primaryIndex);
      RowIndexEntry indexEntry=RowIndexEntry.serializer.deserialize(primaryIndex,descriptor.version);
      DecoratedKey decoratedKey=decodeKey(partitioner,descriptor,key);
      if (first == null)       first=decoratedKey;
      last=decoratedKey;
      if (recreatebloom)       bf.add(decoratedKey.key);
      if (!summaryLoaded) {
        summaryBuilder.maybeAddEntry(decoratedKey,indexPosition);
        ibuilder.addPotentialBoundary(indexPosition);
        dbuilder.addPotentialBoundary(indexEntry.position);
      }
    }
    if (!summaryLoaded)     indexSummary=summaryBuilder.build(partitioner);
  }
  finally {
    FileUtils.closeQuietly(primaryIndex);
  }
  first=getMinimalKey(first);
  last=getMinimalKey(last);
}
