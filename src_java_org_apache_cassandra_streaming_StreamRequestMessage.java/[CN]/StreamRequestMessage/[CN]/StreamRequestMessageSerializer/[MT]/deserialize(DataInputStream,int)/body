{
  long sessionId=dis.readLong();
  InetAddress target=CompactEndpointSerializationHelper.deserialize(dis);
  boolean singleFile=dis.readBoolean();
  if (singleFile) {
    PendingFile file=PendingFile.serializer().deserialize(dis,version);
    return new StreamRequestMessage(target,file,sessionId);
  }
 else {
    String table=dis.readUTF();
    int size=dis.readInt();
    List<Range> ranges=(size == 0) ? null : new ArrayList<Range>();
    for (int i=0; i < size; ++i) {
      ranges.add((Range)AbstractBounds.serializer().deserialize(dis));
    }
    OperationType type=OperationType.RESTORE_REPLICA_COUNT;
    if (version > MessagingService.VERSION_07)     type=OperationType.valueOf(dis.readUTF());
    List<ColumnFamilyStore> stores=new ArrayList<ColumnFamilyStore>();
    if (version > MessagingService.VERSION_080) {
      int cfsSize=dis.readInt();
      for (int i=0; i < cfsSize; ++i)       stores.add(Table.open(table).getColumnFamilyStore(dis.readInt()));
    }
    return new StreamRequestMessage(target,ranges,table,stores,sessionId,type);
  }
}
