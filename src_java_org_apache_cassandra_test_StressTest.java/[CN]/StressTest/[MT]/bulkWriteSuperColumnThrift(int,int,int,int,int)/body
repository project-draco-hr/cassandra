{
  Random random=new Random();
  byte[] bytes=new byte[size];
  int ts=1;
  long time=System.currentTimeMillis();
  try {
    for (int key=1; key <= keys; key++) {
      String stringKey=new Integer(key).toString();
      stringKey=stringKey + keyFix_;
      batch_mutation_super_t bt=new batch_mutation_super_t();
      bt.key=stringKey;
      bt.table=tablename_;
      bt.cfmap=new HashMap<String,List<superColumn_t>>();
      ArrayList<superColumn_t> superColumn_arr=new ArrayList<superColumn_t>();
      for (int i=1; i <= supercolumns; i++) {
        ArrayList<column_t> column_arr=new ArrayList<column_t>();
        for (int j=1; j <= columns; j++) {
          random.nextBytes(bytes);
          column_arr.add(new column_t(columnFix_ + j,bytes,ts));
        }
        superColumn_arr.add(new superColumn_t(superColumnFix_ + i,column_arr));
      }
      bt.cfmap.put(columnFamilySuperColumn_,superColumn_arr);
      apply(bt);
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
  System.out.println(System.currentTimeMillis() - time);
}
