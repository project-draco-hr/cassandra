{
  super(descriptor,keyCount,repairedAt,metadata,metadataCollector,header,observers);
  txn.trackNew(this);
  if (compression) {
    dataFile=new CompressedSequentialWriter(new File(getFilename()),descriptor.filenameFor(Component.COMPRESSION_INFO),new File(descriptor.filenameFor(descriptor.digestComponent)),writerOption,metadata.params.compression,metadataCollector);
    dbuilder=SegmentedFile.getCompressedBuilder((CompressedSequentialWriter)dataFile);
  }
 else {
    dataFile=new ChecksummedSequentialWriter(new File(getFilename()),new File(descriptor.filenameFor(Component.CRC)),new File(descriptor.filenameFor(descriptor.digestComponent)),writerOption);
    dbuilder=SegmentedFile.getBuilder(DatabaseDescriptor.getDiskAccessMode(),false);
  }
  iwriter=new IndexWriter(keyCount);
  columnIndexWriter=new ColumnIndex(this.header,dataFile,descriptor.version,this.observers,getRowIndexEntrySerializer().indexInfoSerializer());
}
