{
  return new AbstractIterator<Row>(){
    private Iterator<List<ByteBuffer>> currentPage;
    protected Row computeNext(){
      try {
        while (currentPage == null || !currentPage.hasNext()) {
          if (pager.isExhausted())           return endOfData();
          currentPage=select.process(pager.fetchPage(pageSize)).rows.iterator();
        }
        return new Row(metadata,currentPage.next());
      }
 catch (      RequestValidationException|RequestExecutionException e) {
        throw new RuntimeException(e);
      }
    }
  }
;
}
