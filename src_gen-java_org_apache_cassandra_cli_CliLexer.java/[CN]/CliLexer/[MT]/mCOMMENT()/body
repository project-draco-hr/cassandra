{
  try {
    int _type=COMMENT;
    int _channel=DEFAULT_TOKEN_CHANNEL;
    int alt14=2;
    int LA14_0=input.LA(1);
    if ((LA14_0 == '-')) {
      alt14=1;
    }
 else     if ((LA14_0 == '/')) {
      alt14=2;
    }
 else {
      NoViableAltException nvae=new NoViableAltException("",14,0,input);
      throw nvae;
    }
switch (alt14) {
case 1:
{
        match("--");
        loop12:         do {
          int alt12=2;
          int LA12_0=input.LA(1);
          if (((LA12_0 >= '\u0000' && LA12_0 <= '\t') || (LA12_0 >= '\u000B' && LA12_0 <= '\f') || (LA12_0 >= '\u000E' && LA12_0 <= '\uFFFF'))) {
            alt12=1;
          }
switch (alt12) {
case 1:
{
              if ((input.LA(1) >= '\u0000' && input.LA(1) <= '\t') || (input.LA(1) >= '\u000B' && input.LA(1) <= '\f') || (input.LA(1) >= '\u000E' && input.LA(1) <= '\uFFFF')) {
                input.consume();
              }
 else {
                MismatchedSetException mse=new MismatchedSetException(null,input);
                recover(mse);
                throw mse;
              }
            }
          break;
default :
        break loop12;
    }
  }
 while (true);
  _channel=HIDDEN;
}
break;
case 2:
{
match("/*");
loop13: do {
int alt13=2;
int LA13_0=input.LA(1);
if ((LA13_0 == '*')) {
  int LA13_1=input.LA(2);
  if ((LA13_1 == '/')) {
    alt13=2;
  }
 else   if (((LA13_1 >= '\u0000' && LA13_1 <= '.') || (LA13_1 >= '0' && LA13_1 <= '\uFFFF'))) {
    alt13=1;
  }
}
 else if (((LA13_0 >= '\u0000' && LA13_0 <= ')') || (LA13_0 >= '+' && LA13_0 <= '\uFFFF'))) {
  alt13=1;
}
switch (alt13) {
case 1:
{
    matchAny();
  }
break;
default :
break loop13;
}
}
 while (true);
match("*/");
_channel=HIDDEN;
}
break;
}
state.type=_type;
state.channel=_channel;
}
  finally {
}
}
