{
  int m=lo + (hi - lo) / 2;
  if (hi - lo > 40) {
    int s=(hi - lo) / 8;
    medianOfThree(data,lo,lo + s,lo + 2 * s);
    medianOfThree(data,m,m - s,m + s);
    medianOfThree(data,hi - 1,hi - 1 - s,hi - 1 - 2 * s);
  }
  medianOfThree(data,lo,m,hi - 1);
  int pivot=lo;
  int a=lo + 1, b=lo + 1, c=hi, d=hi;
  while (true) {
    while (b < c) {
      int cmp=data.compare(b,pivot);
      if (cmp < 0) {
        b++;
      }
 else       if (cmp == 0) {
        data.swap(a,b);
        a++;
        b++;
      }
 else {
        break;
      }
    }
    while (b < c) {
      int cmp=data.compare(pivot,c - 1);
      if (cmp < 0) {
        c--;
      }
 else       if (cmp == 0) {
        data.swap(c - 1,d - 1);
        c--;
        d--;
      }
 else {
        break;
      }
    }
    if (b >= c)     break;
    data.swap(b,c - 1);
    b++;
    c--;
  }
  int n=Math.min(b - a,a - lo);
  swapRange(data,lo,b - n,n);
  n=Math.min(hi - d,d - c);
  swapRange(data,c,hi - n,n);
  result[0]=lo + b - a;
  result[1]=hi - (d - c);
}
