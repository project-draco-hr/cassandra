{
  Table table=Table.open(TABLE1);
  ColumnFamilyStore store=table.getColumnFamilyStore("Standard1");
  final int ROWS_PER_SSTABLE=10;
  final int SSTABLES=DatabaseDescriptor.getIndexInterval() * 3 / ROWS_PER_SSTABLE;
  store.disableAutoCompaction();
  long maxTimestampExpected=Long.MIN_VALUE;
  Set<DecoratedKey> inserted=new HashSet<DecoratedKey>();
  for (int j=0; j < SSTABLES; j++) {
    for (int i=0; i < ROWS_PER_SSTABLE; i++) {
      DecoratedKey key=Util.dk(String.valueOf(i % 2));
      RowMutation rm=new RowMutation(TABLE1,key.key);
      long timestamp=j * ROWS_PER_SSTABLE + i;
      rm.add(new QueryPath("Standard1",null,ByteBufferUtil.bytes(String.valueOf(i / 2))),ByteBufferUtil.EMPTY_BYTE_BUFFER,timestamp);
      maxTimestampExpected=Math.max(timestamp,maxTimestampExpected);
      rm.apply();
      inserted.add(key);
    }
    store.forceBlockingFlush();
    assertMaxTimestamp(store,maxTimestampExpected);
    assertEquals(inserted.toString(),inserted.size(),Util.getRangeSlice(store).size());
  }
  forceCompactions(store);
  assertEquals(inserted.size(),Util.getRangeSlice(store).size());
  assertMaxTimestamp(store,maxTimestampExpected);
  store.truncate();
}
