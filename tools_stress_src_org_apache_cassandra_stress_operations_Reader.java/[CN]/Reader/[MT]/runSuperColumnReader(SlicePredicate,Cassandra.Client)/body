{
  byte[] rawKey=generateKey();
  ByteBuffer key=ByteBuffer.wrap(rawKey);
  for (int j=0; j < session.getSuperColumns(); j++) {
    String superColumn='S' + Integer.toString(j);
    ColumnParent parent=new ColumnParent("Super1").setSuper_column(superColumn.getBytes(UTF_8));
    Context context=session.latency.time();
    boolean success=false;
    String exceptionMessage=null;
    for (int t=0; t < session.getRetryTimes(); t++) {
      if (success)       break;
      try {
        List<ColumnOrSuperColumn> columns;
        columns=client.get_slice(key,parent,predicate,session.getConsistencyLevel());
        success=(columns.size() != 0);
      }
 catch (      Exception e) {
        exceptionMessage=getExceptionMessage(e);
        success=false;
      }
    }
    if (!success) {
      error(String.format("Operation [%d] retried %d times - error reading key %s %s%n",index,session.getRetryTimes(),new String(rawKey),(exceptionMessage == null) ? "" : "(" + exceptionMessage + ")"));
    }
    session.operations.getAndIncrement();
    session.keys.getAndIncrement();
    context.stop();
  }
}
