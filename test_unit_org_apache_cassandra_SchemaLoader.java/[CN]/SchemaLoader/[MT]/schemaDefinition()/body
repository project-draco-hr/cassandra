{
  List<KSMetaData> schema=new ArrayList<KSMetaData>();
  String ks1="Keyspace1";
  String ks2="Keyspace2";
  String ks3="Keyspace3";
  String ks4="Keyspace4";
  String ks5="Keyspace5";
  String ks_kcs="KeyCacheSpace";
  String ks_rcs="RowCacheSpace";
  Class<? extends AbstractReplicationStrategy> simple=SimpleStrategy.class;
  Map<String,String> no_opts=Collections.<String,String>emptyMap();
  int rep_factor1=1;
  int rep_factor2=2;
  int rep_factor3=3;
  int rep_factor5=5;
  ColumnFamilyType st=ColumnFamilyType.Standard;
  ColumnFamilyType su=ColumnFamilyType.Super;
  AbstractType bytes=BytesType.instance;
  schema.add(new KSMetaData(ks1,simple,no_opts,rep_factor1,standardCFMD(ks1,"Standard1"),standardCFMD(ks1,"Standard2"),standardCFMD(ks1,"Standard3"),standardCFMD(ks1,"Standard4"),standardCFMD(ks1,"StandardLong1"),standardCFMD(ks1,"StandardLong2"),superCFMD(ks1,"Super1",LongType.instance),superCFMD(ks1,"Super2",LongType.instance),superCFMD(ks1,"Super3",LongType.instance),superCFMD(ks1,"Super4",UTF8Type.instance),superCFMD(ks1,"Super5",bytes),indexCFMD(ks1,"Indexed1",true),indexCFMD(ks1,"Indexed2",false),new CFMetaData(ks1,"StandardInteger1",st,IntegerType.instance,null).keyCacheSize(0),new CFMetaData(ks1,"Counter1",st,bytes,null).defaultValidator(CounterColumnType.instance),new CFMetaData(ks1,"SuperCounter1",su,bytes,bytes).defaultValidator(CounterColumnType.instance),jdbcCFMD(ks1,"JdbcInteger",IntegerType.instance),jdbcCFMD(ks1,"JdbcUtf8",UTF8Type.instance),jdbcCFMD(ks1,"JdbcLong",LongType.instance),jdbcCFMD(ks1,"JdbcBytes",bytes),jdbcCFMD(ks1,"JdbcAscii",AsciiType.instance)));
  schema.add(new KSMetaData(ks2,simple,no_opts,rep_factor1,standardCFMD(ks2,"Standard1"),standardCFMD(ks2,"Standard3"),superCFMD(ks2,"Super3",bytes),superCFMD(ks2,"Super4",TimeUUIDType.instance),indexCFMD(ks2,"Indexed1",true)));
  schema.add(new KSMetaData(ks3,simple,no_opts,rep_factor5,standardCFMD(ks3,"Standard1"),indexCFMD(ks3,"Indexed1",true)));
  schema.add(new KSMetaData(ks4,simple,no_opts,rep_factor3,standardCFMD(ks4,"Standard1"),standardCFMD(ks4,"Standard3"),superCFMD(ks4,"Super3",bytes),superCFMD(ks4,"Super4",TimeUUIDType.instance),new CFMetaData(ks4,"Super5",su,TimeUUIDType.instance,bytes).keyCacheSize(0)));
  schema.add(new KSMetaData(ks5,simple,no_opts,rep_factor2,standardCFMD(ks5,"Standard1"),standardCFMD(ks5,"Counter1").defaultValidator(CounterColumnType.instance)));
  schema.add(new KSMetaData(ks_kcs,simple,no_opts,rep_factor1,standardCFMD(ks_kcs,"Standard1").keyCacheSize(0.5),standardCFMD(ks_kcs,"Standard2").keyCacheSize(1.0)));
  schema.add(new KSMetaData(ks_rcs,simple,no_opts,rep_factor1,standardCFMD(ks_rcs,"CFWithoutCache"),standardCFMD(ks_rcs,"CachedCF").rowCacheSize(100)));
  return schema;
}
