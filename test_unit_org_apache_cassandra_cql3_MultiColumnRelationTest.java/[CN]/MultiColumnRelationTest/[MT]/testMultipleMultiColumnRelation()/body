{
  for (  String tableSuffix : new String[]{"","_compact"}) {
    execute("INSERT INTO %s.multiple_clustering" + tableSuffix + " (a, b, c, d) VALUES (0, 0, 0, 0)");
    execute("INSERT INTO %s.multiple_clustering" + tableSuffix + " (a, b, c, d) VALUES (0, 0, 1, 0)");
    execute("INSERT INTO %s.multiple_clustering" + tableSuffix + " (a, b, c, d) VALUES (0, 0, 1, 1)");
    execute("INSERT INTO %s.multiple_clustering" + tableSuffix + " (a, b, c, d) VALUES (0, 1, 0, 0)");
    execute("INSERT INTO %s.multiple_clustering" + tableSuffix + " (a, b, c, d) VALUES (0, 1, 1, 0)");
    execute("INSERT INTO %s.multiple_clustering" + tableSuffix + " (a, b, c, d) VALUES (0, 1, 1, 1)");
    UntypedResultSet results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c, d) = (0, 0)");
    assertEquals(1,results.size());
    checkRow(0,results,0,1,0,0);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c) = (0) and (d) = (0)");
    assertEquals(1,results.size());
    checkRow(0,results,0,1,0,0);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c) IN ((0))");
    assertEquals(1,results.size());
    checkRow(0,results,0,1,0,0);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c) IN ((0), (1))");
    assertEquals(3,results.size());
    checkRow(0,results,0,1,0,0);
    checkRow(1,results,0,1,1,0);
    checkRow(2,results,0,1,1,1);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c, d) IN ((0, 0))");
    assertEquals(1,results.size());
    checkRow(0,results,0,1,0,0);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c, d) IN ((0, 0), (1, 1))");
    assertEquals(2,results.size());
    checkRow(0,results,0,1,0,0);
    checkRow(1,results,0,1,1,1);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c, d) > (0, 0)");
    assertEquals(2,results.size());
    checkRow(0,results,0,1,1,0);
    checkRow(1,results,0,1,1,1);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c, d) > (0, 0) and (c) <= (1)");
    assertEquals(2,results.size());
    checkRow(0,results,0,1,1,0);
    checkRow(1,results,0,1,1,1);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c, d) > (0, 0) and c <= 1");
    assertEquals(2,results.size());
    checkRow(0,results,0,1,1,0);
    checkRow(1,results,0,1,1,1);
    results=execute("SELECT * FROM %s.multiple_clustering" + tableSuffix + " WHERE a = 0 and (b) = (1) and (c, d) >= (0, 0) and (c, d) < (1, 1)");
    assertEquals(2,results.size());
    checkRow(0,results,0,1,0,0);
    checkRow(1,results,0,1,1,0);
  }
}
