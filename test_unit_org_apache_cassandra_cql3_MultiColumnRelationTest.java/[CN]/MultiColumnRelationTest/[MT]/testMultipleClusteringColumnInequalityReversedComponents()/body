{
  for (  String tableSuffix : new String[]{"","_compact"}) {
    execute("DELETE FROM %s.multiple_clustering_reversed" + tableSuffix + " WHERE a=0");
    execute("INSERT INTO %s.multiple_clustering_reversed" + tableSuffix + " (a, b, c, d) VALUES (0, 1, 0, 0)");
    execute("INSERT INTO %s.multiple_clustering_reversed" + tableSuffix + " (a, b, c, d) VALUES (0, 1, 1, 1)");
    execute("INSERT INTO %s.multiple_clustering_reversed" + tableSuffix + " (a, b, c, d) VALUES (0, 1, 1, 0)");
    execute("INSERT INTO %s.multiple_clustering_reversed" + tableSuffix + " (a, b, c, d) VALUES (0, 0, 0, 0)");
    execute("INSERT INTO %s.multiple_clustering_reversed" + tableSuffix + " (a, b, c, d) VALUES (0, 0, 1, 1)");
    execute("INSERT INTO %s.multiple_clustering_reversed" + tableSuffix + " (a, b, c, d) VALUES (0, 0, 1, 0)");
    UntypedResultSet results=execute("SELECT * FROM %s.multiple_clustering_reversed" + tableSuffix + " WHERE a=0 AND (b) > (0)");
    assertEquals(3,results.size());
    checkRow(0,results,0,1,0,0);
    checkRow(1,results,0,1,1,1);
    checkRow(2,results,0,1,1,0);
    results=execute("SELECT * FROM %s.multiple_clustering_reversed" + tableSuffix + " WHERE a=0 AND (b) >= (0)");
    assertEquals(6,results.size());
    checkRow(0,results,0,1,0,0);
    checkRow(1,results,0,1,1,1);
    checkRow(2,results,0,1,1,0);
    checkRow(3,results,0,0,0,0);
    checkRow(4,results,0,0,1,1);
    checkRow(5,results,0,0,1,0);
    results=execute("SELECT * FROM %s.multiple_clustering_reversed" + tableSuffix + " WHERE a=0 AND (b) < (1)");
    assertEquals(3,results.size());
    checkRow(0,results,0,0,0,0);
    checkRow(1,results,0,0,1,1);
    checkRow(2,results,0,0,1,0);
    results=execute("SELECT * FROM %s.multiple_clustering_reversed" + tableSuffix + " WHERE a=0 AND (b) <= (1)");
    assertEquals(6,results.size());
    checkRow(0,results,0,1,0,0);
    checkRow(1,results,0,1,1,1);
    checkRow(2,results,0,1,1,0);
    checkRow(3,results,0,0,0,0);
    checkRow(4,results,0,0,1,1);
    checkRow(5,results,0,0,1,0);
    results=execute("SELECT * FROM %s.multiple_clustering_reversed" + tableSuffix + " WHERE a=0 AND (b, c) > (1, 0)");
    assertEquals(0,results.size());
  }
}
