{
  super(metadata,in,helper);
  this.header=header;
  this.clusteringDeserializer=new ClusteringPrefix.Deserializer(metadata.comparator,in,header);
  this.row=new ReusableRow(metadata.clusteringColumns().size(),header.columns().regulars,true,metadata.isCounter());
  this.markerBuilder=new RangeTombstoneMarker.Builder(metadata.clusteringColumns().size());
}
