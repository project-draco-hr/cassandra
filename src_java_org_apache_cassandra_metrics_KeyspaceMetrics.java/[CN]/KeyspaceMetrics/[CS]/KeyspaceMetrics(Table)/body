{
  factory=new KeyspaceMetricNameFactory(ks);
  memtableColumnsCount=Metrics.newGauge(factory.createMetricName("MemtableColumnsCount"),new Gauge<Long>(){
    public Long value(){
      long total=0;
      for (      ColumnFamilyStore cf : ks.getColumnFamilyStores()) {
        total+=cf.metric.memtableColumnsCount.value();
      }
      return total;
    }
  }
);
  memtableDataSize=Metrics.newGauge(factory.createMetricName("MemtableDataSize"),new Gauge<Long>(){
    public Long value(){
      long total=0;
      for (      ColumnFamilyStore cf : ks.getColumnFamilyStores()) {
        total+=cf.metric.memtableDataSize.value();
      }
      return total;
    }
  }
);
  memtableSwitchCount=Metrics.newGauge(factory.createMetricName("MemtableSwitchCount"),new Gauge<Long>(){
    public Long value(){
      long sum=0;
      for (      ColumnFamilyStore cf : ks.getColumnFamilyStores())       sum+=cf.metric.memtableSwitchCount.count();
      return sum;
    }
  }
);
  pendingTasks=Metrics.newGauge(factory.createMetricName("PendingTasks"),new Gauge<Integer>(){
    public Integer value(){
      return Table.switchLock.getQueueLength();
    }
  }
);
  liveDiskSpaceUsed=Metrics.newGauge(factory.createMetricName("LiveDiskSpaceUsed"),new Gauge<Long>(){
    public Long value(){
      long sum=0;
      for (      ColumnFamilyStore cf : ks.getColumnFamilyStores()) {
        sum+=cf.metric.liveDiskSpaceUsed.count();
      }
      return sum;
    }
  }
);
  totalDiskSpaceUsed=Metrics.newGauge(factory.createMetricName("TotalDiskSpaceUsed"),new Gauge<Long>(){
    public Long value(){
      long sum=0;
      for (      ColumnFamilyStore cf : ks.getColumnFamilyStores()) {
        sum+=cf.metric.totalDiskSpaceUsed.count();
      }
      return sum;
    }
  }
);
  bloomFilterDiskSpaceUsed=Metrics.newGauge(factory.createMetricName("BloomFilterDiskSpaceUsed"),new Gauge<Long>(){
    public Long value(){
      long total=0;
      for (      ColumnFamilyStore cf : ks.getColumnFamilyStores())       total+=cf.metric.bloomFilterDiskSpaceUsed.value();
      return total;
    }
  }
);
}
