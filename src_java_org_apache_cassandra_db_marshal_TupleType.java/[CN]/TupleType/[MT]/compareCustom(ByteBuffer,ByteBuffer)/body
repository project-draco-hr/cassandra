{
  if (!o1.hasRemaining() || !o2.hasRemaining())   return o1.hasRemaining() ? 1 : o2.hasRemaining() ? -1 : 0;
  ByteBuffer bb1=o1.duplicate();
  ByteBuffer bb2=o2.duplicate();
  for (int i=0; bb1.remaining() > 0 && bb2.remaining() > 0; i++) {
    AbstractType<?> comparator=types.get(i);
    int size1=bb1.getInt();
    int size2=bb2.getInt();
    if (size1 < 0) {
      if (size2 < 0)       continue;
      return -1;
    }
    if (size2 < 0)     return 1;
    ByteBuffer value1=ByteBufferUtil.readBytes(bb1,size1);
    ByteBuffer value2=ByteBufferUtil.readBytes(bb2,size2);
    int cmp=comparator.compare(value1,value2);
    if (cmp != 0)     return cmp;
  }
  while (bb1.remaining() > 0) {
    int size=bb1.getInt();
    if (size > 0)     return 1;
  }
  while (bb2.remaining() > 0) {
    int size=bb2.getInt();
    if (size > 0)     return -1;
  }
  return 0;
}
