{
  List<String> fieldStrings=AbstractCompositeType.split(source);
  if (fieldStrings.size() > size())   throw new MarshalException(String.format("Invalid tuple literal: too many elements. Type %s expects %d but got %d",asCQL3Type(),size(),fieldStrings.size()));
  ByteBuffer[] fields=new ByteBuffer[fieldStrings.size()];
  for (int i=0; i < fieldStrings.size(); i++) {
    String fieldString=fieldStrings.get(i);
    if (fieldString.equals("@"))     continue;
    AbstractType<?> type=type(i);
    fields[i]=type.fromString(fieldString.replaceAll("\\\\:",":").replaceAll("\\\\@","@"));
  }
  return buildValue(fields);
}
