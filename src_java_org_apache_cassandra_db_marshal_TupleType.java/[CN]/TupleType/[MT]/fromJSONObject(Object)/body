{
  if (!(parsed instanceof List))   throw new MarshalException(String.format("Expected a list representation of a tuple, but got a %s: %s",parsed.getClass().getSimpleName(),parsed));
  List list=(List)parsed;
  if (list.size() > types.size())   throw new MarshalException(String.format("Tuple contains extra items (expected %s): %s",types.size(),parsed));
 else   if (types.size() > list.size())   throw new MarshalException(String.format("Tuple is missing items (expected %s): %s",types.size(),parsed));
  List<Term> terms=new ArrayList<>(list.size());
  Iterator<AbstractType<?>> typeIterator=types.iterator();
  for (  Object element : list) {
    if (element == null) {
      typeIterator.next();
      terms.add(Constants.NULL_VALUE);
    }
 else {
      terms.add(typeIterator.next().fromJSONObject(element));
    }
  }
  return new Tuples.DelayedValue(this,terms);
}
