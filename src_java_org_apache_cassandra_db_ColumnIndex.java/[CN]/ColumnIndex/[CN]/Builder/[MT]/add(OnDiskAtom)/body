{
  atomCount++;
  if (firstColumn == null) {
    firstColumn=column;
    startPosition=endPosition;
    if (tombstoneTracker != null) {
      long tombstoneSize=tombstoneTracker.writeOpenedMarker(firstColumn,output,atomSerializer);
      endPosition+=tombstoneSize;
      openedMarkerSize+=tombstoneSize;
    }
    blockSize=0;
  }
  long size=column.serializedSizeForSSTable();
  endPosition+=size;
  blockSize+=size;
  if (blockSize >= DatabaseDescriptor.getColumnIndexSize()) {
    IndexHelper.IndexInfo cIndexInfo=new IndexHelper.IndexInfo(firstColumn.name(),column.name(),indexOffset + startPosition,endPosition - startPosition);
    result.columnsIndex.add(cIndexInfo);
    firstColumn=null;
    lastBlockClosing=column;
  }
  if (output != null)   atomSerializer.serializeForSSTable(column,output);
  if (tombstoneTracker != null)   tombstoneTracker.update(column);
  lastColumn=column;
}
