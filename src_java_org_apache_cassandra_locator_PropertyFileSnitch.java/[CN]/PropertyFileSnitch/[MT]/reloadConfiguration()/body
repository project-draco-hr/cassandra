{
  HashMap<InetAddress,String[]> reloadedMap=new HashMap<InetAddress,String[]>();
  String rackPropertyFilename=FBUtilities.resourceToFile(RACK_PROPERTY_FILENAME);
  Properties properties=new Properties();
  try {
    properties.load(new FileReader(rackPropertyFilename));
  }
 catch (  IOException e) {
    throw new ConfigurationException("Unable to read " + RACK_PROPERTY_FILENAME,e);
  }
  for (  Map.Entry<Object,Object> entry : properties.entrySet()) {
    String key=(String)entry.getKey();
    String value=(String)entry.getValue();
    if (key.equals("default")) {
      defaultDCRack=value.split(":");
      if (defaultDCRack.length < 2)       defaultDCRack=new String[]{"default","default"};
    }
 else {
      InetAddress host;
      String hostString=key.replace("/","");
      try {
        host=InetAddress.getByName(hostString);
      }
 catch (      UnknownHostException e) {
        throw new ConfigurationException("Unknown host " + hostString,e);
      }
      String[] token=value.split(":");
      if (token.length < 2)       token=new String[]{"default","default"};
      reloadedMap.put(host,token);
    }
  }
  logger.debug("loaded network topology {}",FBUtilities.toString(reloadedMap));
  endpointMap=reloadedMap;
  clearEndpointCache();
}
