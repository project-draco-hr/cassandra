{
  Options options=Options.parseArgs(args);
  try {
    Schema.instance.loadFromDisk(false);
    if (Schema.instance.getKSMetaData(options.keyspaceName) == null)     throw new IllegalArgumentException(String.format("Unknown keyspace %s",options.keyspaceName));
    Keyspace keyspace=Keyspace.openWithoutSSTables(options.keyspaceName);
    ColumnFamilyStore cfs=null;
    for (    ColumnFamilyStore c : keyspace.getValidColumnFamilies(true,false,options.cfName)) {
      if (c.name.equals(options.cfName)) {
        cfs=c;
        break;
      }
    }
    if (cfs == null)     throw new IllegalArgumentException(String.format("Unknown table %s.%s",options.keyspaceName,options.cfName));
    String snapshotName="pre-scrub-" + System.currentTimeMillis();
    OutputHandler handler=new OutputHandler.SystemOutput(options.verbose,options.debug);
    Directories.SSTableLister lister=cfs.directories.sstableLister().skipTemporary(true);
    List<SSTableReader> sstables=new ArrayList<>();
    for (    Map.Entry<Descriptor,Set<Component>> entry : lister.list().entrySet()) {
      Set<Component> components=entry.getValue();
      if (!components.contains(Component.DATA))       continue;
      try {
        SSTableReader sstable=SSTableReader.openNoValidation(entry.getKey(),components,cfs);
        sstables.add(sstable);
        File snapshotDirectory=Directories.getSnapshotDirectory(sstable.descriptor,snapshotName);
        sstable.createLinks(snapshotDirectory.getPath());
      }
 catch (      Exception e) {
        JVMStabilityInspector.inspectThrowable(e);
        System.err.println(String.format("Error Loading %s: %s",entry.getKey(),e.getMessage()));
        if (options.debug)         e.printStackTrace(System.err);
      }
    }
    System.out.println(String.format("Pre-scrub sstables snapshotted into snapshot %s",snapshotName));
    if (!options.manifestCheckOnly) {
      for (      SSTableReader sstable : sstables) {
        try (LifecycleTransaction txn=LifecycleTransaction.offline(OperationType.SCRUB,sstable)){
          txn.obsoleteOriginals();
          try (Scrubber scrubber=new Scrubber(cfs,txn,options.skipCorrupted,handler,true,!options.noValidate)){
            scrubber.scrub();
          }
 catch (          Throwable t) {
            if (!cfs.rebuildOnFailedScrub(t)) {
              System.out.println(t.getMessage());
              throw t;
            }
          }
        }
 catch (        Exception e) {
          System.err.println(String.format("Error scrubbing %s: %s",sstable,e.getMessage()));
          e.printStackTrace(System.err);
        }
      }
    }
    checkManifest(cfs.getCompactionStrategyManager(),cfs,sstables);
    CompactionManager.instance.finishCompactionsAndShutdown(5,TimeUnit.MINUTES);
    TransactionLogs.waitForDeletions();
    System.exit(0);
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    if (options.debug)     e.printStackTrace(System.err);
    System.exit(1);
  }
}
