{
  if ((r instanceof Future<?>) && ((Future<?>)r).isDone()) {
    try {
      ((Future<?>)r).get();
    }
 catch (    InterruptedException e) {
      throw new AssertionError(e);
    }
catch (    CancellationException e) {
      logger.debug("Task cancelled",e);
    }
catch (    ExecutionException e) {
      Throwable actualException=e.getCause();
      if (actualException instanceof UserInterruptedException)       logger.info("Task interrupted by user: " + actualException);
 else       if (Thread.getDefaultUncaughtExceptionHandler() == null)       logger.error("Error in ThreadPoolExecutor",actualException);
 else       Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(),actualException);
    }
  }
  if (t != null) {
    if (Thread.getDefaultUncaughtExceptionHandler() == null)     logger.error("Error in ThreadPoolExecutor",t);
 else     Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(),t);
  }
}
