{
  CFMetaData cfMetaData=newCFMetaData(Sort.ASC,Sort.ASC,Sort.ASC,Sort.ASC);
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  ByteBuffer value3=ByteBufferUtil.bytes(3);
  ByteBuffer value4=ByteBufferUtil.bytes(4);
  ByteBuffer value5=ByteBufferUtil.bytes(5);
  Restriction singleEq=newSingleEq(cfMetaData,0,value1);
  Restriction multiIN=newMultiIN(cfMetaData,1,asList(value2,value3),asList(value4,value5));
  ClusteringColumnRestrictions restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(singleEq).mergeWith(multiIN);
  SortedSet<Slice.Bound> bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(2,bounds.size());
  assertStartBound(get(bounds,0),true,value1,value2,value3);
  assertStartBound(get(bounds,1),true,value1,value4,value5);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(2,bounds.size());
  assertEndBound(get(bounds,0),true,value1,value2,value3);
  assertEndBound(get(bounds,1),true,value1,value4,value5);
  singleEq=newSingleEq(cfMetaData,0,value1);
  multiIN=newMultiIN(cfMetaData,1,asList(value2,value3));
  restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(multiIN).mergeWith(singleEq);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),true,value1,value2,value3);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),true,value1,value2,value3);
  singleEq=newSingleEq(cfMetaData,0,value1);
  Restriction singleEq2=newSingleEq(cfMetaData,1,value5);
  multiIN=newMultiIN(cfMetaData,2,asList(value2,value3),asList(value4,value5));
  restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(singleEq).mergeWith(multiIN).mergeWith(singleEq2);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(2,bounds.size());
  assertStartBound(get(bounds,0),true,value1,value5,value2,value3);
  assertStartBound(get(bounds,1),true,value1,value5,value4,value5);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(2,bounds.size());
  assertEndBound(get(bounds,0),true,value1,value5,value2,value3);
  assertEndBound(get(bounds,1),true,value1,value5,value4,value5);
}
