{
  CFMetaData cfMetaData=newCFMetaData(Sort.ASC,Sort.ASC);
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  Restriction slice=newMultiSlice(cfMetaData,0,Bound.START,false,value1,value2);
  ClusteringColumnRestrictions restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(slice);
  SortedSet<ClusteringBound> bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),false,value1,value2);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEmptyEnd(get(bounds,0));
  slice=newMultiSlice(cfMetaData,0,Bound.START,true,value1,value2);
  restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),true,value1,value2);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEmptyEnd(get(bounds,0));
  slice=newMultiSlice(cfMetaData,0,Bound.END,true,value1,value2);
  restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEmptyStart(get(bounds,0));
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),true,value1,value2);
  slice=newMultiSlice(cfMetaData,0,Bound.END,false,value1,value2);
  restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEmptyStart(get(bounds,0));
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),false,value1,value2);
  slice=newMultiSlice(cfMetaData,0,Bound.START,false,value1,value2);
  Restriction slice2=newMultiSlice(cfMetaData,0,Bound.END,false,value2);
  restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(slice).mergeWith(slice2);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),false,value1,value2);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),false,value2);
  slice=newMultiSlice(cfMetaData,0,Bound.START,true,value1,value2);
  slice2=newMultiSlice(cfMetaData,0,Bound.END,true,value2,value1);
  restrictions=new ClusteringColumnRestrictions(cfMetaData);
  restrictions=restrictions.mergeWith(slice).mergeWith(slice2);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),true,value1,value2);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),true,value2,value1);
}
