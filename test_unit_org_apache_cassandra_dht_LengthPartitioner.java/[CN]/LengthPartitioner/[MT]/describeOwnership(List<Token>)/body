{
  Map<Token,Float> allTokens=new HashMap<Token,Float>();
  List<Range<Token>> sortedRanges=new ArrayList<Range<Token>>();
  Token lastToken=sortedTokens.get(sortedTokens.size() - 1);
  for (  Token node : sortedTokens) {
    allTokens.put(node,new Float(0.0));
    sortedRanges.add(new Range<Token>(lastToken,node));
    lastToken=node;
  }
  for (  String ks : Schema.instance.getKeyspaces()) {
    for (    CFMetaData cfmd : Schema.instance.getTablesAndViews(ks)) {
      for (      Range<Token> r : sortedRanges) {
        allTokens.put(r.right,allTokens.get(r.right) + StorageService.instance.getSplits(ks,cfmd.cfName,r,1).size());
      }
    }
  }
  Float total=new Float(0.0);
  for (  Float f : allTokens.values())   total+=f;
  for (  Map.Entry<Token,Float> row : allTokens.entrySet())   allTokens.put(row.getKey(),row.getValue() / total);
  return allTokens;
}
