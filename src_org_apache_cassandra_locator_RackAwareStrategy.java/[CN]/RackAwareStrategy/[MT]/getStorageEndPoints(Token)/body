{
  int startIndex;
  List<EndPoint> list=new ArrayList<EndPoint>();
  boolean bDataCenter=false;
  boolean bOtherRack=false;
  int foundCount=0;
  Map<Token,EndPoint> tokenToEndPointMap=tokenMetadata_.cloneTokenEndPointMap();
  List tokens=new ArrayList(tokenToEndPointMap.keySet());
  Collections.sort(tokens);
  int index=Collections.binarySearch(tokens,token);
  if (index < 0) {
    index=(index + 1) * (-1);
    if (index >= tokens.size())     index=0;
  }
  int totalNodes=tokens.size();
  list.add(tokenToEndPointMap.get(tokens.get(index)));
  foundCount++;
  if (replicas_ == 1) {
    return list.toArray(new EndPoint[list.size()]);
  }
  startIndex=(index + 1) % totalNodes;
  IEndPointSnitch endPointSnitch=StorageService.instance().getEndPointSnitch();
  for (int i=startIndex, count=1; count < totalNodes && foundCount < replicas_; ++count, i=(i + 1) % totalNodes) {
    try {
      if (!endPointSnitch.isInSameDataCenter(tokenToEndPointMap.get(tokens.get(index)),tokenToEndPointMap.get(tokens.get(i)))) {
        if (!bDataCenter) {
          list.add(tokenToEndPointMap.get(tokens.get(i)));
          bDataCenter=true;
          foundCount++;
        }
        continue;
      }
      if (!endPointSnitch.isOnSameRack(tokenToEndPointMap.get(tokens.get(index)),tokenToEndPointMap.get(tokens.get(i))) && endPointSnitch.isInSameDataCenter(tokenToEndPointMap.get(tokens.get(index)),tokenToEndPointMap.get(tokens.get(i)))) {
        if (!bOtherRack) {
          list.add(tokenToEndPointMap.get(tokens.get(i)));
          bOtherRack=true;
          foundCount++;
        }
      }
    }
 catch (    UnknownHostException e) {
      logger_.debug(LogUtil.throwableToString(e));
    }
  }
  for (int i=startIndex, count=1; count < totalNodes && foundCount < replicas_; ++count, i=(i + 1) % totalNodes) {
    if (!list.contains(tokenToEndPointMap.get(tokens.get(i)))) {
      list.add(tokenToEndPointMap.get(tokens.get(i)));
      foundCount++;
    }
  }
  retrofitPorts(list);
  return list.toArray(new EndPoint[list.size()]);
}
