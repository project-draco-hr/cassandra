{
  IDiskAtomFilter filter=new IdentityQueryFilter();
  Comparator<Column> fcomp=filter.getColumnComparator(returnCF.getComparator());
  MergeIterator.Reducer<Column,Column> reducer=new MergeIterator.Reducer<Column,Column>(){
    ColumnFamily container=returnCF.cloneMeShallow();
    public void reduce(    Column column){
      container.addColumn(column);
      if (indexer == SecondaryIndexManager.nullUpdater)       return;
      if ((!column.isMarkedForDelete(System.currentTimeMillis()) && !container.getColumn(column.name()).equals(column)) || returnCF.deletionInfo().isDeleted(column.name(),CompactionManager.NO_GC)) {
        indexer.remove(column);
      }
    }
    protected Column getReduced(){
      Column c=container.iterator().next();
      container.clear();
      return c;
    }
  }
;
  Iterator<Column> reduced=MergeIterator.get(data,fcomp,reducer);
  filter.collectReducedColumns(returnCF,reduced,CompactionManager.NO_GC,System.currentTimeMillis());
}
