{
switch (type) {
case STRING:
    return ByteBuffer.wrap(text.getBytes());
case LONG:
  try {
    return ByteBufferUtil.bytes(Long.parseLong(text));
  }
 catch (  NumberFormatException e) {
    throw new InvalidRequestException(text + " is not valid for type long");
  }
case INTEGER:
try {
  return ByteBufferUtil.bytes(Integer.parseInt(text));
}
 catch (NumberFormatException e) {
  throw new InvalidRequestException(text + " is not valid for type int");
}
case UNICODE:
try {
return ByteBuffer.wrap(text.getBytes("UTF-8"));
}
 catch (UnsupportedEncodingException e) {
throw new RuntimeException(e);
}
}
return null;
}
