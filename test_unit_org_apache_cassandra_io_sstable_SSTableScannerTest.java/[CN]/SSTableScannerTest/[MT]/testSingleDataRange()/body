{
  Keyspace keyspace=Keyspace.open(KEYSPACE);
  ColumnFamilyStore store=keyspace.getColumnFamilyStore(TABLE);
  store.clearUnsafe();
  store.disableAutoCompaction();
  for (int i=2; i < 10; i++)   insertRowWithKey(i);
  store.forceBlockingFlush();
  assertEquals(1,store.getSSTables().size());
  SSTableReader sstable=store.getSSTables().iterator().next();
  ISSTableScanner scanner=sstable.getScanner();
  for (int i=2; i < 10; i++)   assertEquals(toKey(i),new String(scanner.next().getKey().getKey().array()));
  scanner.close();
  assertScanMatches(sstable,3,6,3,6);
  assertScanMatches(sstable,1,9,2,9);
  assertScanMatches(sstable,2,9,2,9);
  assertScanMatches(sstable,3,9,3,9);
  assertScanMatches(sstable,1,8,2,8);
  assertScanMatches(sstable,1,9,2,9);
  assertScanMatches(sstable,1,9,2,9);
  assertScanMatches(sstable,2,2,2,2);
  assertScanMatches(sstable,5,5,5,5);
  assertScanMatches(sstable,9,9,9,9);
  assertScanEmpty(sstable,0,1);
  assertScanEmpty(sstable,10,11);
  assertScanMatches(sstable,5,3,2,3,5,9);
  assertScanMatches(sstable,5,2,2,2,5,9);
  assertScanMatches(sstable,5,1,5,9);
  assertScanMatches(sstable,5,Integer.MIN_VALUE,5,9);
  assertScanMatches(sstable,9,8,2,8,9,9);
  assertScanMatches(sstable,9,3,2,3,9,9);
  assertScanMatches(sstable,9,2,2,2,9,9);
  assertScanMatches(sstable,9,1,9,9);
  assertScanMatches(sstable,9,Integer.MIN_VALUE,9,9);
  assertScanMatches(sstable,8,3,2,3,8,9);
  assertScanMatches(sstable,8,2,2,2,8,9);
  assertScanMatches(sstable,8,1,8,9);
  assertScanMatches(sstable,8,Integer.MIN_VALUE,8,9);
  assertScanMatches(sstable,10,9,2,9);
  assertScanMatches(sstable,10,5,2,5);
  assertScanMatches(sstable,10,2,2,2);
  assertScanEmpty(sstable,10,1);
  assertScanEmpty(sstable,10,Integer.MIN_VALUE);
  assertScanMatches(sstable,11,10,2,9);
  assertScanMatches(sstable,11,9,2,9);
  assertScanMatches(sstable,11,5,2,5);
  assertScanMatches(sstable,11,2,2,2);
  assertScanEmpty(sstable,11,1);
  assertScanEmpty(sstable,11,Integer.MIN_VALUE);
  assertScanMatches(sstable,3,1,3,9);
  assertScanMatches(sstable,3,Integer.MIN_VALUE,3,9);
  assertScanMatches(sstable,2,1,2,9);
  assertScanMatches(sstable,2,Integer.MIN_VALUE,2,9);
  assertScanMatches(sstable,1,0,2,9);
  assertScanMatches(sstable,1,Integer.MIN_VALUE,2,9);
  assertScanMatches(sstable,1,-1,2,9);
  assertScanMatches(sstable,1,Integer.MIN_VALUE,2,9);
  assertScanMatches(sstable,1,0,2,9);
}
