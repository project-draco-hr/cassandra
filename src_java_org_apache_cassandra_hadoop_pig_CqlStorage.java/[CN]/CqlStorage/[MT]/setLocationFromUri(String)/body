{
  try {
    if (!location.startsWith("cql://"))     throw new Exception("Bad scheme: " + location);
    String[] urlParts=location.split("\\?");
    if (urlParts.length > 1) {
      Map<String,String> urlQuery=getQueryMap(urlParts[1]);
      if (urlQuery.containsKey("page_size"))       pageSize=Integer.parseInt(urlQuery.get("page_size"));
      if (urlQuery.containsKey("columns"))       columns=urlQuery.get("columns");
      if (urlQuery.containsKey("output_query"))       outputQuery=urlQuery.get("output_query");
      if (urlQuery.containsKey("where_clause"))       whereClause=urlQuery.get("where_clause");
      if (urlQuery.containsKey("split_size"))       splitSize=Integer.parseInt(urlQuery.get("split_size"));
      if (urlQuery.containsKey("partitioner"))       partitionerClass=urlQuery.get("partitioner");
      if (urlQuery.containsKey("use_secondary"))       usePartitionFilter=Boolean.parseBoolean(urlQuery.get("use_secondary"));
    }
    String[] parts=urlParts[0].split("/+");
    String[] credentialsAndKeyspace=parts[1].split("@");
    if (credentialsAndKeyspace.length > 1) {
      String[] credentials=credentialsAndKeyspace[0].split(":");
      username=credentials[0];
      password=credentials[1];
      keyspace=credentialsAndKeyspace[1];
    }
 else {
      keyspace=parts[1];
    }
    column_family=parts[2];
  }
 catch (  Exception e) {
    throw new IOException("Expected 'cql://[username:password@]<keyspace>/<columnfamily>" + "[?[page_size=<size>][&columns=<col1,col2>][&output_query=<prepared_statement>]" + "[&where_clause=<clause>][&split_size=<size>][&partitioner=<partitioner>][&use_secondary=true|false]]': "+ e.getMessage());
  }
}
