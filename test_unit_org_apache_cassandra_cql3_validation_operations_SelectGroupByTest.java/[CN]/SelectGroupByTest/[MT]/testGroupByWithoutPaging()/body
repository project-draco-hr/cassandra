{
  for (  String compactOption : new String[]{""," WITH COMPACT STORAGE"}) {
    createTable("CREATE TABLE %s (a int, b int, c int, d int, e int, primary key (a, b, c, d))" + compactOption);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 2, 1, 3, 6)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 2, 2, 6, 12)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 3, 2, 12, 24)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 4, 2, 12, 24)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 4, 2, 6, 12)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (2, 2, 3, 3, 6)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (2, 4, 3, 6, 12)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (3, 3, 2, 12, 24)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (4, 8, 2, 12, 24)");
    execute("DELETE FROM %s WHERE a = 1 AND b = 3 AND c = 2 AND d = 12");
    execute("DELETE FROM %s WHERE a = 3");
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s GROUP BY a"),row(1,2,6,4L,24),row(2,2,6,2L,12),row(4,8,24,1L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s GROUP BY a, b"),row(1,2,6,2L,12),row(1,4,12,2L,24),row(2,2,6,1L,6),row(2,4,12,1L,12),row(4,8,24,1L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE b = 2 GROUP BY a, b ALLOW FILTERING"),row(1,2,6,2L,12),row(2,2,6,1L,6));
    assertEmpty(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE b IN () GROUP BY a, b ALLOW FILTERING"));
    assertRows(execute("SELECT a, b, c, d FROM %s GROUP BY a, b, c"),row(1,2,1,3),row(1,2,2,6),row(1,4,2,6),row(2,2,3,3),row(2,4,3,6),row(4,8,2,12));
    assertRows(execute("SELECT a, b, c, d FROM %s GROUP BY a, b"),row(1,2,1,3),row(1,4,2,6),row(2,2,3,3),row(2,4,3,6),row(4,8,2,12));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s GROUP BY a, b LIMIT 2"),row(1,2,6,2L,12),row(1,4,12,2L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s GROUP BY a, b PER PARTITION LIMIT 1"),row(1,2,6,2L,12),row(2,2,6,1L,6),row(4,8,24,1L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s GROUP BY a PER PARTITION LIMIT 2"),row(1,2,6,4L,24),row(2,2,6,2L,12),row(4,8,24,1L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s GROUP BY a, b PER PARTITION LIMIT 1 LIMIT 2"),row(1,2,6,2L,12),row(2,2,6,1L,6));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s GROUP BY a PER PARTITION LIMIT 2"),row(1,2,6,4L,24),row(2,2,6,2L,12),row(4,8,24,1L,24));
    assertRows(execute("SELECT a, b, c, d FROM %s GROUP BY a, b, c LIMIT 3"),row(1,2,1,3),row(1,2,2,6),row(1,4,2,6));
    assertRows(execute("SELECT a, b, c, d FROM %s GROUP BY a, b LIMIT 3"),row(1,2,1,3),row(1,4,2,6),row(2,2,3,3));
    assertRows(execute("SELECT a, b, c, d FROM %s GROUP BY a, b, c PER PARTITION LIMIT 2"),row(1,2,1,3),row(1,2,2,6),row(2,2,3,3),row(2,4,3,6),row(4,8,2,12));
    assertRows(execute("SELECT a, b, c, d FROM %s GROUP BY a, b PER PARTITION LIMIT 1"),row(1,2,1,3),row(2,2,3,3),row(4,8,2,12));
    assertRows(execute("SELECT a, b, c, d FROM %s GROUP BY a, b, c PER PARTITION LIMIT 2 LIMIT 3"),row(1,2,1,3),row(1,2,2,6),row(2,2,3,3));
    assertRows(execute("SELECT DISTINCT a, count(a)FROM %s GROUP BY a"),row(1,1L),row(2,1L),row(4,1L));
    assertInvalidMessage("Grouping on clustering columns is not allowed for SELECT DISTINCT queries","SELECT DISTINCT a, count(a)FROM %s GROUP BY a, b");
    assertRows(execute("SELECT DISTINCT a, count(a)FROM %s GROUP BY a LIMIT 2"),row(1,1L),row(2,1L));
    assertInvalidMessage("Grouping on clustering columns is not allowed for SELECT DISTINCT queries","SELECT DISTINCT a, count(a)FROM %s GROUP BY a, b LIMIT 2");
    assertInvalidMessage("ORDER BY is only supported when the partition key is restricted by an EQ or an IN","SELECT a, b, c, count(b), max(e) FROM %s GROUP BY a, b ORDER BY b DESC, c DESC");
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c"),row(1,2,6,1L,6),row(1,2,12,1L,12),row(1,4,12,2L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY b, c"),row(1,2,6,1L,6),row(1,2,12,1L,12),row(1,4,12,2L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 AND b = 2 GROUP BY a, b, c"),row(1,2,6,1L,6),row(1,2,12,1L,12));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 AND b = 2 GROUP BY a, c"),row(1,2,6,1L,6),row(1,2,12,1L,12));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 AND b = 2 GROUP BY c"),row(1,2,6,1L,6),row(1,2,12,1L,12));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY a, b"),row(1,2,1,3),row(1,4,2,6));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY a, b, c"),row(1,2,1,3),row(1,2,2,6),row(1,4,2,6));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY b, c"),row(1,2,1,3),row(1,2,2,6),row(1,4,2,6));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 and token(a) = token(1) GROUP BY b, c"),row(1,2,1,3),row(1,2,2,6),row(1,4,2,6));
    assertRows(execute("SELECT DISTINCT a, count(a)FROM %s WHERE a = 1 GROUP BY a"),row(1,1L));
    assertInvalidMessage("Grouping on clustering columns is not allowed for SELECT DISTINCT queries","SELECT DISTINCT a, count(a)FROM %s WHERE a = 1 GROUP BY a, b");
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c LIMIT 10"),row(1,2,6,1L,6),row(1,2,12,1L,12),row(1,4,12,2L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c LIMIT 2"),row(1,2,6,1L,6),row(1,2,12,1L,12));
    assertRows(execute("SELECT count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c LIMIT 1"),row(1L,6));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c PER PARTITION LIMIT 10"),row(1,2,6,1L,6),row(1,2,12,1L,12),row(1,4,12,2L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c PER PARTITION LIMIT 2"),row(1,2,6,1L,6),row(1,2,12,1L,12));
    assertRows(execute("SELECT count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c PER PARTITION LIMIT 1"),row(1L,6));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY a, b LIMIT 2"),row(1,2,1,3),row(1,4,2,6));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY a, b LIMIT 1"),row(1,2,1,3));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY a, b, c LIMIT 2"),row(1,2,1,3),row(1,2,2,6));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY a, b PER PARTITION LIMIT 2"),row(1,2,1,3),row(1,4,2,6));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY a, b PER PARTITION LIMIT 1"),row(1,2,1,3));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a = 1 GROUP BY a, b, c PER PARTITION LIMIT 2"),row(1,2,1,3),row(1,2,2,6));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c ORDER BY b DESC, c DESC"),row(1,4,24,2L,24),row(1,2,12,1L,12),row(1,2,6,1L,6));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c ORDER BY b DESC, c DESC PER PARTITION LIMIT 1"),row(1,4,24,2L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a = 1 GROUP BY a, b, c ORDER BY b DESC, c DESC LIMIT 2"),row(1,4,24,2L,24),row(1,2,12,1L,12));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b, c"),row(1,2,6,1L,6),row(1,2,12,1L,12),row(1,4,12,2L,24),row(2,2,6,1L,6),row(2,4,12,1L,12),row(4,8,24,1L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a IN (1, 2, 4) AND b = 2 GROUP BY a, b, c"),row(1,2,6,1L,6),row(1,2,12,1L,12),row(2,2,6,1L,6));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b"),row(1,2,1,3),row(1,4,2,6),row(2,2,3,3),row(2,4,3,6),row(4,8,2,12));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b, c"),row(1,2,1,3),row(1,2,2,6),row(1,4,2,6),row(2,2,3,3),row(2,4,3,6),row(4,8,2,12));
    assertRows(execute("SELECT DISTINCT a, count(a)FROM %s WHERE a IN (1, 2, 4) GROUP BY a"),row(1,1L),row(2,1L),row(4,1L));
    assertInvalidMessage("Grouping on clustering columns is not allowed for SELECT DISTINCT queries","SELECT DISTINCT a, count(a)FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b");
    assertRows(execute("SELECT DISTINCT a, count(a)FROM %s WHERE a IN (1, 2, 4) GROUP BY a LIMIT 2"),row(1,1L),row(2,1L));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b, c PER PARTITION LIMIT 1"),row(1,2,6,1L,6),row(2,2,6,1L,6),row(4,8,24,1L,24));
    assertRows(execute("SELECT a, b, e, count(b), max(e) FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b, c PER PARTITION LIMIT 2"),row(1,2,6,1L,6),row(1,2,12,1L,12),row(2,2,6,1L,6),row(2,4,12,1L,12),row(4,8,24,1L,24));
    assertRows(execute("SELECT a, b, c, count(b), max(e) FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b ORDER BY b DESC, c DESC"),row(4,8,2,1L,24),row(2,4,3,1L,12),row(1,4,2,2L,24),row(2,2,3,1L,6),row(1,2,2,2L,12));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b, c ORDER BY b DESC, c DESC"),row(4,8,2,12),row(2,4,3,6),row(1,4,2,12),row(2,2,3,3),row(1,2,2,6),row(1,2,1,3));
    assertRows(execute("SELECT a, b, c, d FROM %s WHERE a IN (1, 2, 4) GROUP BY a, b ORDER BY b DESC, c DESC LIMIT 3"),row(4,8,2,12),row(2,4,3,6),row(1,4,2,12));
    assertInvalidMessage("Group by is currently only supported on the columns of the PRIMARY KEY, got e","SELECT a, b, d, count(b), max(c) FROM %s WHERE a = 1 GROUP BY a, e");
    assertInvalidMessage("Group by currently only support groups of columns following their declared order in the PRIMARY KEY","SELECT a, b, d, count(b), max(c) FROM %s WHERE a = 1 GROUP BY c");
    assertInvalidMessage("Group by currently only support groups of columns following their declared order in the PRIMARY KEY","SELECT a, b, d, count(b), max(c) FROM %s WHERE a = 1 GROUP BY a, c, b");
    assertInvalidMessage("Group by currently only support groups of columns following their declared order in the PRIMARY KEY","SELECT a, b, d, count(b), max(c) FROM %s WHERE a = 1 GROUP BY a, a");
    assertInvalidMessage("Group by currently only support groups of columns following their declared order in the PRIMARY KEY","SELECT a, b, c, d FROM %s WHERE token(a) = token(1) GROUP BY b, c");
    assertInvalidMessage("Undefined column name clustering1","SELECT a, b as clustering1, max(c) FROM %s WHERE a = 1 GROUP BY a, clustering1");
    assertInvalidMessage("Undefined column name z","SELECT a, b, max(c) FROM %s WHERE a = 1 GROUP BY a, b, z");
    createTable("CREATE TABLE %s (a int, b int, c int, d int, e int, primary key ((a, b), c, d))" + compactOption);
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 1, 1, 3, 6)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 1, 2, 6, 12)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 1, 3, 12, 24)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 2, 1, 12, 24)");
    execute("INSERT INTO %s (a, b, c, d, e) VALUES (1, 2, 2, 6, 12)");
    assertInvalidMessage("Group by is not supported on only a part of the partition key","SELECT a, b, max(d) FROM %s GROUP BY a");
    assertRows(execute("SELECT a, b, max(d) FROM %s GROUP BY a, b"),row(1,2,12),row(1,1,12));
    assertRows(execute("SELECT a, b, max(d) FROM %s WHERE a = 1 AND b = 1 GROUP BY b"),row(1,1,12));
    createTable("CREATE TABLE %s (a int primary key, b int, c int)" + compactOption);
    execute("INSERT INTO %s (a, b, c) VALUES (1, 3, 6)");
    execute("INSERT INTO %s (a, b, c) VALUES (2, 6, 12)");
    execute("INSERT INTO %s (a, b, c) VALUES (3, 12, 24)");
    assertInvalidMessage("Group by currently only support groups of columns following their declared order in the PRIMARY KEY","SELECT a, max(c) FROM %s WHERE a = 1 GROUP BY a, a");
  }
}
