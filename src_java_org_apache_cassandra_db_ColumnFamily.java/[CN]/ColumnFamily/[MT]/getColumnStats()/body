{
  long minTimestampSeen=deletionInfo().isLive() ? Long.MAX_VALUE : deletionInfo().minTimestamp();
  long maxTimestampSeen=deletionInfo().maxTimestamp();
  StreamingHistogram tombstones=new StreamingHistogram(SSTable.TOMBSTONE_HISTOGRAM_BIN_SIZE);
  int maxLocalDeletionTime=Integer.MIN_VALUE;
  List<ByteBuffer> minColumnNamesSeen=Collections.emptyList();
  List<ByteBuffer> maxColumnNamesSeen=Collections.emptyList();
  if (deletionInfo().getTopLevelDeletion().localDeletionTime < Integer.MAX_VALUE)   tombstones.update(deletionInfo().getTopLevelDeletion().localDeletionTime);
  Iterator<RangeTombstone> it=deletionInfo().rangeIterator();
  while (it.hasNext()) {
    RangeTombstone rangeTombstone=it.next();
    tombstones.update(rangeTombstone.getLocalDeletionTime());
    minColumnNamesSeen=ColumnNameHelper.minComponents(minColumnNamesSeen,rangeTombstone.min,metadata.comparator);
    maxColumnNamesSeen=ColumnNameHelper.maxComponents(maxColumnNamesSeen,rangeTombstone.max,metadata.comparator);
  }
  for (  Column column : this) {
    minTimestampSeen=Math.min(minTimestampSeen,column.minTimestamp());
    maxTimestampSeen=Math.max(maxTimestampSeen,column.maxTimestamp());
    maxLocalDeletionTime=Math.max(maxLocalDeletionTime,column.getLocalDeletionTime());
    int deletionTime=column.getLocalDeletionTime();
    if (deletionTime < Integer.MAX_VALUE)     tombstones.update(deletionTime);
    minColumnNamesSeen=ColumnNameHelper.minComponents(minColumnNamesSeen,column.name,metadata.comparator);
    maxColumnNamesSeen=ColumnNameHelper.maxComponents(maxColumnNamesSeen,column.name,metadata.comparator);
  }
  return new ColumnStats(getColumnCount(),minTimestampSeen,maxTimestampSeen,maxLocalDeletionTime,tombstones,minColumnNamesSeen,maxColumnNamesSeen);
}
