{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
        struct.name=iprot.readString();
        struct.setNameIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
    struct.strategy_class=iprot.readString();
    struct.setStrategy_classIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map120=iprot.readMapBegin();
  struct.strategy_options=new HashMap<String,String>(2 * _map120.size);
  for (int _i121=0; _i121 < _map120.size; ++_i121) {
    String _key122;
    String _val123;
    _key122=iprot.readString();
    _val123=iprot.readString();
    struct.strategy_options.put(_key122,_val123);
  }
  iprot.readMapEnd();
}
struct.setStrategy_optionsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 4:
if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
struct.replication_factor=iprot.readI32();
struct.setReplication_factorIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 5:
if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
org.apache.thrift.protocol.TList _list124=iprot.readListBegin();
struct.cf_defs=new ArrayList<CfDef>(_list124.size);
for (int _i125=0; _i125 < _list124.size; ++_i125) {
CfDef _elem126;
_elem126=new CfDef();
_elem126.read(iprot);
struct.cf_defs.add(_elem126);
}
iprot.readListEnd();
}
struct.setCf_defsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
case 6:
if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
struct.durable_writes=iprot.readBool();
struct.setDurable_writesIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
