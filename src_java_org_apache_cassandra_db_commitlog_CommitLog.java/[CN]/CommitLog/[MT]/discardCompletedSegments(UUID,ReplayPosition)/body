{
  Callable task=new Callable(){
    public Object call(){
      logger.debug("discard completed log segments for {}, column family {}",context,cfId);
      for (Iterator<CommitLogSegment> iter=allocator.getActiveSegments().iterator(); iter.hasNext(); ) {
        CommitLogSegment segment=iter.next();
        segment.markClean(cfId,context);
        if (iter.hasNext()) {
          if (segment.isUnused()) {
            logger.debug("Commit log segment {} is unused",segment);
            allocator.recycleSegment(segment);
          }
 else {
            logger.debug("Not safe to delete commit log segment {}; dirty is {}",segment,segment.dirtyString());
          }
        }
 else {
          logger.debug("Not deleting active commitlog segment {}",segment);
        }
        if (segment.contains(context))         break;
      }
      return null;
    }
  }
;
  try {
    executor.submit(task).get();
  }
 catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
catch (  ExecutionException e) {
    throw new RuntimeException(e);
  }
}
