{
  long size=RowMutation.serializer.serializedSize(rowMutation,MessagingService.current_version);
  long totalSize=size + ENTRY_OVERHEAD_SIZE;
  if (totalSize > MAX_MUTATION_SIZE) {
    logger.warn("Skipping commitlog append of extremely large mutation ({} bytes)",totalSize);
    return;
  }
  Allocation alloc=allocator.allocate(rowMutation,(int)totalSize,new Allocation());
  try {
    PureJavaCrc32 checksum=new PureJavaCrc32();
    final ByteBuffer buffer=alloc.getBuffer();
    DataOutputStream dos=new DataOutputStream(new ChecksummedOutputStream(new ByteBufferOutputStream(buffer),checksum));
    dos.writeInt((int)size);
    buffer.putLong(checksum.getValue());
    RowMutation.serializer.serialize(rowMutation,dos,MessagingService.current_version);
    buffer.putLong(checksum.getValue());
  }
 catch (  IOException e) {
    throw new FSWriteError(e,alloc.getSegment().getPath());
  }
 finally {
    alloc.markWritten();
  }
  executor.finishWriteFor(alloc);
}
