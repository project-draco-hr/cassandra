{
  File[] files=new File(DatabaseDescriptor.getCommitLogLocation()).listFiles(new FilenameFilter(){
    public boolean accept(    File dir,    String name){
      return CommitLogSegment.possibleCommitLogFile(name) && !instance.allocator.manages(name);
    }
  }
);
  if (files.length == 0) {
    logger.info("No commitlog files found; skipping replay");
    return 0;
  }
  Arrays.sort(files,new FileUtils.FileComparator());
  logger.info("Replaying " + StringUtils.join(files,", "));
  int replayed=recover(files);
  logger.info("Log replay complete, " + replayed + " replayed mutations");
  for (  File f : files)   CommitLog.instance.allocator.recycleSegment(f);
  return replayed;
}
