{
  boolean compression=Boolean.parseBoolean(System.getProperty("cassandra.test.compression","false"));
  long startPosition, endPosition;
  if (compression) {
    CompressionMetadata compData=CompressionMetadata.create(sstable.getFilename());
    CompressionMetadata.Chunk chunk1=compData.chunkFor(sstable.getPosition(PartitionPosition.ForKey.get(key1,sstable.getPartitioner()),SSTableReader.Operator.EQ).position);
    CompressionMetadata.Chunk chunk2=compData.chunkFor(sstable.getPosition(PartitionPosition.ForKey.get(key2,sstable.getPartitioner()),SSTableReader.Operator.EQ).position);
    startPosition=Math.min(chunk1.offset,chunk2.offset);
    endPosition=Math.max(chunk1.offset + chunk1.length,chunk2.offset + chunk2.length);
    compData.close();
  }
 else {
    long row0Start=sstable.getPosition(PartitionPosition.ForKey.get(key1,sstable.getPartitioner()),SSTableReader.Operator.EQ).position;
    long row1Start=sstable.getPosition(PartitionPosition.ForKey.get(key2,sstable.getPartitioner()),SSTableReader.Operator.EQ).position;
    startPosition=Math.min(row0Start,row1Start);
    endPosition=Math.max(row0Start,row1Start);
  }
  overrideWithGarbage(sstable,startPosition,endPosition);
}
