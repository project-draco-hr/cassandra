{
  List<AntiEntropyService.RepairSession> sessions=new ArrayList<AntiEntropyService.RepairSession>();
  for (  Range range : getLocalRanges(tableName)) {
    AntiEntropyService.RepairSession session=forceTableRepair(range,tableName,columnFamilies);
    sessions.add(session);
    try {
      session.differencingDone.await();
    }
 catch (    InterruptedException e) {
      logger_.error("Interrupted while waiting for the differencing of repair session " + session + " to be done. Repair may be imprecise.",e);
    }
  }
  boolean failedSession=false;
  for (  AntiEntropyService.RepairSession sess : sessions) {
    try {
      sess.join();
    }
 catch (    InterruptedException e) {
      logger_.error("Repair session " + sess + " failed.",e);
      failedSession=true;
    }
  }
  if (failedSession)   throw new IOException("Some Repair session(s) failed.");
}
