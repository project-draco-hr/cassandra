{
  Token parsedBeginToken=getPartitioner().getTokenFactory().fromString(beginToken);
  Token parsedEndToken=getPartitioner().getTokenFactory().fromString(endToken);
  Deque<Range<Token>> repairingRange=new ArrayDeque<>();
  Token previous=tokenMetadata.getPredecessor(TokenMetadata.firstToken(tokenMetadata.sortedTokens(),parsedEndToken));
  while (parsedBeginToken.compareTo(previous) < 0) {
    repairingRange.addFirst(new Range<>(previous,parsedEndToken));
    parsedEndToken=previous;
    previous=tokenMetadata.getPredecessor(previous);
  }
  repairingRange.addFirst(new Range<>(parsedBeginToken,parsedEndToken));
  return repairingRange;
}
