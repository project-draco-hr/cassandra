{
  Token parsedBeginToken=getTokenFactory().fromString(beginToken);
  Token parsedEndToken=getTokenFactory().fromString(endToken);
  ArrayList<Range<Token>> repairingRange=new ArrayList<>();
  ArrayList<Token> tokens=new ArrayList<>(tokenMetadata.sortedTokens());
  if (!tokens.contains(parsedBeginToken)) {
    tokens.add(parsedBeginToken);
  }
  if (!tokens.contains(parsedEndToken)) {
    tokens.add(parsedEndToken);
  }
  Collections.sort(tokens);
  int start=tokens.indexOf(parsedBeginToken), end=tokens.indexOf(parsedEndToken);
  for (int i=start; i != end; i=(i + 1) % tokens.size()) {
    Range<Token> range=new Range<>(tokens.get(i),tokens.get((i + 1) % tokens.size()));
    repairingRange.add(range);
  }
  return repairingRange;
}
