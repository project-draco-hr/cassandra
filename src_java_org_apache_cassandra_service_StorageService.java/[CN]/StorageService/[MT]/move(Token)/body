{
  if (newToken == null)   throw new IOException("Can't move to the undefined (null) token.");
  if (tokenMetadata.sortedTokens().contains(newToken))   throw new IOException("target token " + newToken + " is already owned by another node.");
  InetAddress localAddress=FBUtilities.getBroadcastAddress();
  if (getTokenMetadata().getTokens(localAddress).size() > 1) {
    logger.error("Invalid request to move(Token); This node has more than one token and cannot be moved thusly.");
    throw new UnsupportedOperationException("This node has more than one token and cannot be moved thusly.");
  }
  List<String> tablesToProcess=Schema.instance.getNonSystemTables();
  for (  String table : tablesToProcess) {
    if (tokenMetadata.getPendingRanges(table,localAddress).size() > 0)     throw new UnsupportedOperationException("data is currently moving to this node; unable to leave the ring");
  }
  Gossiper.instance.addLocalApplicationState(ApplicationState.STATUS,valueFactory.moving(newToken));
  setMode(Mode.MOVING,String.format("Moving %s from %s to %s.",localAddress,getLocalTokens().iterator().next(),newToken),true);
  setMode(Mode.MOVING,String.format("Sleeping %s ms before start streaming/fetching ranges",RING_DELAY),true);
  try {
    Thread.sleep(RING_DELAY);
  }
 catch (  InterruptedException e) {
    throw new RuntimeException("Sleep interrupted " + e.getMessage());
  }
  RangeRelocator relocator=new RangeRelocator(Collections.singleton(newToken),tablesToProcess);
  if (relocator.streamsNeeded()) {
    setMode(Mode.MOVING,"fetching new ranges and streaming old ranges",true);
    relocator.logStreamsMap("[Move->STREAMING]");
    CountDownLatch streamLatch=relocator.streams();
    relocator.logRequestsMap("[Move->FETCHING]");
    CountDownLatch fetchLatch=relocator.requests();
    try {
      streamLatch.await();
      fetchLatch.await();
    }
 catch (    InterruptedException e) {
      throw new RuntimeException("Interrupted latch while waiting for stream/fetch ranges to finish: " + e.getMessage());
    }
  }
 else   setMode(Mode.MOVING,"No ranges to fetch/stream",true);
  setTokens(Collections.singleton(newToken));
  if (logger.isDebugEnabled())   logger.debug("Successfully moved to new token {}",getLocalTokens().iterator().next());
}
