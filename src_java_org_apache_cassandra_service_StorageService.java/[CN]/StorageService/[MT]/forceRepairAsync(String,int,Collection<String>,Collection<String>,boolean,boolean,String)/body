{
  if (parallelismDegree < 0 || parallelismDegree > RepairParallelism.values().length - 1) {
    throw new IllegalArgumentException("Invalid parallelism degree specified: " + parallelismDegree);
  }
  Collection<Range<Token>> ranges;
  if (primaryRange) {
    if (dataCenters == null && hosts == null)     ranges=getPrimaryRanges(keyspace);
 else     if (dataCenters != null && dataCenters.size() == 1 && dataCenters.contains(DatabaseDescriptor.getLocalDataCenter()))     ranges=getPrimaryRangesWithinDC(keyspace);
 else     throw new IllegalArgumentException("You need to run primary range repair on all nodes in the cluster.");
  }
 else {
    ranges=getLocalRanges(keyspace);
  }
  return forceRepairAsync(keyspace,RepairParallelism.values()[parallelismDegree],dataCenters,hosts,ranges,fullRepair,columnFamilies);
}
