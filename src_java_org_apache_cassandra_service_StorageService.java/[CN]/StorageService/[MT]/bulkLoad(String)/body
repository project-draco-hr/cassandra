{
  File dir=new File(directory);
  if (!dir.exists() || !dir.isDirectory())   throw new IllegalArgumentException("Invalid directory " + directory);
  SSTableLoader.Client client=new SSTableLoader.Client(){
    public void init(    String keyspace){
      for (      Map.Entry<Range,List<InetAddress>> entry : StorageService.instance.getRangeToAddressMap(keyspace).entrySet()) {
        Range range=entry.getKey();
        for (        InetAddress endpoint : entry.getValue())         addRangeForEndpoint(range,endpoint);
      }
    }
    public boolean validateColumnFamily(    String keyspace,    String cfName){
      return Schema.instance.getCFMetaData(keyspace,cfName) != null;
    }
  }
;
  SSTableLoader.OutputHandler oh=new SSTableLoader.OutputHandler(){
    public void output(    String msg){
      logger_.info(msg);
    }
    public void debug(    String msg){
      logger_.debug(msg);
    }
  }
;
  SSTableLoader loader=new SSTableLoader(dir,client,oh);
  try {
    loader.stream().get();
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
