{
  ColumnFamilyStore largestByOps=null;
  ColumnFamilyStore largestByThroughput=null;
  for (  ColumnFamilyStore cfs : ColumnFamilyStore.all()) {
    long ops=0;
    long throughput=0;
    for (    ColumnFamilyStore subordinate : cfs.concatWithIndexes()) {
      ops+=subordinate.getMemtableColumnsCount();
      throughput+=subordinate.getMemtableDataSize();
    }
    if (ops > 0 && (largestByOps == null || ops > largestByOps.getMemtableColumnsCount())) {
      logger_.debug(ops + " total ops in " + cfs);
      largestByOps=cfs;
    }
    if (throughput > 0 && (largestByThroughput == null || throughput > largestByThroughput.getMemtableThroughputInMB())) {
      logger_.debug(throughput + " total throughput in " + cfs);
      largestByThroughput=cfs;
    }
  }
  if (largestByOps == null) {
    logger_.info("Unable to reduce heap usage since there are no dirty column families");
    return;
  }
  logger_.warn("Flushing " + largestByOps + " to relieve memory pressure");
  largestByOps.forceFlush();
  if (largestByThroughput != largestByOps) {
    logger_.warn("Flushing " + largestByThroughput + " to relieve memory pressure");
    largestByThroughput.forceFlush();
  }
}
