{
  assert(pieces.length > 0);
  if (endpoint.equals(FBUtilities.getBroadcastAddress())) {
    logger.info("Received removeToken gossip about myself. Is this node rejoining after an explicit removetoken?");
    try {
      drain();
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
    return;
  }
  if (tokenMetadata.isMember(endpoint)) {
    String state=pieces[0];
    Token removeToken=tokenMetadata.getToken(endpoint);
    if (VersionedValue.REMOVED_TOKEN.equals(state)) {
      excise(removeToken,endpoint,extractExpireTime(pieces));
    }
 else     if (VersionedValue.REMOVING_TOKEN.equals(state)) {
      if (logger.isDebugEnabled())       logger.debug("Token " + removeToken + " removed manually (endpoint was "+ endpoint+ ")");
      tokenMetadata.addLeavingEndpoint(endpoint);
      calculatePendingRanges();
      String[] coordinator=Gossiper.instance.getEndpointStateForEndpoint(endpoint).getApplicationState(ApplicationState.REMOVAL_COORDINATOR).value.split(VersionedValue.DELIMITER_STR,-1);
      UUID hostId=UUID.fromString(coordinator[1]);
      restoreReplicaCount(endpoint,tokenMetadata.getEndpointForHostId(hostId));
    }
  }
}
