{
  if (!fullRepair)   throw new IllegalArgumentException("Incremental repair can't be requested with subrange repair because " + "each subrange repair would generate an anti-compacted table");
  Collection<Range<Token>> repairingRange=createRepairRangeFrom(beginToken,endToken);
  logger.info("starting user-requested repair of range {} for keyspace {} and column families {}",repairingRange,keyspaceName,columnFamilies);
  return forceRepairAsync(keyspaceName,isSequential,isLocal,repairingRange,fullRepair,columnFamilies);
}
