{
  Set<Range<Token>> toStream=new HashSet<Range<Token>>();
  Set<Range<Token>> toFetch=new HashSet<Range<Token>>();
  while (current.hasNext() && updated.hasNext()) {
    Range<Token> r1=current.next();
    Range<Token> r2=updated.next();
    if (r1.intersects(r2)) {
      toFetch.addAll(r1.differenceToFetch(r2));
      if (!r2.contains(r1)) {
        if (r1.left.compareTo(r2.left) < 0) {
          toStream.add(new Range<Token>(r1.left,r2.left));
        }
        if (r1.right.compareTo(r2.right) > 0) {
          toStream.add(new Range<Token>(r2.right,r1.right));
        }
      }
    }
 else {
      toStream.add(r1);
      toFetch.add(r2);
    }
  }
  return new Pair<Set<Range<Token>>,Set<Range<Token>>>(toStream,toFetch);
}
