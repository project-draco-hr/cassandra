{
  Keyspace keyspace=getValidKeyspace(keyspaceName);
  Set<ColumnFamilyStore> valid=new HashSet<>();
  if (cfNames.length == 0) {
    for (    ColumnFamilyStore cfStore : keyspace.getColumnFamilyStores()) {
      valid.add(cfStore);
      if (autoAddIndexes) {
        for (        SecondaryIndex si : cfStore.indexManager.getIndexes()) {
          if (si.getIndexCfs() != null) {
            logger.info("adding secondary index {} to operation",si.getIndexName());
            valid.add(si.getIndexCfs());
          }
        }
      }
    }
    return valid;
  }
  for (  String cfName : cfNames) {
    String baseCfName=cfName;
    String idxName=null;
    if (cfName.contains(".")) {
      if (!allowIndexes) {
        logger.warn("Operation not allowed on secondary Index column family ({})",cfName);
        continue;
      }
      String[] parts=cfName.split("\\.",2);
      baseCfName=parts[0];
      idxName=parts[1];
    }
    ColumnFamilyStore cfStore=keyspace.getColumnFamilyStore(baseCfName);
    if (cfStore == null) {
      logger.warn(String.format("Invalid column family specified: %s. Proceeding with others.",baseCfName));
      continue;
    }
    if (idxName != null) {
      Collection<SecondaryIndex> indexes=cfStore.indexManager.getIndexesByNames(new HashSet<String>(Arrays.asList(cfName)));
      if (indexes.isEmpty())       logger.warn(String.format("Invalid column family index specified: %s/%s. Proceeding with others.",baseCfName,idxName));
 else       valid.add(Iterables.get(indexes,0).getIndexCfs());
    }
 else {
      valid.add(cfStore);
      if (autoAddIndexes) {
        for (        SecondaryIndex si : cfStore.indexManager.getIndexes()) {
          if (si.getIndexCfs() != null) {
            logger.info("adding secondary index {} to operation",si.getIndexName());
            valid.add(si.getIndexCfs());
          }
        }
      }
    }
  }
  return valid;
}
