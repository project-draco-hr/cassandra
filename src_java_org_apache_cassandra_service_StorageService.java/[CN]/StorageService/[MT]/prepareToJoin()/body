{
  if (!joined) {
    Map<ApplicationState,VersionedValue> appStates=new EnumMap<>(ApplicationState.class);
    if (replacing && !(Boolean.parseBoolean(System.getProperty("cassandra.join_ring","true"))))     throw new ConfigurationException("Cannot set both join_ring=false and attempt to replace a node");
    if (DatabaseDescriptor.getReplaceTokens().size() > 0 || DatabaseDescriptor.getReplaceNode() != null)     throw new RuntimeException("Replace method removed; use cassandra.replace_address instead");
    if (replacing) {
      if (SystemKeyspace.bootstrapComplete())       throw new RuntimeException("Cannot replace address with a node that is already bootstrapped");
      if (!DatabaseDescriptor.isAutoBootstrap())       throw new RuntimeException("Trying to replace_address with auto_bootstrap disabled will not work, check your configuration");
      bootstrapTokens=prepareReplacementInfo();
      appStates.put(ApplicationState.TOKENS,valueFactory.tokens(bootstrapTokens));
      appStates.put(ApplicationState.STATUS,valueFactory.hibernate(true));
    }
 else     if (shouldBootstrap()) {
      checkForEndpointCollision();
    }
    UUID localHostId=SystemKeyspace.getLocalHostId();
    getTokenMetadata().updateHostId(localHostId,FBUtilities.getBroadcastAddress());
    appStates.put(ApplicationState.NET_VERSION,valueFactory.networkVersion());
    appStates.put(ApplicationState.HOST_ID,valueFactory.hostId(localHostId));
    appStates.put(ApplicationState.RPC_ADDRESS,valueFactory.rpcaddress(FBUtilities.getBroadcastRpcAddress()));
    appStates.put(ApplicationState.RELEASE_VERSION,valueFactory.releaseVersion());
    logger.info("Starting up server gossip");
    Gossiper.instance.register(this);
    Gossiper.instance.start(SystemKeyspace.incrementAndGetGeneration(),appStates);
    gossipSnitchInfo();
    Schema.instance.updateVersionAndAnnounce();
    if (!MessagingService.instance().isListening())     MessagingService.instance().listen();
    LoadBroadcaster.instance.startBroadcasting();
    HintedHandOffManager.instance.start();
    BatchlogManager.instance.start();
  }
}
