{
  ExecutorService mutationStage=StageManager.getStage(Stage.MUTATION);
  if (mutationStage.isTerminated()) {
    logger_.warn("Cannot drain node (did it already happen?)");
    return;
  }
  setMode("Starting drain process",true);
  Gossiper.instance.stop();
  setMode("Draining: shutting down MessageService",false);
  MessagingService.instance().shutdown();
  setMode("Draining: waiting for streaming",false);
  MessagingService.instance().waitForStreaming();
  setMode("Draining: clearing mutation stage",false);
  mutationStage.shutdown();
  mutationStage.awaitTermination(3600,TimeUnit.SECONDS);
  StorageProxy.instance.verifyNoHintsInProgress();
  setMode("Draining: flushing column families",false);
  List<ColumnFamilyStore> cfses=new ArrayList<ColumnFamilyStore>();
  for (  String tableName : Schema.instance.getNonSystemTables()) {
    Table table=Table.open(tableName);
    cfses.addAll(table.getColumnFamilyStores());
  }
  totalCFs=remainingCFs=cfses.size();
  for (  ColumnFamilyStore cfs : cfses) {
    cfs.forceBlockingFlush();
    remainingCFs--;
  }
  ColumnFamilyStore.postFlushExecutor.shutdown();
  ColumnFamilyStore.postFlushExecutor.awaitTermination(60,TimeUnit.SECONDS);
  CommitLog.instance.shutdownBlocking();
  tasks.shutdown();
  if (!tasks.awaitTermination(1,TimeUnit.MINUTES))   logger_.warn("Miscellaneous task executor still busy after one minute; proceeding with shutdown");
  setMode("Node is drained",true);
}
