{
  MBeanServer mbs=ManagementFactory.getPlatformMBeanServer();
  try {
    mbs.registerMBean(this,new ObjectName("org.apache.cassandra.service:type=StorageService"));
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  bootstrapSet=Multimaps.synchronizedSetMultimap(HashMultimap.<InetAddress,String>create());
  MessagingService.instance.registerVerbHandlers(Verb.BINARY,new BinaryVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.MUTATION,new RowMutationVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.READ_REPAIR,new ReadRepairVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.READ,new ReadVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.RANGE_SLICE,new RangeSliceVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.BOOTSTRAP_TOKEN,new BootStrapper.BootstrapTokenVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.STREAM_REQUEST,new StreamRequestVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.STREAM_INITIATE,new StreamInitiateVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.STREAM_INITIATE_DONE,new StreamInitiateDoneVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.STREAM_FINISHED,new StreamFinishedVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.READ_RESPONSE,new ResponseVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.TREE_REQUEST,new TreeRequestVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.TREE_RESPONSE,new AntiEntropyService.TreeResponseVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.GOSSIP_DIGEST_SYN,new Gossiper.GossipDigestSynVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.GOSSIP_DIGEST_ACK,new Gossiper.GossipDigestAckVerbHandler());
  MessagingService.instance.registerVerbHandlers(Verb.GOSSIP_DIGEST_ACK2,new Gossiper.GossipDigestAck2VerbHandler());
  replicationStrategies=new HashMap<String,AbstractReplicationStrategy>();
  for (  String table : DatabaseDescriptor.getNonSystemTables()) {
    AbstractReplicationStrategy strat=getReplicationStrategy(tokenMetadata_,table);
    replicationStrategies.put(table,strat);
  }
  replicationStrategies=Collections.unmodifiableMap(replicationStrategies);
  if (StreamingService.instance == null)   throw new RuntimeException("Streaming service is unavailable.");
}
