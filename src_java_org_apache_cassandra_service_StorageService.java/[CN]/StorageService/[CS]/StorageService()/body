{
  init();
  storageLoadBalancer_=new StorageLoadBalancer(this);
  endPointSnitch_=DatabaseDescriptor.getEndPointSnitch();
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.tokenVerbHandler_,new TokenUpdateVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.binaryVerbHandler_,new BinaryVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.loadVerbHandler_,new LoadVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.mutationVerbHandler_,new RowMutationVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.readRepairVerbHandler_,new ReadRepairVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.readVerbHandler_,new ReadVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.bootStrapInitiateVerbHandler_,new Table.BootStrapInitiateVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.bootStrapInitiateDoneVerbHandler_,new StorageService.BootstrapInitiateDoneVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.bootStrapTerminateVerbHandler_,new StreamManager.BootstrapTerminateVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.dataFileVerbHandler_,new DataFileVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.mbrshipCleanerVerbHandler_,new MembershipCleanerVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.bsMetadataVerbHandler_,new BootstrapMetadataVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.calloutDeployVerbHandler_,new CalloutDeployVerbHandler());
  MessagingService.getMessagingInstance().registerVerbHandlers(StorageService.rangeVerbHandler_,new RangeVerbHandler());
  consistencyManager_=new DebuggableThreadPoolExecutor(DatabaseDescriptor.getConsistencyThreads(),DatabaseDescriptor.getConsistencyThreads(),Integer.MAX_VALUE,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new ThreadFactoryImpl("CONSISTENCY-MANAGER"));
  StageManager.registerStage(StorageService.mutationStage_,new MultiThreadedStage(StorageService.mutationStage_,DatabaseDescriptor.getConcurrentWriters()));
  StageManager.registerStage(StorageService.readStage_,new MultiThreadedStage(StorageService.readStage_,DatabaseDescriptor.getConcurrentReaders()));
  Class cls=DatabaseDescriptor.getReplicaPlacementStrategyClass();
  Class[] parameterTypes=new Class[]{TokenMetadata.class,IPartitioner.class,int.class,int.class};
  try {
    nodePicker_=(IReplicaPlacementStrategy)cls.getConstructor(parameterTypes).newInstance(tokenMetadata_,partitioner_,DatabaseDescriptor.getReplicationFactor(),DatabaseDescriptor.getStoragePort());
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
