{
  MBeanServer mbs=ManagementFactory.getPlatformMBeanServer();
  try {
    jmxObjectName=new ObjectName("org.apache.cassandra.db:type=StorageService");
    mbs.registerMBean(this,jmxObjectName);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.MUTATION,new RowMutationVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.READ_REPAIR,new ReadRepairVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.READ,new ReadVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.RANGE_SLICE,new RangeSliceVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.COUNTER_MUTATION,new CounterMutationVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.TRUNCATE,new TruncateVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.PAXOS_PREPARE,new PrepareVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.PAXOS_PROPOSE,new ProposeVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.PAXOS_COMMIT,new CommitVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.BOOTSTRAP_TOKEN,new BootStrapper.BootstrapTokenVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.STREAM_REQUEST,new StreamRequestVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.STREAM_REPLY,new StreamReplyVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.REPLICATION_FINISHED,new ReplicationFinishedVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.REQUEST_RESPONSE,new ResponseVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.INTERNAL_RESPONSE,new ResponseVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.TREE_REQUEST,new TreeRequestVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.TREE_RESPONSE,new ActiveRepairService.TreeResponseVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.STREAMING_REPAIR_REQUEST,new StreamingRepairTask.StreamingRepairRequest());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.STREAMING_REPAIR_RESPONSE,new StreamingRepairTask.StreamingRepairResponse());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.GOSSIP_SHUTDOWN,new GossipShutdownVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.GOSSIP_DIGEST_SYN,new GossipDigestSynVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.GOSSIP_DIGEST_ACK,new GossipDigestAckVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.GOSSIP_DIGEST_ACK2,new GossipDigestAck2VerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.DEFINITIONS_UPDATE,new DefinitionsUpdateVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.SCHEMA_CHECK,new SchemaCheckVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.MIGRATION_REQUEST,new MigrationRequestVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.SNAPSHOT,new SnapshotVerbHandler());
  MessagingService.instance().registerVerbHandlers(MessagingService.Verb.ECHO,new EchoVerbHandler());
  if (StreamingService.instance == null)   throw new RuntimeException("Streaming service is unavailable.");
}
