{
  CompactionManager.instance.disableAutoCompaction();
  Keyspace keyspace=Keyspace.open(KEYSPACE1);
  String cfName="Standard2";
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(cfName);
  DecoratedKey key=Util.dk("key1");
  Mutation rm;
  rm=new Mutation(KEYSPACE1,key.key);
  for (int i=0; i < 5; i++) {
    rm.add(cfName,cellname(String.valueOf(i)),ByteBufferUtil.EMPTY_BYTE_BUFFER,0);
  }
  rm.apply();
  for (int i=0; i < 5; i++) {
    rm=new Mutation(KEYSPACE1,key.key);
    rm.delete(cfName,cellname(String.valueOf(i)),1);
    rm.apply();
  }
  cfs.forceBlockingFlush();
  assertEquals(String.valueOf(cfs.getSSTables()),1,cfs.getSSTables().size());
  Util.compactAll(cfs,Integer.MAX_VALUE).get();
  assertTrue(cfs.getSSTables().isEmpty());
  ColumnFamily cf=keyspace.getColumnFamilyStore(cfName).getColumnFamily(QueryFilter.getIdentityFilter(key,cfName,System.currentTimeMillis()));
  assertNull(String.valueOf(cf),cf);
}
