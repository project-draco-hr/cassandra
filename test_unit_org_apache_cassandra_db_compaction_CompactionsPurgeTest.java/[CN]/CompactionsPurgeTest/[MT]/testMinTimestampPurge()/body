{
  CompactionManager.instance.disableAutoCompaction();
  Keyspace keyspace=Keyspace.open(KEYSPACE2);
  String cfName="Standard1";
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(cfName);
  Mutation rm;
  DecoratedKey key3=Util.dk("key3");
  rm=new Mutation(KEYSPACE2,key3.getKey());
  rm.add(cfName,cellname("c1"),ByteBufferUtil.EMPTY_BYTE_BUFFER,8);
  rm.add(cfName,cellname("c2"),ByteBufferUtil.EMPTY_BYTE_BUFFER,8);
  rm.apply();
  cfs.forceBlockingFlush();
  rm=new Mutation(KEYSPACE2,key3.getKey());
  rm.delete(cfName,cellname("c1"),10);
  rm.apply();
  cfs.forceBlockingFlush();
  Collection<SSTableReader> sstablesIncomplete=cfs.getSSTables();
  rm=new Mutation(KEYSPACE2,key3.getKey());
  rm.delete(cfName,cellname("c2"),9);
  rm.apply();
  cfs.forceBlockingFlush();
  cfs.getCompactionStrategy().getUserDefinedTask(sstablesIncomplete,Integer.MAX_VALUE).execute(null);
  ColumnFamily cf=cfs.getColumnFamily(QueryFilter.getIdentityFilter(key3,cfName,System.currentTimeMillis()));
  assertFalse(cf.getColumn(cellname("c2")).isLive());
  assertEquals(2,cf.getColumnCount());
}
