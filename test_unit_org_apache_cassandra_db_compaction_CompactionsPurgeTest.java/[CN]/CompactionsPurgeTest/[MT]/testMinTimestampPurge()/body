{
  CompactionManager.instance.disableAutoCompaction();
  Table table=Table.open(TABLE2);
  String cfName="Standard1";
  ColumnFamilyStore cfs=table.getColumnFamilyStore(cfName);
  RowMutation rm;
  DecoratedKey key3=Util.dk("key3");
  rm=new RowMutation(TABLE2,key3.key);
  rm.add(cfName,ByteBufferUtil.bytes("c1"),ByteBufferUtil.EMPTY_BYTE_BUFFER,8);
  rm.add(cfName,ByteBufferUtil.bytes("c2"),ByteBufferUtil.EMPTY_BYTE_BUFFER,8);
  rm.apply();
  cfs.forceBlockingFlush();
  rm=new RowMutation(TABLE2,key3.key);
  rm.delete(cfName,ByteBufferUtil.bytes("c1"),10);
  rm.apply();
  cfs.forceBlockingFlush();
  Collection<SSTableReader> sstablesIncomplete=cfs.getSSTables();
  rm=new RowMutation(TABLE2,key3.key);
  rm.delete(cfName,ByteBufferUtil.bytes("c2"),9);
  rm.apply();
  cfs.forceBlockingFlush();
  cfs.getCompactionStrategy().getUserDefinedTask(sstablesIncomplete,Integer.MAX_VALUE).execute(null);
  ColumnFamily cf=cfs.getColumnFamily(QueryFilter.getIdentityFilter(key3,cfName));
  Assert.assertFalse(cf.getColumn(ByteBufferUtil.bytes("c2")).isLive());
  Assert.assertEquals(2,cf.getColumnCount());
}
