{
  List<String> mvPrimaryKeys=Arrays.asList("((a, b), c)","((b, a), c)","(a, b, c)","(c, b, a)","((c, a), b)");
  for (int i=0; i < mvPrimaryKeys.size(); i++) {
    createTable("CREATE TABLE %s (a int, b int, c int, d int, PRIMARY KEY ((a, b), c))");
    execute("USE " + keyspace());
    executeNet(protocolVersion,"USE " + keyspace());
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",0,0,1,1);
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",0,10,1,2);
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",1,0,2,1);
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",1,10,2,2);
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",2,1,3,1);
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",2,10,3,2);
    logger.info("Testing MV primary key: {}",mvPrimaryKeys.get(i));
    String viewName="mv_test" + i;
    createView(viewName,"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE a > 0 AND b > 5 AND c IS NOT NULL PRIMARY KEY " + mvPrimaryKeys.get(i));
    waitForView(keyspace(),viewName);
    assertRowsIgnoringOrder(execute("SELECT a, b, c, d FROM mv_test" + i),row(1,10,2,2),row(2,10,3,2));
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",2,0,0,0);
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",2,1,0,0);
    assertRowsIgnoringOrder(execute("SELECT a, b, c, d FROM mv_test" + i),row(1,10,2,2),row(2,10,3,2));
    execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",3,10,4,2);
    assertRowsIgnoringOrder(execute("SELECT a, b, c, d FROM mv_test" + i),row(1,10,2,2),row(2,10,3,2),row(3,10,4,2));
    execute("UPDATE %s SET d = ? WHERE a = ? AND b = ? AND c = ?",1,0,0,0);
    execute("UPDATE %s SET d = ? WHERE a = ? AND b = ? AND c = ?",1,0,1,0);
    assertRowsIgnoringOrder(execute("SELECT a, b, c, d FROM mv_test" + i),row(1,10,2,2),row(2,10,3,2),row(3,10,4,2));
    execute("UPDATE %s SET d = ? WHERE a = ? AND b = ? AND c = ?",100,3,10,4);
    assertRowsIgnoringOrder(execute("SELECT a, b, c, d FROM mv_test" + i),row(1,10,2,2),row(2,10,3,2),row(3,10,4,100));
    execute("DELETE FROM %s WHERE a = ? AND b = ? AND c = ?",0,0,0);
    execute("DELETE FROM %s WHERE a = ? AND b = ? AND c = ?",0,1,0);
    execute("DELETE FROM %s WHERE a = ? AND b = ?",0,0);
    assertRowsIgnoringOrder(execute("SELECT a, b, c, d FROM mv_test" + i),row(1,10,2,2),row(2,10,3,2),row(3,10,4,100));
    execute("DELETE FROM %s WHERE a = ? AND b = ? AND c = ?",1,1,0);
    assertRowsIgnoringOrder(execute("SELECT a, b, c, d FROM mv_test" + i),row(1,10,2,2),row(2,10,3,2),row(3,10,4,100));
    execute("DELETE FROM %s WHERE a = ? AND b = ?",1,10);
    assertRowsIgnoringOrder(execute("SELECT a, b, c, d FROM mv_test" + i),row(2,10,3,2),row(3,10,4,100));
  }
}
