{
  UUID cfId=UUIDSerializer.serializer.deserialize(in,MessagingService.current_version);
  int sequenceNumber=in.readInt();
  Version sstableVersion=SSTableFormat.Type.current().info.getVersion(in.readUTF());
  SSTableFormat.Type format=SSTableFormat.Type.LEGACY;
  if (version >= StreamMessage.VERSION_22)   format=SSTableFormat.Type.validate(in.readUTF());
  long estimatedKeys=in.readLong();
  int count=in.readInt();
  List<Pair<Long,Long>> sections=new ArrayList<>(count);
  for (int k=0; k < count; k++)   sections.add(Pair.create(in.readLong(),in.readLong()));
  CompressionInfo compressionInfo=CompressionInfo.serializer.deserialize(in,MessagingService.current_version);
  long repairedAt=in.readLong();
  int sstableLevel=in.readInt();
  SerializationHeader.Component header=version >= StreamMessage.VERSION_30 && sstableVersion.storeRows() ? SerializationHeader.serializer.deserialize(sstableVersion,in) : null;
  return new FileMessageHeader(cfId,sequenceNumber,sstableVersion,format,estimatedKeys,sections,compressionInfo,repairedAt,sstableLevel,header);
}
