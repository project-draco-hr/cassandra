{
  UUIDSerializer.serializer.serialize(header.cfId,out,version);
  out.writeInt(header.sequenceNumber);
  out.writeUTF(header.version.toString());
  if (version < StreamMessage.VERSION_22 && header.format != SSTableFormat.Type.LEGACY && header.format != SSTableFormat.Type.BIG)   throw new UnsupportedOperationException("Can't stream non-legacy sstables to nodes < 2.2");
  if (version >= StreamMessage.VERSION_22)   out.writeUTF(header.format.name);
  out.writeLong(header.estimatedKeys);
  out.writeInt(header.sections.size());
  for (  Pair<Long,Long> section : header.sections) {
    out.writeLong(section.left);
    out.writeLong(section.right);
  }
  CompressionInfo compressionInfo=null;
  if (header.compressionMetadata != null)   compressionInfo=new CompressionInfo(header.compressionMetadata.getChunksForSections(header.sections),header.compressionMetadata.parameters);
  CompressionInfo.serializer.serialize(compressionInfo,out,version);
  out.writeLong(header.repairedAt);
  out.writeInt(header.sstableLevel);
  if (version >= StreamMessage.VERSION_30 && header.version.storeRows())   SerializationHeader.serializer.serialize(header.version,header.header,out);
  return compressionInfo;
}
