{
  StringTokenizer st=new StringTokenizer(name,String.valueOf(separator));
  String nexttok;
  String ksname=st.nextToken();
  String cfname=st.nextToken();
  nexttok=st.nextToken();
  Type type=Type.FINAL;
  if (nexttok.equals(Type.TEMP.marker)) {
    type=Type.TEMP;
    nexttok=st.nextToken();
  }
 else   if (nexttok.equals(Type.TEMPLINK.marker)) {
    type=Type.TEMPLINK;
    nexttok=st.nextToken();
  }
  if (!Version.validate(nexttok))   throw new UnsupportedOperationException("SSTable " + name + " is too old to open.  Upgrade to 2.0 first, and run upgradesstables");
  Version version=new Version(nexttok);
  nexttok=st.nextToken();
  int generation=Integer.parseInt(nexttok);
  String component=null;
  if (!skipComponent)   component=st.nextToken();
  directory=directory != null ? directory : new File(".");
  return Pair.create(new Descriptor(version,directory,ksname,cfname,generation,type),component);
}
