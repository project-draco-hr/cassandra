{
  final int lastBucket=decayingBuckets.length - 1;
  if (decayingBuckets[lastBucket] > 0)   throw new IllegalStateException("Unable to compute when histogram overflowed");
  final long count=count();
  if (count <= 1) {
    return 0.0D;
  }
 else {
    double mean=this.getMean();
    double sum=0.0D;
    for (int i=0; i < lastBucket; ++i) {
      long value=bucketOffsets[i];
      double diff=value - mean;
      sum+=diff * diff * decayingBuckets[i];
    }
    return Math.sqrt(sum / (count - 1));
  }
}
