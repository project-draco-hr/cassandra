{
  EstimatedHistogram rowSizes=new EstimatedHistogram(new long[]{1L,2L},new long[]{3L,4L,5L});
  EstimatedHistogram columnCounts=new EstimatedHistogram(new long[]{6L,7L},new long[]{8L,9L,10L});
  ReplayPosition start=new ReplayPosition(11L,12);
  ReplayPosition end=new ReplayPosition(15L,9);
  long minTimestamp=2162517136L;
  long maxTimestamp=4162517136L;
  MetadataCollector collector=new MetadataCollector(new SimpleDenseCellNameType(BytesType.instance)).estimatedRowSize(rowSizes).estimatedColumnCount(columnCounts).commitLogLowerBound(start).commitLogUpperBound(end);
  collector.updateMinTimestamp(minTimestamp);
  collector.updateMaxTimestamp(maxTimestamp);
  Set<Integer> ancestors=Sets.newHashSet(1,2,3,4);
  for (  int i : ancestors)   collector.addAncestor(i);
  String partitioner=RandomPartitioner.class.getCanonicalName();
  double bfFpChance=0.1;
  Map<MetadataType,MetadataComponent> originalMetadata=collector.finalizeMetadata(partitioner,bfFpChance,0);
  return originalMetadata;
}
