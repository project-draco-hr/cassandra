{
  long totalSize=totalSize();
  try (RandomAccessReader file=sstable.openDataReader();final ChannelProxy fc=file.getChannel().sharedCopy()){
    long progress=0L;
    List<Pair<Long,Long>> sections=getTransferSections(compressionInfo.chunks);
    for (    final Pair<Long,Long> section : sections) {
      long length=section.right - section.left;
      long bytesTransferred=0;
      while (bytesTransferred < length) {
        final long bytesTransferredFinal=bytesTransferred;
        final int toTransfer=(int)Math.min(CHUNK_SIZE,length - bytesTransferred);
        limiter.acquire(toTransfer);
        long lastWrite=out.applyToChannel(new Function<WritableByteChannel,Long>(){
          public Long apply(          WritableByteChannel wbc){
            return fc.transferTo(section.left + bytesTransferredFinal,toTransfer,wbc);
          }
        }
);
        bytesTransferred+=lastWrite;
        progress+=lastWrite;
        session.progress(sstable.descriptor,ProgressInfo.Direction.OUT,progress,totalSize);
      }
    }
  }
 }
