{
  long size=TypeSizes.NATIVE.sizeof(rsc.keyspace);
  size+=TypeSizes.NATIVE.sizeof(rsc.column_family);
  ByteBuffer sc=rsc.super_column;
  if (sc != null) {
    size+=TypeSizes.NATIVE.sizeof(sc.remaining());
    size+=sc.remaining();
  }
 else {
    size+=TypeSizes.NATIVE.sizeof(0);
  }
  TSerializer ser=new TSerializer(new TBinaryProtocol.Factory());
  try {
    int predicateLength=ser.serialize(rsc.predicate).length;
    size+=TypeSizes.NATIVE.sizeof(predicateLength);
    size+=predicateLength;
  }
 catch (  TException e) {
    throw new RuntimeException(e);
  }
  if (version >= MessagingService.VERSION_11) {
    if (rsc.row_filter == null) {
      size+=TypeSizes.NATIVE.sizeof(0);
    }
 else {
      size+=TypeSizes.NATIVE.sizeof(rsc.row_filter.size());
      for (      IndexExpression expr : rsc.row_filter) {
        try {
          int filterLength=ser.serialize(expr).length;
          size+=TypeSizes.NATIVE.sizeof(filterLength);
          size+=filterLength;
        }
 catch (        TException e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
  size+=AbstractBounds.serializer.serializedSize(rsc.range,version);
  size+=TypeSizes.NATIVE.sizeof(rsc.maxResults);
  if (version >= MessagingService.VERSION_11) {
    size+=TypeSizes.NATIVE.sizeof(rsc.maxIsColumns);
    size+=TypeSizes.NATIVE.sizeof(rsc.isPaging);
  }
  return size;
}
