{
  out.writeUTF(sliceCommand.keyspace);
  out.writeUTF(sliceCommand.column_family);
  IDiskAtomFilter filter=sliceCommand.predicate;
  if (version < MessagingService.VERSION_20) {
    ByteBuffer sc=null;
    CFMetaData metadata=Schema.instance.getCFMetaData(sliceCommand.getKeyspace(),sliceCommand.column_family);
    if (metadata.cfType == ColumnFamilyType.Super) {
      SuperColumns.SCFilter scFilter=SuperColumns.filterToSC((CompositeType)metadata.comparator,filter);
      sc=scFilter.scName;
      filter=scFilter.updatedFilter;
    }
    out.writeInt(sc == null ? 0 : sc.remaining());
    if (sc != null)     ByteBufferUtil.write(sc,out);
  }
  if (version < MessagingService.VERSION_12) {
    FBUtilities.serialize(new TSerializer(new TBinaryProtocol.Factory()),asSlicePredicate(sliceCommand.predicate),out);
  }
 else {
    IDiskAtomFilter.Serializer.instance.serialize(sliceCommand.predicate,out,version);
  }
  if (version >= MessagingService.VERSION_11) {
    if (sliceCommand.row_filter == null) {
      out.writeInt(0);
    }
 else {
      out.writeInt(sliceCommand.row_filter.size());
      for (      IndexExpression expr : sliceCommand.row_filter) {
        if (version < MessagingService.VERSION_12) {
          FBUtilities.serialize(new TSerializer(new TBinaryProtocol.Factory()),expr,out);
        }
 else {
          ByteBufferUtil.writeWithShortLength(expr.column_name,out);
          out.writeInt(expr.op.getValue());
          ByteBufferUtil.writeWithShortLength(expr.value,out);
        }
      }
    }
  }
  AbstractBounds.serializer.serialize(sliceCommand.range,out,version);
  out.writeInt(sliceCommand.maxResults);
  if (version >= MessagingService.VERSION_11) {
    out.writeBoolean(sliceCommand.countCQL3Rows);
    out.writeBoolean(sliceCommand.isPaging);
  }
}
