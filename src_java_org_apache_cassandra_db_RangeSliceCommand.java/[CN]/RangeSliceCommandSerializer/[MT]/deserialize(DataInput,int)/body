{
  String keyspace=in.readUTF();
  String columnFamily=in.readUTF();
  long timestamp=in.readLong();
  CFMetaData metadata=Schema.instance.getCFMetaData(keyspace,columnFamily);
  IDiskAtomFilter predicate=metadata.comparator.diskAtomFilterSerializer().deserialize(in,version);
  List<IndexExpression> rowFilter;
  int filterCount=in.readInt();
  rowFilter=new ArrayList<>(filterCount);
  for (int i=0; i < filterCount; i++) {
    rowFilter.add(IndexExpression.readFrom(in));
  }
  AbstractBounds<RowPosition> range=AbstractBounds.rowPositionSerializer.deserialize(in,MessagingService.globalPartitioner(),version);
  int maxResults=in.readInt();
  boolean countCQL3Rows=in.readBoolean();
  boolean isPaging=in.readBoolean();
  return new RangeSliceCommand(keyspace,columnFamily,timestamp,predicate,range,rowFilter,maxResults,countCQL3Rows,isPaging);
}
