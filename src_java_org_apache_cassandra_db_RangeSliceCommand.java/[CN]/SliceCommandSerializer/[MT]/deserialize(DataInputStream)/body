{
  String keyspace=dis.readUTF();
  String column_family=dis.readUTF();
  int scLength=dis.readInt();
  byte[] super_column=null;
  if (scLength > 0)   super_column=readBuf(scLength,dis);
  byte[] predBytes=new byte[dis.readInt()];
  dis.readFully(predBytes);
  TDeserializer dser=new TDeserializer(new TBinaryProtocol.Factory());
  SlicePredicate pred=new SlicePredicate();
  try {
    dser.deserialize(pred,predBytes);
  }
 catch (  TException ex) {
    throw new IOException(ex);
  }
  DecoratedKey startKey=DecoratedKey.serializer().deserialize(dis);
  DecoratedKey finishKey=DecoratedKey.serializer().deserialize(dis);
  int max_keys=dis.readInt();
  return new RangeSliceCommand(keyspace,ThriftGlue.createColumnParent(column_family,super_column),pred,startKey,finishKey,max_keys);
}
