{
  final ByteBuffer key=getKey();
  final List<Column> columns=getColumns();
  List<Mutation> mutations=new ArrayList<>(columns.size());
  for (  Column c : columns) {
    ColumnOrSuperColumn column=new ColumnOrSuperColumn().setColumn(c);
    mutations.add(new Mutation().setColumn_or_supercolumn(column));
  }
  Map<String,List<Mutation>> row=Collections.singletonMap(type.table,mutations);
  final Map<ByteBuffer,Map<String,List<Mutation>>> record=Collections.singletonMap(key,row);
  timeWithRetry(new RunOp(){
    @Override public boolean run() throws Exception {
      client.batch_mutate(record,settings.command.consistencyLevel);
      return true;
    }
    @Override public int partitionCount(){
      return 1;
    }
    @Override public int rowCount(){
      return 1;
    }
  }
);
}
