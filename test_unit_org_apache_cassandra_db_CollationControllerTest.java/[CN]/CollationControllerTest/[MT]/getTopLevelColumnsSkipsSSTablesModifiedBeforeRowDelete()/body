{
  Keyspace keyspace=Keyspace.open("Keyspace1");
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore("Standard1");
  Mutation rm;
  DecoratedKey dk=Util.dk("key1");
  rm=new Mutation(keyspace.getName(),dk.getKey());
  rm.add(cfs.name,Util.cellname("Column1"),ByteBufferUtil.bytes("asdf"),0);
  rm.apply();
  cfs.forceBlockingFlush();
  rm=new Mutation(keyspace.getName(),dk.getKey());
  rm.delete(cfs.name,10);
  rm.apply();
  rm=new Mutation(keyspace.getName(),Util.dk("key2").getKey());
  rm.add(cfs.name,Util.cellname("Column1"),ByteBufferUtil.bytes("zxcv"),20);
  rm.apply();
  cfs.forceBlockingFlush();
  rm=new Mutation(keyspace.getName(),dk.getKey());
  rm.add(cfs.name,Util.cellname("Column1"),ByteBufferUtil.bytes("foobar"),30);
  rm.apply();
  cfs.forceBlockingFlush();
  QueryFilter filter=Util.namesQueryFilter(cfs,dk,"Column1");
  CollationController controller=new CollationController(cfs,filter,Integer.MIN_VALUE);
  controller.getTopLevelColumns(true);
  assertEquals(1,controller.getSstablesIterated());
  filter=QueryFilter.getIdentityFilter(dk,cfs.name,System.currentTimeMillis());
  controller=new CollationController(cfs,filter,Integer.MIN_VALUE);
  controller.getTopLevelColumns(true);
  assertEquals(2,controller.getSstablesIterated());
}
