{
  AntiEntropyService.Validator v0=new AntiEntropyService.Validator(Statics.req);
  IPartitioner p=new RandomPartitioner();
  MerkleTree mt=new MerkleTree(p,FULL_RANGE,MerkleTree.RECOMMENDED_DEPTH,Integer.MAX_VALUE);
  for (int i=0; i < 10; i++)   mt.split(p.getRandomToken());
  AntiEntropyService.Validator v1=new AntiEntropyService.Validator(Statics.req,mt);
  DataOutputStream out=getOutput("service.TreeResponse.bin");
  AntiEntropyService.Validator.serializer.serialize(v0,out,getVersion());
  AntiEntropyService.Validator.serializer.serialize(v1,out,getVersion());
  v0.createMessage().serialize(out,getVersion());
  v1.createMessage().serialize(out,getVersion());
  out.close();
}
