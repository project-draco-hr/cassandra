{
  IPartitioner p=RandomPartitioner.instance;
  MerkleTree mt=new MerkleTree(p,FULL_RANGE,MerkleTree.RECOMMENDED_DEPTH,(int)Math.pow(2,15));
  Validator v0=new Validator(DESC,FBUtilities.getBroadcastAddress(),-1);
  ValidationComplete c0=new ValidationComplete(DESC,mt);
  mt=new MerkleTree(p,FULL_RANGE,MerkleTree.RECOMMENDED_DEPTH,Integer.MAX_VALUE);
  for (int i=0; i < 10; i++)   mt.split(p.getRandomToken());
  Validator v1=new Validator(DESC,FBUtilities.getBroadcastAddress(),-1);
  ValidationComplete c1=new ValidationComplete(DESC,mt);
  ValidationComplete c3=new ValidationComplete(DESC);
  testRepairMessageWrite("service.ValidationComplete.bin",c0,c1,c3);
}
