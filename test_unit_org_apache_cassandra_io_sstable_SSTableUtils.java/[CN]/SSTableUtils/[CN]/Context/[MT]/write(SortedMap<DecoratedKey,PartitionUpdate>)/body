{
  PartitionColumns.Builder builder=PartitionColumns.builder();
  for (  PartitionUpdate update : sorted.values())   builder.addAll(update.columns());
  final Iterator<Map.Entry<DecoratedKey,PartitionUpdate>> iter=sorted.entrySet().iterator();
  return write(sorted.size(),new Appender(){
    public SerializationHeader header(){
      return new SerializationHeader(Schema.instance.getCFMetaData(ksname,cfname),builder.build(),EncodingStats.NO_STATS);
    }
    @Override public boolean append(    SSTableTxnWriter writer) throws IOException {
      if (!iter.hasNext())       return false;
      writer.append(iter.next().getValue().unfilteredIterator());
      return true;
    }
  }
);
}
