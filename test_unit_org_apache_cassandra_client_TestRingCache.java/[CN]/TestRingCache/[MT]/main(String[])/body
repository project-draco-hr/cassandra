{
  String table;
  int minRow;
  int maxRow;
  String rowPrefix;
  if (args.length > 0) {
    table=args[0];
    rowPrefix=args[1];
    minRow=Integer.parseInt(args[2]);
    maxRow=minRow + 1;
  }
 else {
    table="Keyspace1";
    minRow=1;
    maxRow=10;
    rowPrefix="row";
  }
  for (int nRows=minRow; nRows < maxRow; nRows++) {
    String row=rowPrefix + nRows;
    ColumnPath col=createColumnPath("Standard1",null,"col1".getBytes());
    List<InetAddress> endPoints=ringCache.getEndPoint(table,row);
    String hosts="";
    for (int i=0; i < endPoints.size(); i++)     hosts=hosts + ((i > 0) ? "," : "") + endPoints.get(i);
    System.out.println("hosts with key " + row + " : "+ hosts+ "; choose "+ endPoints.get(0));
    setup(endPoints.get(0).getHostAddress(),DatabaseDescriptor.getThriftPort());
    thriftClient.insert(table,row,col,"val1".getBytes(),1,ConsistencyLevel.ONE);
    Column column=thriftClient.get(table,row,col,ConsistencyLevel.ONE).column;
    System.out.println("read row " + row + " "+ new String(column.name)+ ":"+ new String(column.value)+ ":"+ column.timestamp);
  }
  System.exit(1);
}
