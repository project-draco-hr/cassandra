{
  Keyspace keyspace=Keyspace.open(KEYSPACE1);
  ColumnFamilyStore store=keyspace.getColumnFamilyStore("Standard1");
  long timestamp=System.currentTimeMillis();
  for (int i=0; i < 10; i++) {
    DecoratedKey key=Util.dk(Integer.toString(i));
    for (int j=0; j < 10; j++)     new RowUpdateBuilder(store.metadata,timestamp,10 + j,Integer.toString(i)).clustering(Integer.toString(j)).add("val",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  }
  new RowUpdateBuilder(store.metadata,timestamp,10000,"longttl").clustering("col").add("val",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  store.forceBlockingFlush();
  assertEquals(1,store.getLiveSSTables().size());
  int ttltimestamp=(int)(System.currentTimeMillis() / 1000);
  int firstDelTime=0;
  for (  SSTableReader sstable : store.getLiveSSTables()) {
    firstDelTime=sstable.getSSTableMetadata().maxLocalDeletionTime;
    assertEquals(ttltimestamp + 10000,firstDelTime,10);
  }
  new RowUpdateBuilder(store.metadata,timestamp,20000,"longttl2").clustering("col").add("val",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  ttltimestamp=(int)(System.currentTimeMillis() / 1000);
  store.forceBlockingFlush();
  assertEquals(2,store.getLiveSSTables().size());
  List<SSTableReader> sstables=new ArrayList<>(store.getLiveSSTables());
  if (sstables.get(0).getSSTableMetadata().maxLocalDeletionTime < sstables.get(1).getSSTableMetadata().maxLocalDeletionTime) {
    assertEquals(sstables.get(0).getSSTableMetadata().maxLocalDeletionTime,firstDelTime);
    assertEquals(sstables.get(1).getSSTableMetadata().maxLocalDeletionTime,ttltimestamp + 20000,10);
  }
 else {
    assertEquals(sstables.get(1).getSSTableMetadata().maxLocalDeletionTime,firstDelTime);
    assertEquals(sstables.get(0).getSSTableMetadata().maxLocalDeletionTime,ttltimestamp + 20000,10);
  }
  Util.compact(store,store.getLiveSSTables());
  assertEquals(1,store.getLiveSSTables().size());
  for (  SSTableReader sstable : store.getLiveSSTables()) {
    assertEquals(sstable.getSSTableMetadata().maxLocalDeletionTime,ttltimestamp + 20000,10);
  }
}
