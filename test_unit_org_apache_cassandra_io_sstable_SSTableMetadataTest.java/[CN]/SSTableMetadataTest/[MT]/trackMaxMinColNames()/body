{
  Keyspace keyspace=Keyspace.open(KEYSPACE1);
  ColumnFamilyStore store=keyspace.getColumnFamilyStore("Standard3");
  for (int j=0; j < 8; j++) {
    String key="row" + j;
    for (int i=100; i < 150; i++) {
      new RowUpdateBuilder(store.metadata,System.currentTimeMillis(),key).clustering(j + "col" + i).add("val",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
    }
  }
  store.forceBlockingFlush();
  assertEquals(1,store.getLiveSSTables().size());
  for (  SSTableReader sstable : store.getLiveSSTables()) {
    assertEquals(ByteBufferUtil.string(sstable.getSSTableMetadata().minClusteringValues.get(0)),"0col100");
    assertEquals(ByteBufferUtil.string(sstable.getSSTableMetadata().maxClusteringValues.get(0)),"7col149");
  }
  String key="row2";
  for (int i=101; i < 299; i++) {
    new RowUpdateBuilder(store.metadata,System.currentTimeMillis(),key).clustering(9 + "col" + i).add("val",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe();
  }
  store.forceBlockingFlush();
  store.forceMajorCompaction();
  assertEquals(1,store.getLiveSSTables().size());
  for (  SSTableReader sstable : store.getLiveSSTables()) {
    assertEquals(ByteBufferUtil.string(sstable.getSSTableMetadata().minClusteringValues.get(0)),"0col100");
    assertEquals(ByteBufferUtil.string(sstable.getSSTableMetadata().maxClusteringValues.get(0)),"9col298");
  }
}
