def read_until(self, until, blksize=4096, timeout=None, flags=0, ptty_timeout=None):
    if (not isinstance(until, re._pattern_type)):
        until = re.compile(until, flags)
    cqlshlog.debug(('Searching for %r' % (until.pattern,)))
    got = self.readbuf
    self.readbuf = ''
    with timing_out(timeout):
        while True:
            val = self.read(blksize, ptty_timeout)
            cqlshlog.debug(('read %r from subproc' % (val,)))
            if (val == ''):
                raise EOFError(("'until' pattern %r not found" % (until.pattern,)))
            got += val
            m = until.search(got)
            if (m is not None):
                self.readbuf = got[m.end():]
                got = got[:m.end()]
                return got
