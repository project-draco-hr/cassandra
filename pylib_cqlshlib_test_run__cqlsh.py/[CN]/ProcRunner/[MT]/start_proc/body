def start_proc(self):
    preexec = noop
    stdin = stdout = stderr = None
    if self.tty:
        (masterfd, slavefd) = pty.openpty()
        preexec = (lambda : set_controlling_pty(masterfd, slavefd))
    else:
        stdin = stdout = subprocess.PIPE
        stderr = subprocess.STDOUT
    cqlshlog.info(('Spawning %r subprocess with args: %r and env: %r' % (self.exe_path, self.args, self.env)))
    self.proc = subprocess.Popen((('python', self.exe_path) + tuple(self.args)), env=self.env, preexec_fn=preexec, stdin=stdin, stdout=stdout, stderr=stderr, close_fds=False)
    if self.tty:
        os.close(slavefd)
        self.childpty = masterfd
        self.send = self.send_tty
        self.read = self.read_tty
    else:
        self.send = self.send_pipe
        self.read = self.read_pipe
