@contextlib.contextmanager
def raising_signal(signum, exc):
    '\n    Within the wrapped context, the given signal will interrupt signal\n    calls and will raise the given exception class. The preexisting signal\n    handling will be reinstated on context exit.\n    '

    def raiser(signum, frames):
        raise exc()
    oldhandlr = signal.signal(signum, raiser)
    try:
        yield
    finally:
        signal.signal(signum, oldhandlr)
