{
  final Function<CFDefinition.Name,String> getDefName=new Function<CFDefinition.Name,String>(){
    public String apply(    CFDefinition.Name name){
      return name.toString();
    }
  }
;
  Function<Map.Entry<ColumnSpecification,Collection<CFDefinition.Name>>,String> mappingEntryToString=new Function<Map.Entry<ColumnSpecification,Collection<CFDefinition.Name>>,String>(){
    public String apply(    Map.Entry<ColumnSpecification,Collection<CFDefinition.Name>> entry){
      StringBuilder builder=new StringBuilder();
      builder.append(entry.getKey().name.toString());
      builder.append(":[");
      builder.append(Joiner.on(',').join(Iterables.transform(entry.getValue(),getDefName)));
      builder.append("]");
      return builder.toString();
    }
  }
;
  Function<ColumnSpecification,String> colSpecToString=new Function<ColumnSpecification,String>(){
    public String apply(    ColumnSpecification columnSpecification){
      return columnSpecification.name.toString();
    }
  }
;
  StringBuilder builder=new StringBuilder();
  builder.append("{ Columns:[");
  builder.append(Joiner.on(",").join(Iterables.transform(columnSpecifications,colSpecToString)));
  builder.append("], Mappings:[");
  builder.append(Joiner.on(", ").join(Iterables.transform(columnMappings.asMap().entrySet(),mappingEntryToString)));
  builder.append("] }");
  return builder.toString();
}
