{
  final Function<ColumnDefinition,String> getDefName=new Function<ColumnDefinition,String>(){
    public String apply(    ColumnDefinition columnDefinition){
      return columnDefinition.name.toString();
    }
  }
;
  Function<Map.Entry<ColumnSpecification,Collection<ColumnDefinition>>,String> mappingEntryToString=new Function<Map.Entry<ColumnSpecification,Collection<ColumnDefinition>>,String>(){
    public String apply(    Map.Entry<ColumnSpecification,Collection<ColumnDefinition>> entry){
      StringBuilder builder=new StringBuilder();
      builder.append(entry.getKey().name.toString());
      builder.append(":[");
      builder.append(Joiner.on(',').join(Iterables.transform(entry.getValue(),getDefName)));
      builder.append("]");
      return builder.toString();
    }
  }
;
  StringBuilder builder=new StringBuilder();
  builder.append("{ ");
  builder.append(Joiner.on(", ").join(Iterables.transform(columnMappings.asMap().entrySet(),mappingEntryToString)));
  builder.append(" }");
  return builder.toString();
}
