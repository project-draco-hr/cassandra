{
  Properties prop=new Properties();
  prop.load(new FileInputStream(new File(location + File.separatorChar + PROPERTIES_FILE)));
  int hash=Integer.parseInt(prop.getProperty(HASH_PROPERTY));
  int cells=Integer.parseInt(prop.getProperty(CELLS_PROPERTY));
  String cfidString=prop.getProperty(CFID_PROPERTY);
  if (cfidString != null) {
    UUID cfid=UUID.fromString(cfidString);
    if (Schema.instance.getCF(cfid) == null) {
      CFMetaData cfm=Schema.instance.getCFMetaData(KEYSPACE,TABLE);
      Schema.instance.purge(cfm);
      Schema.instance.load(cfm.copy(cfid));
    }
  }
  Hasher hasher=new Hasher();
  CommitLogTestReplayer replayer=new CommitLogTestReplayer(CommitLog.instance,hasher);
  File[] files=new File(location).listFiles(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".log");
    }
  }
);
  replayer.recover(files);
  Assert.assertEquals(cells,hasher.cells);
  Assert.assertEquals(hash,hasher.hash);
}
