{
  final Table table=Table.open("Keyspace1");
  final ColumnFamilyStore cfStore=table.getColumnFamilyStore("Standard1");
  final DecoratedKey ROW=Util.dk("row5");
  ColumnFamily cf=TreeMapBackedSortedColumns.factory.create("Keyspace1","Standard1");
  cf.addColumn(column("col1","val1",1L));
  cf.addColumn(expiringColumn("col2","val2",1L,60));
  cf.addColumn(column("col3","val3",1L));
  RowMutation rm=new RowMutation("Keyspace1",ROW.key,cf);
  rm.apply();
  Runnable verify=new WrappedRunnable(){
    public void runMayThrow() throws Exception {
      ColumnFamily cf;
      cf=cfStore.getColumnFamily(ROW,ByteBufferUtil.EMPTY_BYTE_BUFFER,ByteBufferUtil.EMPTY_BYTE_BUFFER,false,2,System.currentTimeMillis());
      assertColumns(cf,"col1","col2");
      assertColumns(ColumnFamilyStore.removeDeleted(cf,Integer.MAX_VALUE),"col1");
      cf=cfStore.getColumnFamily(ROW,ByteBufferUtil.bytes("col2"),ByteBufferUtil.EMPTY_BYTE_BUFFER,false,1,System.currentTimeMillis());
      assertColumns(cf,"col2");
      assertColumns(ColumnFamilyStore.removeDeleted(cf,Integer.MAX_VALUE));
    }
  }
;
  reTest(table.getColumnFamilyStore("Standard1"),verify);
}
