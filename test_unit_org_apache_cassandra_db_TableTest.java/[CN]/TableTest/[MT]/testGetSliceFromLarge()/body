{
  Table table=Table.open("Keyspace1");
  ColumnFamilyStore cfStore=table.getColumnFamilyStore("Standard1");
  String ROW="row3";
  RowMutation rm=new RowMutation("Keyspace1",ROW);
  ColumnFamily cf=ColumnFamily.create("Keyspace1","Standard1");
  for (int i=1000; i < 2000; i++)   cf.addColumn(column("col" + i,("vvvvvvvvvvvvvvvv" + i),1L));
  rm.add(cf);
  rm.apply();
  cfStore.forceBlockingFlush();
  cf=cfStore.getColumnFamily(ROW,new QueryPath("Standard1"),"col1000".getBytes(),ArrayUtils.EMPTY_BYTE_ARRAY,true,3);
  assertColumns(cf,"col1000","col1001","col1002");
  assertEquals(new String(cf.getColumn("col1000".getBytes()).value()),"vvvvvvvvvvvvvvvv1000");
  assertEquals(new String(cf.getColumn("col1001".getBytes()).value()),"vvvvvvvvvvvvvvvv1001");
  assertEquals(new String(cf.getColumn("col1002".getBytes()).value()),"vvvvvvvvvvvvvvvv1002");
  cf=cfStore.getColumnFamily(ROW,new QueryPath("Standard1"),"col1195".getBytes(),ArrayUtils.EMPTY_BYTE_ARRAY,true,3);
  assertColumns(cf,"col1195","col1196","col1197");
  assertEquals(new String(cf.getColumn("col1195".getBytes()).value()),"vvvvvvvvvvvvvvvv1195");
  assertEquals(new String(cf.getColumn("col1196".getBytes()).value()),"vvvvvvvvvvvvvvvv1196");
  assertEquals(new String(cf.getColumn("col1197".getBytes()).value()),"vvvvvvvvvvvvvvvv1197");
  cf=cfStore.getColumnFamily(ROW,new QueryPath("Standard1"),"col1196".getBytes(),ArrayUtils.EMPTY_BYTE_ARRAY,false,3);
  assertColumns(cf,"col1194","col1195","col1196");
  assertEquals(new String(cf.getColumn("col1194".getBytes()).value()),"vvvvvvvvvvvvvvvv1194");
  assertEquals(new String(cf.getColumn("col1195".getBytes()).value()),"vvvvvvvvvvvvvvvv1195");
  assertEquals(new String(cf.getColumn("col1196".getBytes()).value()),"vvvvvvvvvvvvvvvv1196");
  cf=cfStore.getColumnFamily(ROW,new QueryPath("Standard1"),"col1990".getBytes(),ArrayUtils.EMPTY_BYTE_ARRAY,true,3);
  assertColumns(cf,"col1990","col1991","col1992");
  assertEquals(new String(cf.getColumn("col1990".getBytes()).value()),"vvvvvvvvvvvvvvvv1990");
  assertEquals(new String(cf.getColumn("col1991".getBytes()).value()),"vvvvvvvvvvvvvvvv1991");
  assertEquals(new String(cf.getColumn("col1992".getBytes()).value()),"vvvvvvvvvvvvvvvv1992");
}
