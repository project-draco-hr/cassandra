{
  DecoratedKey key=TEST_SLICE_KEY;
  Table table=Table.open("Keyspace1");
  ColumnFamilyStore cfStore=table.getColumnFamilyStore("Standard1");
  RowMutation rm=new RowMutation("Keyspace1",key.key);
  ColumnFamily cf=ColumnFamily.create("Keyspace1","Standard1");
  cf.addColumn(column("a","val1",1L));
  cf.addColumn(column("b","val2",1L));
  cf.addColumn(column("c","val3",1L));
  rm.add(cf);
  rm.apply();
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBuffer.wrap("b".getBytes()),ByteBuffer.wrap("c".getBytes()),false,100);
  assertEquals(2,cf.getColumnCount());
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBuffer.wrap("b".getBytes()),ByteBuffer.wrap("b".getBytes()),false,100);
  assertEquals(1,cf.getColumnCount());
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBuffer.wrap("b".getBytes()),ByteBuffer.wrap("c".getBytes()),false,1);
  assertEquals(1,cf.getColumnCount());
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBuffer.wrap("c".getBytes()),ByteBuffer.wrap("b".getBytes()),false,1);
  assertNull(cf);
}
