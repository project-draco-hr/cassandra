{
  final Table table=Table.open("Table1");
  final ColumnFamilyStore cfStore=table.getColumnFamilyStore("Standard1");
  final String ROW="row2";
  Runner setup=new Runner(){
    public void run() throws Exception {
      RowMutation rm=new RowMutation("Table1",ROW);
      ColumnFamily cf=ColumnFamily.create("Table1","Standard1");
      cf.addColumn(column("col1","val1",1L));
      cf.addColumn(column("col2","val2",1L));
      cf.addColumn(column("col3","val3",1L));
      cf.addColumn(column("col4","val4",1L));
      cf.addColumn(column("col5","val5",1L));
      cf.addColumn(column("col6","val6",1L));
      rm.add(cf);
      rm.apply();
      cfStore.forceBlockingFlush();
      rm=new RowMutation("Table1",ROW);
      cf=ColumnFamily.create("Table1","Standard1");
      cf.addColumn(column("col1","valx",2L));
      cf.addColumn(column("col2","valx",2L));
      cf.addColumn(column("col3","valx",2L));
      rm.add(cf);
      rm.apply();
    }
  }
;
  Runner verify=new Runner(){
    public void run() throws Exception {
      ColumnFamily cf;
      cf=cfStore.getColumnFamily(ROW,new QueryPath("Standard1"),"col2","",true,3);
      assertColumns(cf,"col2","col3","col4");
      assertEquals(new String(cf.getColumn("col2").value()),"valx");
      assertEquals(new String(cf.getColumn("col3").value()),"valx");
      assertEquals(new String(cf.getColumn("col4").value()),"val4");
    }
  }
;
  reTest(setup,table.getColumnFamilyStore("Standard1"),verify);
}
