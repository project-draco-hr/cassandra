{
  DecoratedKey key=Util.dk("row3");
  ColumnFamily cf;
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBufferUtil.bytes("col1000"),FBUtilities.EMPTY_BYTE_BUFFER,false,3);
  assertColumns(cf,"col1000","col1001","col1002");
  ByteBuffer col;
  col=cf.getColumn(ByteBufferUtil.bytes("col1000")).value();
  assertEquals(ByteBufferUtil.string(col),"v1000");
  col=cf.getColumn(ByteBufferUtil.bytes("col1001")).value();
  assertEquals(ByteBufferUtil.string(col),"v1001");
  col=cf.getColumn(ByteBufferUtil.bytes("col1002")).value();
  assertEquals(ByteBufferUtil.string(col),"v1002");
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBufferUtil.bytes("col1195"),FBUtilities.EMPTY_BYTE_BUFFER,false,3);
  assertColumns(cf,"col1195","col1196","col1197");
  col=cf.getColumn(ByteBufferUtil.bytes("col1195")).value();
  assertEquals(ByteBufferUtil.string(col),"v1195");
  col=cf.getColumn(ByteBufferUtil.bytes("col1196")).value();
  assertEquals(ByteBufferUtil.string(col),"v1196");
  col=cf.getColumn(ByteBufferUtil.bytes("col1197")).value();
  assertEquals(ByteBufferUtil.string(col),"v1197");
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBufferUtil.bytes("col1996"),FBUtilities.EMPTY_BYTE_BUFFER,true,1000);
  IColumn[] columns=cf.getSortedColumns().toArray(new IColumn[0]);
  for (int i=1000; i < 1996; i++) {
    String expectedName="col" + i;
    IColumn column=columns[i - 1000];
    assertEquals(ByteBufferUtil.string(column.name()),expectedName);
    assertEquals(ByteBufferUtil.string(column.value()),("v" + i));
  }
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBufferUtil.bytes("col1990"),FBUtilities.EMPTY_BYTE_BUFFER,false,3);
  assertColumns(cf,"col1990","col1991","col1992");
  col=cf.getColumn(ByteBufferUtil.bytes("col1990")).value();
  assertEquals(ByteBufferUtil.string(col),"v1990");
  col=cf.getColumn(ByteBufferUtil.bytes("col1991")).value();
  assertEquals(ByteBufferUtil.string(col),"v1991");
  col=cf.getColumn(ByteBufferUtil.bytes("col1992")).value();
  assertEquals(ByteBufferUtil.string(col),"v1992");
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),FBUtilities.EMPTY_BYTE_BUFFER,FBUtilities.EMPTY_BYTE_BUFFER,true,3);
  assertColumns(cf,"col1997","col1998","col1999");
  col=cf.getColumn(ByteBufferUtil.bytes("col1997")).value();
  assertEquals(ByteBufferUtil.string(col),"v1997");
  col=cf.getColumn(ByteBufferUtil.bytes("col1998")).value();
  assertEquals(ByteBufferUtil.string(col),"v1998");
  col=cf.getColumn(ByteBufferUtil.bytes("col1999")).value();
  assertEquals(ByteBufferUtil.string(col),"v1999");
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBufferUtil.bytes("col9000"),FBUtilities.EMPTY_BYTE_BUFFER,true,3);
  assertColumns(cf,"col1997","col1998","col1999");
  cf=cfStore.getColumnFamily(key,new QueryPath("Standard1"),ByteBufferUtil.bytes("col9000"),FBUtilities.EMPTY_BYTE_BUFFER,false,3);
  assertColumns(cf);
}
