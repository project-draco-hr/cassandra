{
  List<String> ret=new ArrayList<>();
  for (  Map.Entry<Verb,DroppedMessages> entry : droppedMessagesMap.entrySet()) {
    Verb verb=entry.getKey();
    DroppedMessages droppedMessages=entry.getValue();
    int droppedInternalTimeout=droppedMessages.droppedInternalTimeout.getAndSet(0);
    int droppedCrossNodeTimeout=droppedMessages.droppedCrossNodeTimeout.getAndSet(0);
    if (droppedInternalTimeout > 0 || droppedCrossNodeTimeout > 0) {
      ret.add(String.format("%s messages were dropped in last %d ms: %d for internal timeout and %d for cross node timeout." + " Mean internal dropped latency: %d ms and Mean cross-node dropped latency: %d ms",verb,LOG_DROPPED_INTERVAL_IN_MS,droppedInternalTimeout,droppedCrossNodeTimeout,TimeUnit.NANOSECONDS.toMillis((long)droppedMessages.metrics.internalDroppedLatency.getSnapshot().getMean()),TimeUnit.NANOSECONDS.toMillis((long)droppedMessages.metrics.crossNodeDroppedLatency.getSnapshot().getMean())));
    }
  }
  return ret;
}
