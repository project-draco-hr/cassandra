{
  logger_.info("Shutting down ...");
synchronized (MessagingService.class) {
    FailureDetector.instance.unregisterFailureDetectionEventListener(MessagingService.instance());
    for (    SelectionKey skey : listenSockets_.values()) {
      skey.cancel();
      try {
        skey.channel().close();
      }
 catch (      IOException e) {
      }
    }
    listenSockets_.clear();
    for (    UdpConnection con : udpConnections_.values()) {
      con.close();
    }
    udpConnections_.clear();
    messageReadExecutor_.shutdownNow();
    messageDeserializerExecutor_.shutdownNow();
    streamExecutor_.shutdownNow();
    StageManager.shutdown();
    taskCompletionMap_.shutdown();
    callbackMap_.shutdown();
    SelectorManager.getSelectorManager().interrupt();
    connectionManagers_.clear();
    verbHandlers_.clear();
    bShutdown_=true;
  }
  logger_.info("Shutdown invocation complete.");
}
