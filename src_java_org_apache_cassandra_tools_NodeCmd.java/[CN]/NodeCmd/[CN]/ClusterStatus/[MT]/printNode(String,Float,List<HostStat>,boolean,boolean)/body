{
  String status, state, load, strOwns, hostID, rack, fmt;
  fmt=getFormat(hasEffectiveOwns,isTokenPerNode);
  if (liveNodes.contains(endpoint))   status="U";
 else   if (unreachableNodes.contains(endpoint))   status="D";
 else   status="?";
  if (joiningNodes.contains(endpoint))   state="J";
 else   if (leavingNodes.contains(endpoint))   state="L";
 else   if (movingNodes.contains(endpoint))   state="M";
 else   state="N";
  load=loadMap.containsKey(endpoint) ? loadMap.get(endpoint) : "?";
  strOwns=owns != null ? new DecimalFormat("##0.0%").format(owns) : "?";
  hostID=hostIDMap.get(endpoint);
  rack=epSnitchInfo.getRack(endpoint);
  String endpointDns=tokens.get(0).ipOrDns();
  if (isTokenPerNode) {
    outs.printf(fmt,status,state,endpointDns,load,strOwns,hostID,tokens.get(0).token,rack);
  }
 else {
    outs.printf(fmt,status,state,endpointDns,load,tokens.size(),strOwns,hostID,rack);
  }
}
