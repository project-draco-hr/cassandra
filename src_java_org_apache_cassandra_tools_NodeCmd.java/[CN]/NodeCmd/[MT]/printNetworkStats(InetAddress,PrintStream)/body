{
  outs.printf("Mode: %s%n",probe.getOperationMode());
  Set<StreamState> statuses=probe.getStreamStatus();
  if (statuses.isEmpty())   outs.println("Not sending any streams.");
  for (  StreamState status : statuses) {
    outs.printf("%s %s%n",status.description,status.planId.toString());
    for (    SessionInfo info : status.sessions) {
      outs.printf("    %s%n",info.peer.toString());
      if (!info.receivingSummaries.isEmpty()) {
        outs.printf("        Receiving %d files, %d bytes total%n",info.getTotalFilesToReceive(),info.getTotalSizeToReceive());
        for (        ProgressInfo progress : info.getReceivingFiles()) {
          outs.printf("            %s%n",progress.toString());
        }
      }
      if (!info.sendingSummaries.isEmpty()) {
        outs.printf("        Sending %d files, %d bytes total%n",info.getTotalFilesToSend(),info.getTotalSizeToSend());
        for (        ProgressInfo progress : info.getSendingFiles()) {
          outs.printf("            %s%n",progress.toString());
        }
      }
    }
  }
  outs.printf("Read Repair Statistics:%nAttempted: %d%nMismatch (Blocking): %d%nMismatch (Background): %d%n",probe.getReadRepairAttempted(),probe.getReadRepairRepairedBlocking(),probe.getReadRepairRepairedBackground());
  MessagingServiceMBean ms=probe.msProxy;
  outs.printf("%-25s","Pool Name");
  outs.printf("%10s","Active");
  outs.printf("%10s","Pending");
  outs.printf("%15s%n","Completed");
  int pending;
  long completed;
  pending=0;
  for (  int n : ms.getCommandPendingTasks().values())   pending+=n;
  completed=0;
  for (  long n : ms.getCommandCompletedTasks().values())   completed+=n;
  outs.printf("%-25s%10s%10s%15s%n","Commands","n/a",pending,completed);
  pending=0;
  for (  int n : ms.getResponsePendingTasks().values())   pending+=n;
  completed=0;
  for (  long n : ms.getResponseCompletedTasks().values())   completed+=n;
  outs.printf("%-25s%10s%10s%15s%n","Responses","n/a",pending,completed);
}
