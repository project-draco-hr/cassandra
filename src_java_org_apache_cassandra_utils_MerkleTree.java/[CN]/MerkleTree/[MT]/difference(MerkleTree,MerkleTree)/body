{
  if (!ltree.fullRange.equals(rtree.fullRange))   throw new IllegalArgumentException("Difference only make sense on tree covering the same range (but " + ltree.fullRange + " != "+ rtree.fullRange+ ")");
  List<TreeRange> diff=new ArrayList<>();
  TreeDifference active=new TreeDifference(ltree.fullRange.left,ltree.fullRange.right,(byte)0);
  Hashable lnode=ltree.find(active);
  Hashable rnode=rtree.find(active);
  byte[] lhash=lnode.hash();
  byte[] rhash=rnode.hash();
  active.setSize(lnode.sizeOfRange(),rnode.sizeOfRange());
  if (lhash != null && rhash != null && !Arrays.equals(lhash,rhash)) {
    if (FULLY_INCONSISTENT == differenceHelper(ltree,rtree,diff,active))     diff.add(active);
  }
 else   if (lhash == null || rhash == null)   diff.add(active);
  return diff;
}
