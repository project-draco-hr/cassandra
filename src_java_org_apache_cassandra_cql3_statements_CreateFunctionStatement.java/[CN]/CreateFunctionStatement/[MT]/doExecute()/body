{
  boolean exists=UDFRegistry.hasFunction(qualifiedName);
  if (exists && ifNotExists)   throw new InvalidRequestException(String.format("Function '%s' already exists.",qualifiedName));
  if (exists && !orReplace)   throw new InvalidRequestException(String.format("Function '%s' already exists.",qualifiedName));
  if (namespace.isEmpty() && Functions.contains(functionName))   throw new InvalidRequestException(String.format("Function name '%s' is reserved by CQL.",qualifiedName));
  List<Argument> args=arguments;
  List<String> argumentNames=new ArrayList<>(args.size());
  List<String> argumentTypes=new ArrayList<>(args.size());
  for (  Argument arg : args) {
    argumentNames.add(arg.getName().toString());
    argumentTypes.add(arg.getType().toString());
  }
  this.ufMeta=new UFMetaData(namespace,functionName,deterministic,argumentNames,argumentTypes,returnType.toString(),language,body);
  UDFRegistry.tryCreateFunction(ufMeta);
}
