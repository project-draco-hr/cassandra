{
  if (columnFamily == null)   return columnFamily;
  String[] values=RowMutation.getColumnAndColumnFamily(cf);
  String cfName=columnFamily.name();
  ColumnFamily filteredCf=new ColumnFamily(cfName);
  if (values.length == 1 && !DatabaseDescriptor.getColumnType(cfName).equals("Super")) {
    Collection<IColumn> columns=columnFamily.getAllColumns();
    int i=0;
    for (    IColumn column : columns) {
      if (column.timestamp() >= timeLimit_) {
        filteredCf.addColumn(column);
        ++i;
      }
 else {
        break;
      }
    }
    if (i < columns.size()) {
      isDone_=true;
    }
  }
 else   if (values.length == 2 && DatabaseDescriptor.getColumnType(cfName).equals("Super")) {
    Collection<IColumn> columns=columnFamily.getAllColumns();
    for (    IColumn column : columns) {
      SuperColumn superColumn=(SuperColumn)column;
      SuperColumn filteredSuperColumn=new SuperColumn(superColumn.name());
      filteredCf.addColumn(filteredSuperColumn);
      Collection<IColumn> subColumns=superColumn.getSubColumns();
      int i=0;
      for (      IColumn subColumn : subColumns) {
        if (subColumn.timestamp() >= timeLimit_) {
          filteredSuperColumn.addColumn(subColumn.name(),subColumn);
          ++i;
        }
 else {
          break;
        }
      }
      if (i < filteredSuperColumn.getColumnCount()) {
        isDone_=true;
      }
    }
  }
 else {
    throw new UnsupportedOperationException();
  }
  return filteredCf;
}
