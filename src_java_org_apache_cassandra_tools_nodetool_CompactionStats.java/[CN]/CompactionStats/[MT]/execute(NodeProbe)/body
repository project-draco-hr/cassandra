{
  CompactionManagerMBean cm=probe.getCompactionManagerProxy();
  Map<String,Map<String,Integer>> pendingTaskNumberByTable=(Map<String,Map<String,Integer>>)probe.getCompactionMetric("PendingTasksByTableName");
  int numTotalPendingTask=0;
  for (  Entry<String,Map<String,Integer>> ksEntry : pendingTaskNumberByTable.entrySet()) {
    for (    Entry<String,Integer> tableEntry : ksEntry.getValue().entrySet())     numTotalPendingTask+=tableEntry.getValue();
  }
  System.out.println("pending tasks: " + numTotalPendingTask);
  for (  Entry<String,Map<String,Integer>> ksEntry : pendingTaskNumberByTable.entrySet()) {
    String ksName=ksEntry.getKey();
    for (    Entry<String,Integer> tableEntry : ksEntry.getValue().entrySet()) {
      String tableName=tableEntry.getKey();
      int pendingTaskCount=tableEntry.getValue();
      System.out.println("- " + ksName + '.'+ tableName+ ": "+ pendingTaskCount);
    }
  }
  System.out.println();
  reportCompactionTable(cm.getCompactions(),probe.getCompactionThroughput(),humanReadable);
}
