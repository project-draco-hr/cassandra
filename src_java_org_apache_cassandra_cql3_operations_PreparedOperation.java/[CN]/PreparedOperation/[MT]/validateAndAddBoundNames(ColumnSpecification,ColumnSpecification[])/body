{
  if (column.type instanceof CollectionType) {
switch (kind) {
case PREPARED_PLUS:
      if (column.type instanceof MapType)       throw new InvalidRequestException("Unsupported syntax, cannot put to a prepared map");
    if (column.type instanceof SetType)     throw new InvalidRequestException("Unsupported syntax, cannot add to a prepared set");
  break;
case MINUS_PREPARED:
if (column.type instanceof MapType) throw new InvalidRequestException("Unsuppoted syntax, discard syntax for map not supported");
break;
}
switch (((CollectionType)column.type).kind) {
}
}
 else if (column.type instanceof CounterColumnType) {
if (kind == Kind.PREPARED_PLUS) throw new InvalidRequestException("Unsupported syntax for increment, must be of the form X = X + <value>");
}
 else {
if (kind != Kind.SET) throw new InvalidRequestException(String.format("Invalid operation for %s of type %s",column,column.type));
}
if (preparedValue.isBindMarker()) boundNames[preparedValue.bindIndex]=column;
return this;
}
