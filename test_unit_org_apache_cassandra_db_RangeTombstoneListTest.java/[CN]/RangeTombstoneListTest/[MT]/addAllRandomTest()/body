{
  int TEST_COUNT=1000;
  int MAX_LIST_SIZE=50;
  int MAX_IT_SIZE=20;
  int MAX_IT_DISTANCE=10;
  int MAX_MARKEDAT=10;
  for (int i=0; i < TEST_COUNT; i++) {
    RangeTombstoneList l1=makeRandom(rand.nextInt(MAX_LIST_SIZE) + 1,rand.nextInt(MAX_IT_SIZE) + 1,rand.nextInt(MAX_IT_DISTANCE) + 1,rand.nextInt(MAX_MARKEDAT) + 1);
    RangeTombstoneList l2=makeRandom(rand.nextInt(MAX_LIST_SIZE) + 1,rand.nextInt(MAX_IT_SIZE) + 1,rand.nextInt(MAX_IT_DISTANCE) + 1,rand.nextInt(MAX_MARKEDAT) + 1);
    RangeTombstoneList l1Initial=l1.copy();
    try {
      l1.addAll(l2);
      assertValid(l1);
    }
 catch (    Throwable e) {
      System.out.println("Error merging:");
      System.out.println(" l1: " + toString(l1Initial));
      System.out.println(" l2: " + toString(l2));
      throw e;
    }
  }
}
