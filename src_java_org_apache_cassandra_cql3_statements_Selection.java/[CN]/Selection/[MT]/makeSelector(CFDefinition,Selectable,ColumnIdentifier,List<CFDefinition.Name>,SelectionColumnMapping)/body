{
  if (selectable instanceof ColumnIdentifier) {
    CFDefinition.Name name=cfDef.get((ColumnIdentifier)selectable);
    if (name == null)     throw new InvalidRequestException(String.format("Undefined name %s in selection clause",selectable));
    if (columnMapping != null)     columnMapping.addMapping(alias == null ? name : makeAliasSpec(cfDef,name.type,alias),name);
    return new SimpleSelector(name.toString(),addAndGetIndex(name,names),name.type);
  }
 else   if (selectable instanceof Selectable.WritetimeOrTTL) {
    Selectable.WritetimeOrTTL tot=(Selectable.WritetimeOrTTL)selectable;
    CFDefinition.Name name=cfDef.get(tot.id);
    if (name == null)     throw new InvalidRequestException(String.format("Undefined name %s in selection clause",tot.id));
    if (name.isPrimaryKeyColumn())     throw new InvalidRequestException(String.format("Cannot use selection function %s on PRIMARY KEY part %s",tot.isWritetime ? "writeTime" : "ttl",name));
    if (name.type.isCollection())     throw new InvalidRequestException(String.format("Cannot use selection function %s on collections",tot.isWritetime ? "writeTime" : "ttl"));
    if (columnMapping != null)     columnMapping.addMapping(makeWritetimeOrTTLSpec(cfDef,tot,alias),name);
    return new WritetimeOrTTLSelector(name.toString(),addAndGetIndex(name,names),tot.isWritetime);
  }
 else {
    Selectable.WithFunction withFun=(Selectable.WithFunction)selectable;
    List<Selector> args=new ArrayList<Selector>(withFun.args.size());
    SelectionColumnMapping tmpMapping=SelectionColumnMapping.newMapping();
    for (    Selectable rawArg : withFun.args)     args.add(makeSelector(cfDef,rawArg,null,names,tmpMapping));
    AbstractType<?> returnType=Functions.getReturnType(withFun.functionName,cfDef.cfm.ksName,cfDef.cfm.cfName);
    if (returnType == null)     throw new InvalidRequestException(String.format("Unknown function '%s'",withFun.functionName));
    ColumnSpecification spec=makeFunctionSpec(cfDef,withFun,returnType,alias);
    Function fun=Functions.get(withFun.functionName,args,spec);
    if (columnMapping != null)     columnMapping.addMapping(spec,tmpMapping.getMappings().values());
    return new FunctionSelector(fun,args);
  }
}
