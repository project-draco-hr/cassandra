{
  List<ByteBuffer> keys=UpdateStatement.buildKeyNames(cfDef,processedKeys,variables);
  ColumnNameBuilder builder=cfDef.getColumnNameBuilder();
  CFDefinition.Name firstEmpty=UpdateStatement.buildColumnNames(cfDef,processedKeys,builder,variables,false);
  boolean fullKey=builder.componentCount() == cfDef.columns.size();
  boolean isRange=cfDef.isCompact ? !fullKey : (!fullKey || toRemove.isEmpty());
  if (!toRemove.isEmpty() && isRange)   throw new InvalidRequestException(String.format("Missing mandatory PRIMARY KEY part %s since %s specified",firstEmpty,toRemove.iterator().next().columnName));
  Set<ByteBuffer> toRead=null;
  for (  Operation op : toRemove) {
    if (op.requiresRead()) {
      if (toRead == null)       toRead=new TreeSet<ByteBuffer>(UTF8Type.instance);
      toRead.add(op.columnName.key);
    }
  }
  Map<ByteBuffer,ColumnGroupMap> rows=toRead != null ? readRows(keys,builder,toRead,(CompositeType)cfDef.cfm.comparator,local,cl) : null;
  Collection<RowMutation> rowMutations=new ArrayList<RowMutation>(keys.size());
  UpdateParameters params=new UpdateParameters(variables,getTimestamp(now),-1,rows);
  for (  ByteBuffer key : keys)   rowMutations.add(mutationForKey(cfDef,key,builder,isRange,params));
  return rowMutations;
}
