{
  Operations operations=new Operations(type);
  for (  Operation.RawDeletion deletion : deletions) {
    ColumnDefinition def=getColumnDefinition(cfm,deletion.affectedColumn());
    checkFalse(def.isPrimaryKeyColumn(),"Invalid identifier %s for deletion (should not be a PRIMARY KEY part)",def.name);
    Operation op=deletion.prepare(cfm.ksName,def);
    op.collectMarkerSpecification(boundNames);
    operations.add(op);
  }
  StatementRestrictions restrictions=newRestrictions(cfm,boundNames,operations,whereClause,conditions);
  DeleteStatement stmt=new DeleteStatement(boundNames.size(),cfm,operations,restrictions,conditions,attrs);
  if (stmt.hasConditions() && !restrictions.hasAllPKColumnsRestrictedByEqualities()) {
    checkFalse(operations.appliesToRegularColumns(),"DELETE statements must restrict all PRIMARY KEY columns with equality relations in order to delete non static columns");
    checkFalse(conditions.appliesToRegularColumns(),"DELETE statements must restrict all PRIMARY KEY columns with equality relations" + " in order to use IF condition on non static columns");
  }
  return stmt;
}
