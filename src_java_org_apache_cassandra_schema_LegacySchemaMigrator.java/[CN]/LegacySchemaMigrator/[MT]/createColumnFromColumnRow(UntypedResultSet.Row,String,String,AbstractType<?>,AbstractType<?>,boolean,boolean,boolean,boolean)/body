{
  ColumnDefinition.Kind kind=deserializeKind(row.getString("type"));
  if (needsUpgrade && isStaticCompactTable && kind == ColumnDefinition.Kind.REGULAR)   kind=ColumnDefinition.Kind.STATIC;
  int componentIndex=ColumnDefinition.NO_POSITION;
  if (kind.isPrimaryKeyKind() && row.has("component_index"))   componentIndex=row.getInt("component_index");
  AbstractType<?> comparator=isCQLTable ? UTF8Type.instance : CompactTables.columnDefinitionComparator(kind,isSuper,rawComparator,rawSubComparator);
  ColumnIdentifier name=ColumnIdentifier.getInterned(comparator.fromString(row.getString("column_name")),comparator);
  AbstractType<?> validator=parseType(row.getString("validator"));
  return new ColumnDefinition(keyspace,table,name,validator,componentIndex,kind);
}
