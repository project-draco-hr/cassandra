{
  TableParams.Builder params=TableParams.builder();
  params.readRepairChance(row.getDouble("read_repair_chance")).dcLocalReadRepairChance(row.getDouble("local_read_repair_chance")).gcGraceSeconds(row.getInt("gc_grace_seconds"));
  if (row.has("comment"))   params.comment(row.getString("comment"));
  if (row.has("memtable_flush_period_in_ms"))   params.memtableFlushPeriodInMs(row.getInt("memtable_flush_period_in_ms"));
  params.caching(CachingParams.fromMap(fromJsonMap(row.getString("caching"))));
  if (row.has("default_time_to_live"))   params.defaultTimeToLive(row.getInt("default_time_to_live"));
  if (row.has("speculative_retry"))   params.speculativeRetry(SpeculativeRetryParam.fromString(row.getString("speculative_retry")));
  params.compression(CompressionParams.fromMap(fromJsonMap(row.getString("compression_parameters"))));
  params.compaction(compactionFromRow(row));
  if (row.has("min_index_interval"))   params.minIndexInterval(row.getInt("min_index_interval"));
  if (row.has("max_index_interval"))   params.maxIndexInterval(row.getInt("max_index_interval"));
  if (row.has("bloom_filter_fp_chance"))   params.bloomFilterFpChance(row.getDouble("bloom_filter_fp_chance"));
  return params.build();
}
