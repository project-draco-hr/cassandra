{
  if (null == head)   return;
  if (null == node || node.v_pt == null)   return;
  if (searchInterval.contains(node.v_pt)) {
    for (    Interval<T> interval : node.intersects_left) {
      results.add(interval.Data);
    }
    searchInternal(node.left,searchInterval,results);
    searchInternal(node.right,searchInterval,results);
    return;
  }
  if (node.v_pt.compareTo(searchInterval.min) < 0) {
    for (    Interval<T> interval : node.intersects_right) {
      if (interval.max.compareTo(searchInterval.min) >= 0) {
        results.add(interval.Data);
      }
 else       break;
    }
    searchInternal(node.right,searchInterval,results);
    return;
  }
  if (node.v_pt.compareTo(searchInterval.max) > 0) {
    for (    Interval<T> interval : node.intersects_left) {
      if (interval.min.compareTo(searchInterval.max) <= 0) {
        results.add(interval.Data);
      }
 else       break;
    }
    searchInternal(node.left,searchInterval,results);
    return;
  }
}
