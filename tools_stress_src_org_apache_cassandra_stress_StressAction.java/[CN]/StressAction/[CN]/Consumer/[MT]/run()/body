{
  try {
    SimpleClient sclient=null;
    ThriftClient tclient=null;
    JavaDriverClient jclient=null;
    final ConnectionAPI clientType=settings.mode.api;
switch (clientType) {
case JAVA_DRIVER_NATIVE:
      jclient=settings.getJavaDriverClient();
    break;
case SIMPLE_NATIVE:
  sclient=settings.getSimpleNativeClient();
break;
case THRIFT:
case THRIFT_SMART:
tclient=settings.getThriftClient();
break;
default :
throw new IllegalStateException();
}
start.countDown();
releaseConsumers.await();
while (true) {
Operation op=opStream.nextOp();
if (op == null) break;
try {
switch (clientType) {
case JAVA_DRIVER_NATIVE:
op.run(jclient);
break;
case SIMPLE_NATIVE:
op.run(sclient);
break;
case THRIFT:
case THRIFT_SMART:
default :
op.run(tclient);
}
}
 catch (Exception e) {
if (output == null) System.err.println(e.getMessage());
 else e.printStackTrace(output);
success=false;
opStream.abort();
metrics.cancel();
return;
}
}
}
 catch (Exception e) {
System.err.println(e.getMessage());
success=false;
}
 finally {
done.countDown();
}
}
