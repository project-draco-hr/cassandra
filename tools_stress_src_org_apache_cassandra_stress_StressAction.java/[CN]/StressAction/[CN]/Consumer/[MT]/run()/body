{
  timer.init();
  try {
    SimpleClient sclient=null;
    ThriftClient tclient=null;
    JavaDriverClient jclient=null;
switch (settings.mode.api) {
case JAVA_DRIVER_NATIVE:
      jclient=settings.getJavaDriverClient();
    break;
case SIMPLE_NATIVE:
  sclient=settings.getSimpleNativeClient();
break;
case THRIFT:
case THRIFT_SMART:
tclient=settings.getThriftClient();
break;
default :
throw new IllegalStateException();
}
while (true) {
Operation op=operations.next();
if (!op.ready(workManager,rateLimiter)) break;
try {
switch (settings.mode.api) {
case JAVA_DRIVER_NATIVE:
op.run(jclient);
break;
case SIMPLE_NATIVE:
op.run(sclient);
break;
case THRIFT:
case THRIFT_SMART:
default :
op.run(tclient);
}
}
 catch (Exception e) {
if (output == null) {
System.err.println(e.getMessage());
success=false;
System.exit(-1);
}
e.printStackTrace(output);
success=false;
workManager.stop();
metrics.cancel();
return;
}
}
}
  finally {
done.countDown();
timer.close();
}
}
