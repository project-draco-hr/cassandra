{
  Object[] a=values;
  int addOffset=count;
  int i=0, j=addOffset;
  int curEnd=addOffset, addEnd=addOffset + addCount;
  while (i < curEnd && j < addEnd) {
    V ai=(V)a[i], aj=(V)a[j];
    int c=ai == aj ? 0 : comparator.compare(ai,aj);
    if (c > 0)     break;
 else     if (c == 0) {
      if (quickResolver != null)       a[i]=quickResolver.resolve(ai,aj);
      j++;
    }
    i++;
  }
  if (j == addEnd)   return this;
  int newCount=i;
  System.arraycopy(a,i,a,addEnd,count - i);
  curEnd=addEnd + (count - i);
  i=addEnd;
  while (i < curEnd && j < addEnd) {
    V ai=(V)a[i];
    V aj=(V)a[j];
    int c=comparator.compare(ai,aj);
    if (c == 0) {
      Object newValue=quickResolver == null ? ai : quickResolver.resolve(ai,aj);
      a[newCount++]=newValue;
      i++;
      j++;
    }
 else {
      a[newCount++]=c < 0 ? a[i++] : a[j++];
    }
  }
  if (i < curEnd) {
    System.arraycopy(a,i,a,newCount,curEnd - i);
    newCount+=curEnd - i;
  }
 else   if (j < addEnd) {
    if (j != newCount)     System.arraycopy(a,j,a,newCount,addEnd - j);
    newCount+=addEnd - j;
  }
  count=newCount;
  return this;
}
