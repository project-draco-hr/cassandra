{
  Object[] result=btree;
  boolean isLeaf=isLeaf(btree);
  int childOffset=isLeaf ? Integer.MAX_VALUE : getChildStart(btree);
  int limit=isLeaf ? getLeafKeyEnd(btree) : btree.length - 1;
  for (int i=0; i < limit; i++) {
    int idx=isLeaf ? i : (i / 2) + (i % 2 == 0 ? childOffset : 0);
    Object current=btree[idx];
    Object updated=idx < childOffset ? function.apply((V)current) : transformAndFilter((Object[])current,function);
    if (updated != current) {
      if (result == btree)       result=btree.clone();
      result[idx]=updated;
    }
    if (function.failed)     return result;
  }
  return result;
}
