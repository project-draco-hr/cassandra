{
  boolean isLeaf=isLeaf(btree);
  int childOffset=isLeaf ? Integer.MAX_VALUE : getChildStart(btree);
  int limit=isLeaf ? getLeafKeyEnd(btree) : btree.length - 1;
  for (int i=0; i < limit; i++) {
    int idx=isLeaf ? i : (i / 2) + (i % 2 == 0 ? childOffset : 0);
    Object current=btree[idx];
    if (idx < childOffset) {
      V castedCurrent=(V)current;
      if (stopCondition != null && stopCondition.apply(castedCurrent))       return true;
      function.accept(castedCurrent);
    }
 else {
      if (applyForwards((Object[])current,function,stopCondition))       return true;
    }
  }
  return false;
}
