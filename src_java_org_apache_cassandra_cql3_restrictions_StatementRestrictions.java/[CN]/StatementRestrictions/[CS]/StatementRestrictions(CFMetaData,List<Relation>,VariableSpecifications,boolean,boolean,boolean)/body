{
  this(cfm);
  for (  Relation relation : whereClause)   addRestriction(relation.toRestriction(cfm,boundNames));
  ColumnFamilyStore cfs=Keyspace.open(cfm.ksName).getColumnFamilyStore(cfm.cfName);
  SecondaryIndexManager secondaryIndexManager=cfs.indexManager;
  boolean hasQueriableClusteringColumnIndex=clusteringColumnsRestrictions.hasSupportingIndex(secondaryIndexManager);
  boolean hasQueriableIndex=hasQueriableClusteringColumnIndex || partitionKeyRestrictions.hasSupportingIndex(secondaryIndexManager) || nonPrimaryKeyRestrictions.hasSupportingIndex(secondaryIndexManager);
  processPartitionKeyRestrictions(hasQueriableIndex);
  if (usesSecondaryIndexing)   indexRestrictions.add(partitionKeyRestrictions);
  checkFalse(selectsOnlyStaticColumns && hasClusteringColumnsRestriction(),"Cannot restrict clustering columns when selecting only static columns");
  processClusteringColumnsRestrictions(hasQueriableIndex,selectACollection);
  if (isKeyRange && hasQueriableClusteringColumnIndex)   usesSecondaryIndexing=true;
  usesSecondaryIndexing=usesSecondaryIndexing || clusteringColumnsRestrictions.isContains();
  if (usesSecondaryIndexing)   indexRestrictions.add(clusteringColumnsRestrictions);
  if (!nonPrimaryKeyRestrictions.isEmpty()) {
    if (hasQueriableIndex)     usesSecondaryIndexing=true;
 else     if (!useFiltering)     throw new InvalidRequestException("No supported secondary index found for the non primary key columns restrictions");
    indexRestrictions.add(nonPrimaryKeyRestrictions);
  }
  if (usesSecondaryIndexing)   validateSecondaryIndexSelections(selectsOnlyStaticColumns);
}
