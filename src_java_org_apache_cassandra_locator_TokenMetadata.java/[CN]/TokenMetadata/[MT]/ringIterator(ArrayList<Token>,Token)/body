{
  final int startIndex=firstTokenIndex(ring,start);
  return new AbstractIterator<Token>(){
    int j=startIndex;
    protected Token computeNext(){
      if (j < 0)       return endOfData();
      try {
        return ring.get(j);
      }
  finally {
        j=(j + 1) % ring.size();
        if (j == startIndex)         j=-1;
      }
    }
  }
;
}
