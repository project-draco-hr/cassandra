{
  createTable("CREATE TABLE %s (" + " k1 int," + " c1 int,"+ " c2 int,"+ " v1 text,"+ " v2 text,"+ " v3 text,"+ " v4 text,"+ "PRIMARY KEY (k1, c1, c2))");
  for (int c1=0; c1 < 100; c1++) {
    for (int c2=0; c2 < 100; c2++) {
      execute("INSERT INTO %s (k1, c1, c2, v1, v2, v3, v4) VALUES (?, ?, ?, ?, ?, ?, ?)",1,c1,c2,Integer.toString(c1),Integer.toString(c2),someText(),someText());
    }
    if (c1 % 30 == 0)     flush();
  }
  flush();
  try (Session session=sessionNet()){
    SimpleStatement stmt=new SimpleStatement("SELECT c1, c2, v1, v2 FROM " + KEYSPACE + '.'+ currentTable()+ " WHERE k1 = 1");
    stmt.setFetchSize(3);
    ResultSet rs=session.execute(stmt);
    Iterator<Row> iter=rs.iterator();
    for (int c1=0; c1 < 100; c1++) {
      for (int c2=0; c2 < 100; c2++) {
        assertTrue(iter.hasNext());
        Row row=iter.next();
        String msg="On " + c1 + ','+ c2;
        assertEquals(msg,c1,row.getInt(0));
        assertEquals(msg,c2,row.getInt(1));
        assertEquals(msg,Integer.toString(c1),row.getString(2));
        assertEquals(msg,Integer.toString(c2),row.getString(3));
      }
    }
    assertFalse(iter.hasNext());
    for (int c1=0; c1 < 100; c1++) {
      stmt=new SimpleStatement("SELECT c1, c2, v1, v2 FROM " + KEYSPACE + '.'+ currentTable()+ " WHERE k1 = 1 AND c1 = ?",c1);
      stmt.setFetchSize(3);
      rs=session.execute(stmt);
      iter=rs.iterator();
      for (int c2=0; c2 < 100; c2++) {
        assertTrue(iter.hasNext());
        Row row=iter.next();
        String msg="Within " + c1 + " on "+ c2;
        assertEquals(msg,c1,row.getInt(0));
        assertEquals(msg,c2,row.getInt(1));
        assertEquals(msg,Integer.toString(c1),row.getString(2));
        assertEquals(msg,Integer.toString(c2),row.getString(3));
      }
      assertFalse(iter.hasNext());
    }
  }
 }
