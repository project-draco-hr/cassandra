{
  createTable("CREATE TABLE %s (pk int, ck int, t text, PRIMARY KEY (pk, ck) )");
  execute("INSERT INTO %s (pk, ck, t) VALUES (1, 1, 'one')");
  execute("INSERT INTO %s (pk, ck, t) VALUES (1, 2, 'two')");
  execute("INSERT INTO %s (pk, ck, t) VALUES (1, 3, 'three')");
  assertInvalidMessage("Cannot infer type for term","SELECT ck, t, 'a const' FROM %s");
  assertConstantResult(execute("SELECT ck, t, (text)'a const' FROM %s"),"a const");
  assertInvalidMessage("Cannot infer type for term","SELECT ck, t, 42 FROM %s");
  assertConstantResult(execute("SELECT ck, t, (int)42 FROM %s"),42);
  assertInvalidMessage("Cannot infer type for term","SELECT ck, t, (1, 'foo') FROM %s");
  assertConstantResult(execute("SELECT ck, t, (tuple<int, text>)(1, 'foo') FROM %s"),tuple(1,"foo"));
  assertInvalidMessage("Cannot infer type for term","SELECT ck, t, [1, 2, 3] FROM %s");
  assertConstantResult(execute("SELECT ck, t, (list<int>)[1, 2, 3] FROM %s"),list(1,2,3));
  assertInvalidMessage("Cannot infer type for term","SELECT ck, t, {1, 2, 3} FROM %s");
  assertConstantResult(execute("SELECT ck, t, (set<int>){1, 2, 3} FROM %s"),set(1,2,3));
  assertInvalidMessage("Cannot infer type for term","SELECT ck, t, {1: 'foo', 2: 'bar', 3: 'baz'} FROM %s");
  assertConstantResult(execute("SELECT ck, t, (map<int, text>){1: 'foo', 2: 'bar', 3: 'baz'} FROM %s"),map(1,"foo",2,"bar",3,"baz"));
  assertColumnNames(execute("SELECT ck, t, (int)42, (int)43 FROM %s"),"ck","t","(int)42","(int)43");
  assertRows(execute("SELECT ck, t, (int) 42, (int) 43 FROM %s"),row(1,"one",42,43),row(2,"two",42,43),row(3,"three",42,43));
}
