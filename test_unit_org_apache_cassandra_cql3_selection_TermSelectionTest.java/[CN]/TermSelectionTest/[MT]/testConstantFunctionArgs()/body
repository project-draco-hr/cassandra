{
  String fInt=createFunction(KEYSPACE,"int,int","CREATE FUNCTION %s (val1 int, val2 int) " + "CALLED ON NULL INPUT " + "RETURNS int "+ "LANGUAGE java\n"+ "AS 'return Math.max(val1, val2);';");
  String fFloat=createFunction(KEYSPACE,"float,float","CREATE FUNCTION %s (val1 float, val2 float) " + "CALLED ON NULL INPUT " + "RETURNS float "+ "LANGUAGE java\n"+ "AS 'return Math.max(val1, val2);';");
  String fText=createFunction(KEYSPACE,"text,text","CREATE FUNCTION %s (val1 text, val2 text) " + "CALLED ON NULL INPUT " + "RETURNS text "+ "LANGUAGE java\n"+ "AS 'return val2;';");
  String fAscii=createFunction(KEYSPACE,"ascii,ascii","CREATE FUNCTION %s (val1 ascii, val2 ascii) " + "CALLED ON NULL INPUT " + "RETURNS ascii "+ "LANGUAGE java\n"+ "AS 'return val2;';");
  String fTimeuuid=createFunction(KEYSPACE,"timeuuid,timeuuid","CREATE FUNCTION %s (val1 timeuuid, val2 timeuuid) " + "CALLED ON NULL INPUT " + "RETURNS timeuuid "+ "LANGUAGE java\n"+ "AS 'return val2;';");
  createTable("CREATE TABLE %s (pk int PRIMARY KEY, valInt int, valFloat float, valText text, valAscii ascii, valTimeuuid timeuuid)");
  execute("INSERT INTO %s (pk, valInt, valFloat, valText, valAscii, valTimeuuid) " + "VALUES (1, 10, 10.0, '100', '100', 2deb23e0-96b5-11e5-b26d-a939dd1405a3)");
  assertRows(execute("SELECT pk, " + fInt + "(valInt, 100) FROM %s"),row(1,100));
  assertRows(execute("SELECT pk, " + fInt + "(valInt, (int)100) FROM %s"),row(1,100));
  assertInvalidMessage("Type error: (bigint)100 cannot be passed as argument 1 of function","SELECT pk, " + fInt + "(valInt, (bigint)100) FROM %s");
  assertRows(execute("SELECT pk, " + fFloat + "(valFloat, (float)100.00) FROM %s"),row(1,100f));
  assertRows(execute("SELECT pk, " + fText + "(valText, 'foo') FROM %s"),row(1,"foo"));
  assertRows(execute("SELECT pk, " + fAscii + "(valAscii, (ascii)'foo') FROM %s"),row(1,"foo"));
  assertRows(execute("SELECT pk, " + fTimeuuid + "(valTimeuuid, (timeuuid)34617f80-96b5-11e5-b26d-a939dd1405a3) FROM %s"),row(1,UUID.fromString("34617f80-96b5-11e5-b26d-a939dd1405a3")));
  String fAmbiguousFunc1=createFunction(KEYSPACE,"int,bigint","CREATE FUNCTION %s (val1 int, val2 bigint) " + "CALLED ON NULL INPUT " + "RETURNS bigint "+ "LANGUAGE java\n"+ "AS 'return Math.max((long)val1, val2);';");
  assertRows(execute("SELECT pk, " + fAmbiguousFunc1 + "(valInt, 100) FROM %s"),row(1,100L));
  createFunctionOverload(fAmbiguousFunc1,"int,int","CREATE FUNCTION %s (val1 int, val2 int) " + "CALLED ON NULL INPUT " + "RETURNS bigint "+ "LANGUAGE java\n"+ "AS 'return (long)Math.max(val1, val2);';");
  assertInvalidMessage("Ambiguous call to function cql_test_keyspace.function_","SELECT pk, " + fAmbiguousFunc1 + "(valInt, 100) FROM %s");
}
