{
  logger_.info("ROW MUTATION STAGE: " + StageManager.getStageTaskCount(StorageService.mutationStage_));
  byte[] bytes=(byte[])message.getMessageBody()[0];
  RowMutationContext rowMutationCtx=tls_.get();
  if (rowMutationCtx == null) {
    rowMutationCtx=new RowMutationContext();
    tls_.set(rowMutationCtx);
  }
  rowMutationCtx.buffer_.reset(bytes,bytes.length);
  try {
    RowMutationMessage rmMsg=RowMutationMessage.serializer().deserialize(rowMutationCtx.buffer_);
    RowMutation rm=rmMsg.getRowMutation();
    byte[] hintedBytes=message.getHeader(RowMutationMessage.hint_);
    if (hintedBytes != null && hintedBytes.length > 0) {
      EndPoint hint=EndPoint.fromBytes(hintedBytes);
      try {
        RowMutation hintedMutation=new RowMutation(rm.table(),HintedHandOffManager.key_);
        hintedMutation.addHints(rm.key() + ":" + hint.getHost());
        hintedMutation.apply();
      }
 catch (      ColumnFamilyNotDefinedException ex) {
        logger_.debug(LogUtil.throwableToString(ex));
      }
    }
    long start=System.currentTimeMillis();
    rowMutationCtx.row_.key(rm.key());
    rm.apply(rowMutationCtx.row_);
    long end=System.currentTimeMillis();
    logger_.info("ROW MUTATION APPLY: " + (end - start) + " ms.");
  }
 catch (  ColumnFamilyNotDefinedException ex) {
    logger_.debug(LogUtil.throwableToString(ex));
  }
catch (  IOException e) {
    logger_.debug(LogUtil.throwableToString(e));
  }
}
