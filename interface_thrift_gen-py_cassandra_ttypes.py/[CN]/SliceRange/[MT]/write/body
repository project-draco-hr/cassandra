def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('SliceRange')
    if (self.start != None):
        oprot.writeFieldBegin('start', TType.STRING, 1)
        oprot.writeString(self.start)
        oprot.writeFieldEnd()
    if (self.finish != None):
        oprot.writeFieldBegin('finish', TType.STRING, 2)
        oprot.writeString(self.finish)
        oprot.writeFieldEnd()
    if (self.reversed != None):
        oprot.writeFieldBegin('reversed', TType.BOOL, 3)
        oprot.writeBool(self.reversed)
        oprot.writeFieldEnd()
    if (self.count != None):
        oprot.writeFieldBegin('count', TType.I32, 4)
        oprot.writeI32(self.count)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
