def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TokenRange')
    if (self.start_token != None):
        oprot.writeFieldBegin('start_token', TType.STRING, 1)
        oprot.writeString(self.start_token)
        oprot.writeFieldEnd()
    if (self.end_token != None):
        oprot.writeFieldBegin('end_token', TType.STRING, 2)
        oprot.writeString(self.end_token)
        oprot.writeFieldEnd()
    if (self.endpoints != None):
        oprot.writeFieldBegin('endpoints', TType.LIST, 3)
        oprot.writeListBegin(TType.STRING, len(self.endpoints))
        for iter27 in self.endpoints:
            oprot.writeString(iter27)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
