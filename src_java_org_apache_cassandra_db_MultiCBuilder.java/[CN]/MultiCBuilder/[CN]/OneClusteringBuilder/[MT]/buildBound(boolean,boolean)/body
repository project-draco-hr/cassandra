{
  built=true;
  if (hasMissingElements)   return BTreeSet.empty(comparator);
  if (size == 0)   return BTreeSet.of(comparator,isStart ? ClusteringBound.BOTTOM : ClusteringBound.TOP);
  ByteBuffer[] newValues=size == elements.length ? elements : Arrays.copyOf(elements,size);
  return BTreeSet.of(comparator,ClusteringBound.create(ClusteringBound.boundKind(isStart,isInclusive),newValues));
}
