{
  TSocket socket=new TSocket(server,port);
  if (transport_ != null)   transport_.close();
  if (css_.framed) {
    transport_=new TFramedTransport(socket);
  }
 else {
    transport_=socket;
  }
  TBinaryProtocol binaryProtocol=new TBinaryProtocol(transport_,false,false);
  Cassandra.Client cassandraClient=new Cassandra.Client(binaryProtocol);
  try {
    transport_.open();
  }
 catch (  Exception e) {
    css_.err.format("Exception connecting to %s/%d - %s\n",server,port,e.getMessage());
    if (css_.debug)     e.printStackTrace();
    return;
  }
  thriftClient_=cassandraClient;
  cliClient_=new CliClient(css_,thriftClient_);
  if (css_.keyspace != null) {
    try {
      thriftClient_.set_keyspace(css_.keyspace);
      cliClient_.setKeyspace(css_.keyspace);
      updateCompletor(cliClient_.getCFMetaData(css_.keyspace).keySet());
    }
 catch (    InvalidRequestException e) {
      css_.err.println("Keyspace " + css_.keyspace + " not found");
      return;
    }
catch (    TException e) {
      css_.err.println("Did you specify 'keyspace'?");
      return;
    }
catch (    NotFoundException e) {
      css_.err.println("Keyspace " + css_.keyspace + " not found");
      return;
    }
  }
  if ((css_.username != null) && (css_.password != null)) {
    Map<String,String> credentials=new HashMap<String,String>();
    credentials.put(SimpleAuthenticator.USERNAME_KEY,css_.username);
    credentials.put(SimpleAuthenticator.PASSWORD_KEY,css_.password);
    AuthenticationRequest authRequest=new AuthenticationRequest(credentials);
    try {
      thriftClient_.login(authRequest);
      cliClient_.setUsername(css_.username);
    }
 catch (    AuthenticationException e) {
      css_.err.println("Exception during authentication to the cassandra node, " + "Verify the keyspace exists, and that you are using the correct credentials.");
      return;
    }
catch (    AuthorizationException e) {
      css_.err.println("You are not authorized to use keyspace: " + css_.keyspace);
      return;
    }
catch (    TException e) {
      css_.err.println("Login failure. Did you specify 'keyspace', 'username' and 'password'?");
      return;
    }
  }
  String clusterName;
  try {
    clusterName=thriftClient_.describe_cluster_name();
  }
 catch (  Exception e) {
    css_.err.println("Exception retrieving information about the cassandra node, check you have connected to the thrift port.");
    if (css_.debug)     e.printStackTrace();
    return;
  }
  css_.out.printf("Connected to: \"%s\" on %s/%d%n",clusterName,server,port);
}
