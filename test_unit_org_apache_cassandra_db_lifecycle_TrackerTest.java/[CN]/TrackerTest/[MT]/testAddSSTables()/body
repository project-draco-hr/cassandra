{
  boolean backups=DatabaseDescriptor.isIncrementalBackupsEnabled();
  DatabaseDescriptor.setIncrementalBackupsEnabled(false);
  Tracker tracker=new Tracker(MockSchema.cfs,false);
  MockListener listener=new MockListener(false);
  tracker.subscribe(listener);
  List<SSTableReader> readers=ImmutableList.of(MockSchema.sstable(0,17),MockSchema.sstable(1,121),MockSchema.sstable(2,9));
  tracker.addSSTables(copyOf(readers));
  Assert.assertEquals(3,tracker.view.get().sstables.size());
  for (  SSTableReader reader : readers)   Assert.assertTrue(reader.isDeleteNotificationSetup());
  Assert.assertEquals(17 + 121 + 9,MockSchema.cfs.metric.liveDiskSpaceUsed.getCount());
  Assert.assertEquals(3,listener.senders.size());
  Assert.assertEquals(tracker,listener.senders.get(0));
  Assert.assertTrue(listener.received.get(0) instanceof SSTableAddedNotification);
  DatabaseDescriptor.setIncrementalBackupsEnabled(backups);
}
