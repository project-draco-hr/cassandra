{
  ColumnFamilyStore cfs=MockSchema.newCFS();
  Tracker tracker=cfs.getTracker();
  MockListener listener=new MockListener(false);
  tracker.subscribe(listener);
  final List<SSTableReader> readers=ImmutableList.of(MockSchema.sstable(0,9,true),MockSchema.sstable(1,15,true),MockSchema.sstable(2,71,true));
  tracker.addInitialSSTables(copyOf(readers));
  try {
    SSTableDeletingTask.pauseDeletions(true);
    try (LifecycleTransaction txn=tracker.tryModify(readers.get(0),OperationType.COMPACTION)){
      if (invalidate)       cfs.invalidate(false);
 else       tracker.dropSSTables();
      Assert.assertEquals(95,cfs.metric.totalDiskSpaceUsed.getCount());
      Assert.assertEquals(9,cfs.metric.liveDiskSpaceUsed.getCount());
      Assert.assertEquals(1,tracker.getView().sstables.size());
    }
     if (!invalidate) {
      Assert.assertEquals(1,tracker.getView().sstables.size());
      Assert.assertEquals(readers.get(0),Iterables.getFirst(tracker.getView().sstables,null));
      Assert.assertEquals(1,readers.get(0).selfRef().globalCount());
      Assert.assertFalse(readers.get(0).isMarkedCompacted());
      for (      SSTableReader reader : readers.subList(1,3)) {
        Assert.assertEquals(0,reader.selfRef().globalCount());
        Assert.assertTrue(reader.isMarkedCompacted());
      }
      Assert.assertNull(tracker.dropSSTables(new Predicate<SSTableReader>(){
        public boolean apply(        SSTableReader reader){
          return reader != readers.get(0);
        }
      }
,OperationType.UNKNOWN,null));
      Assert.assertEquals(1,tracker.getView().sstables.size());
      Assert.assertEquals(1,listener.received.size());
      Assert.assertEquals(tracker,listener.senders.get(0));
      Assert.assertEquals(2,((SSTableListChangedNotification)listener.received.get(0)).removed.size());
      Assert.assertEquals(0,((SSTableListChangedNotification)listener.received.get(0)).added.size());
      Assert.assertEquals(9,cfs.metric.liveDiskSpaceUsed.getCount());
      readers.get(0).selfRef().release();
    }
 else {
      Assert.assertEquals(0,tracker.getView().sstables.size());
      Assert.assertEquals(0,cfs.metric.liveDiskSpaceUsed.getCount());
      for (      SSTableReader reader : readers)       Assert.assertTrue(reader.isMarkedCompacted());
    }
  }
  finally {
    SSTableDeletingTask.pauseDeletions(false);
  }
}
