{
  String optionValue=options.get(TIMESTAMP_RESOLUTION_KEY);
  TimeUnit timestampResolution=optionValue == null ? DEFAULT_TIMESTAMP_RESOLUTION : TimeUnit.valueOf(optionValue);
  if (timestampResolution != DEFAULT_TIMESTAMP_RESOLUTION)   logger.warn("Using a non-default timestamp_resolution {} - are you really doing inserts with USING TIMESTAMP <non_microsecond_timestamp> (or driver equivalent)?",timestampResolution.toString());
  optionValue=options.get(MAX_SSTABLE_AGE_KEY);
  double fractionalDays=optionValue == null ? DEFAULT_MAX_SSTABLE_AGE_DAYS : Double.parseDouble(optionValue);
  maxSSTableAge=Math.round(fractionalDays * timestampResolution.convert(1,TimeUnit.DAYS));
  optionValue=options.get(BASE_TIME_KEY);
  baseTime=timestampResolution.convert(optionValue == null ? DEFAULT_BASE_TIME_SECONDS : Long.parseLong(optionValue),TimeUnit.SECONDS);
  optionValue=options.get(EXPIRED_SSTABLE_CHECK_FREQUENCY_SECONDS_KEY);
  expiredSSTableCheckFrequency=TimeUnit.MILLISECONDS.convert(optionValue == null ? DEFAULT_EXPIRED_SSTABLE_CHECK_FREQUENCY_SECONDS : Long.parseLong(optionValue),TimeUnit.SECONDS);
  optionValue=options.get(MAX_WINDOW_SIZE_KEY);
  maxWindowSize=timestampResolution.convert(optionValue == null ? DEFAULT_MAX_WINDOW_SIZE_SECONDS : Long.parseLong(optionValue),TimeUnit.SECONDS);
}
