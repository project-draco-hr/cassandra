{
  KeyPosition sampledPosition=getIndexScanPosition(decoratedKey);
  if (sampledPosition == null) {
    return 0;
  }
  long start=sampledPosition.position;
  if (spannedIndexDataPositions != null) {
    PositionSize info=spannedIndexDataPositions.get(sampledPosition);
    if (info != null) {
      if (sampledPosition.key.compareTo(decoratedKey) == 0)       return info.position;
      start=info.position + sampledPosition.key.serializedSize() + (Long.SIZE / 8);
    }
  }
  BufferedRandomAccessFile input=new BufferedRandomAccessFile(indexFilename(path),"r");
  input.seek(start);
  try {
    while (true) {
      DecoratedKey indexDecoratedKey;
      try {
        indexDecoratedKey=partitioner.convertFromDiskFormat(input.readUTF());
      }
 catch (      EOFException e) {
        return -1;
      }
      long position=input.readLong();
      int v=indexDecoratedKey.compareTo(decoratedKey);
      if (v >= 0)       return position;
    }
  }
  finally {
    input.close();
  }
}
