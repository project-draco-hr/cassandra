{
  for (  FilteredPartition newPartition : after.values()) {
    CFMetaData metadata=newPartition.metadata();
    DecoratedKey key=newPartition.partitionKey();
    FilteredPartition oldPartition=before.remove(key);
    if (oldPartition == null || oldPartition.isEmpty()) {
      for (      Row row : newPartition)       differ.onAdded(UntypedResultSet.Row.fromInternalRow(metadata,key,row));
      continue;
    }
    Iterator<Row> oldIter=oldPartition.iterator();
    Iterator<Row> newIter=newPartition.iterator();
    Row oldRow=oldIter.hasNext() ? oldIter.next() : null;
    Row newRow=newIter.hasNext() ? newIter.next() : null;
    while (oldRow != null && newRow != null) {
      int cmp=metadata.comparator.compare(oldRow.clustering(),newRow.clustering());
      if (cmp < 0) {
        differ.onDropped(UntypedResultSet.Row.fromInternalRow(metadata,key,oldRow));
        oldRow=oldIter.hasNext() ? oldIter.next() : null;
      }
 else       if (cmp > 0) {
        differ.onAdded(UntypedResultSet.Row.fromInternalRow(metadata,key,newRow));
        newRow=newIter.hasNext() ? newIter.next() : null;
      }
 else {
        if (!oldRow.equals(newRow))         differ.onUpdated(UntypedResultSet.Row.fromInternalRow(metadata,key,oldRow),UntypedResultSet.Row.fromInternalRow(metadata,key,newRow));
        oldRow=oldIter.hasNext() ? oldIter.next() : null;
        newRow=newIter.hasNext() ? newIter.next() : null;
      }
    }
    while (oldRow != null) {
      differ.onDropped(UntypedResultSet.Row.fromInternalRow(metadata,key,oldRow));
      oldRow=oldIter.hasNext() ? oldIter.next() : null;
    }
    while (newRow != null) {
      differ.onAdded(UntypedResultSet.Row.fromInternalRow(metadata,key,newRow));
      newRow=newIter.hasNext() ? newIter.next() : null;
    }
  }
  for (  FilteredPartition partition : before.values())   for (  Row row : partition)   differ.onDropped(UntypedResultSet.Row.fromInternalRow(partition.metadata(),partition.partitionKey(),row));
}
