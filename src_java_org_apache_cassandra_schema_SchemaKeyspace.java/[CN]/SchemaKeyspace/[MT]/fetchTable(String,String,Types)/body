{
  String query=String.format("SELECT * FROM %s.%s WHERE keyspace_name = ? AND table_name = ?",NAME,TABLES);
  UntypedResultSet rows=query(query,keyspaceName,tableName);
  if (rows.isEmpty())   throw new RuntimeException(String.format("%s:%s not found in the schema definitions keyspace.",keyspaceName,tableName));
  UntypedResultSet.Row row=rows.one();
  UUID id=row.getUUID("id");
  Set<CFMetaData.Flag> flags=CFMetaData.flagsFromStrings(row.getFrozenSet("flags",UTF8Type.instance));
  boolean isSuper=flags.contains(CFMetaData.Flag.SUPER);
  boolean isCounter=flags.contains(CFMetaData.Flag.COUNTER);
  boolean isDense=flags.contains(CFMetaData.Flag.DENSE);
  boolean isCompound=flags.contains(CFMetaData.Flag.COMPOUND);
  List<ColumnDefinition> columns=fetchColumns(keyspaceName,tableName,types);
  Map<ByteBuffer,CFMetaData.DroppedColumn> droppedColumns=fetchDroppedColumns(keyspaceName,tableName);
  Indexes indexes=fetchIndexes(keyspaceName,tableName);
  Triggers triggers=fetchTriggers(keyspaceName,tableName);
  return CFMetaData.create(keyspaceName,tableName,id,isDense,isCompound,isSuper,isCounter,false,columns,DatabaseDescriptor.getPartitioner()).params(createTableParamsFromRow(row)).droppedColumns(droppedColumns).indexes(indexes).triggers(triggers);
}
