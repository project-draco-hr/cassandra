{
  ColumnDefinition.Kind kind=deserializeKind(row.getString("type"));
  Integer componentIndex=null;
  if (row.has("component_index"))   componentIndex=row.getInt("component_index");
  AbstractType<?> comparator=isCQLTable ? UTF8Type.instance : CompactTables.columnDefinitionComparator(kind,isSuper,rawComparator,rawSubComparator);
  ColumnIdentifier name=ColumnIdentifier.getInterned(comparator.fromString(row.getString("column_name")),comparator);
  AbstractType<?> validator=parseType(row.getString("validator"));
  IndexType indexType=null;
  if (row.has("index_type"))   indexType=IndexType.valueOf(row.getString("index_type"));
  Map<String,String> indexOptions=null;
  if (row.has("index_options"))   indexOptions=fromJsonMap(row.getString("index_options"));
  String indexName=null;
  if (row.has("index_name"))   indexName=row.getString("index_name");
  return new ColumnDefinition(keyspace,table,name,validator,indexType,indexOptions,indexName,componentIndex,kind);
}
