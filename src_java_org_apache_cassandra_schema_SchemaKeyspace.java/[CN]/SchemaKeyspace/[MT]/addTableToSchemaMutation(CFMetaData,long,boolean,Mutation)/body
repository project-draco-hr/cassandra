{
  RowUpdateBuilder adder=new RowUpdateBuilder(Tables,timestamp,mutation).clustering(table.cfName);
  adder.add("bloom_filter_fp_chance",table.getBloomFilterFpChance()).add("comment",table.getComment()).add("dclocal_read_repair_chance",table.getDcLocalReadRepairChance()).add("default_time_to_live",table.getDefaultTimeToLive()).add("gc_grace_seconds",table.getGcGraceSeconds()).add("id",table.cfId).add("max_index_interval",table.getMaxIndexInterval()).add("memtable_flush_period_in_ms",table.getMemtableFlushPeriod()).add("min_index_interval",table.getMinIndexInterval()).add("read_repair_chance",table.getReadRepairChance()).add("speculative_retry",table.getSpeculativeRetry().toString()).map("caching",table.getCaching().asMap()).map("compaction",buildCompactionMap(table)).map("compression",table.compressionParameters().asMap()).set("flags",flagsToStrings(table.flags())).build();
  if (withColumnsAndTriggers) {
    for (    ColumnDefinition column : table.allColumns())     addColumnToSchemaMutation(table,column,timestamp,mutation);
    for (    CFMetaData.DroppedColumn column : table.getDroppedColumns().values())     addDroppedColumnToSchemaMutation(table,column,timestamp,mutation);
    for (    TriggerMetadata trigger : table.getTriggers())     addTriggerToSchemaMutation(table,trigger,timestamp,mutation);
  }
}
