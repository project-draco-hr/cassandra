{
  final Slices.InOrderTester tester=slices.inOrderTester(reversed);
  return new FilteringRowIterator(iterator){
    @Override public FilteringRow makeRowFilter(){
      return FilteringRow.columnsFilteringRow(columnFilter);
    }
    @Override protected boolean includeRow(    Row row){
      return tester.includes(row.clustering());
    }
    @Override public boolean hasNext(){
      return !tester.isDone() && super.hasNext();
    }
  }
;
}
