{
  if (!(validator instanceof ListType))   throw new InvalidRequestException("List operations are only supported on List typed columns, but " + validator + " given.");
switch (kind) {
case SET:
    cf.addAtom(params.makeTombstoneForOverwrite(builder.copy().build(),builder.copy().buildAsEndOfRange()));
  doAppend(cf,builder,(CollectionType)validator,params);
break;
case SET_IDX:
doSet(cf,builder,params,(CollectionType)validator,list);
break;
case APPEND:
doAppend(cf,builder,(CollectionType)validator,params);
break;
case PREPEND:
doPrepend(cf,builder,(CollectionType)validator,params);
break;
case DISCARD:
doDiscard(cf,(CollectionType)validator,params,list);
break;
case DISCARD_IDX:
doDiscardIdx(cf,params,list);
break;
default :
throw new AssertionError("Unsupported List operation: " + kind);
}
}
