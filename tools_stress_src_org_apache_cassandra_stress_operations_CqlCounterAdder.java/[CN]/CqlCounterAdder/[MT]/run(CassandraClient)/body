{
  if (session.getColumnFamilyType() == ColumnFamilyType.Super)   throw new RuntimeException("Super columns are not implemented for CQL");
  if (cqlQuery == null) {
    StringBuilder query=new StringBuilder("UPDATE Counter1 USING CONSISTENCY " + session.getConsistencyLevel().toString() + " SET ");
    for (int i=0; i < session.getColumnsPerKey(); i++) {
      if (i > 0)       query.append(",");
      query.append('C').append(i).append("=C").append(i).append("+1");
    }
    query.append(" WHERE KEY=?");
    cqlQuery=query.toString();
  }
  String key=String.format("%0" + session.getTotalKeysLength() + "d",index);
  String formattedQuery=null;
  long start=System.currentTimeMillis();
  boolean success=false;
  String exceptionMessage=null;
  for (int t=0; t < session.getRetryTimes(); t++) {
    if (success)     break;
    try {
      if (session.usePreparedStatements()) {
        Integer stmntId=getPreparedStatement(client,cqlQuery);
        client.execute_prepared_cql_query(stmntId,Collections.singletonList(ByteBufferUtil.bytes(getUnQuotedCqlBlob(key))));
      }
 else {
        if (formattedQuery == null)         formattedQuery=formatCqlQuery(cqlQuery,Collections.singletonList(getUnQuotedCqlBlob(key)));
        client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()),Compression.NONE);
      }
      success=true;
    }
 catch (    Exception e) {
      exceptionMessage=getExceptionMessage(e);
      success=false;
    }
  }
  if (!success) {
    error(String.format("Operation [%d] retried %d times - error incrementing key %s %s%n",index,session.getRetryTimes(),key,(exceptionMessage == null) ? "" : "(" + exceptionMessage + ")"));
  }
  session.operations.getAndIncrement();
  session.keys.getAndIncrement();
  session.latency.getAndAdd(System.currentTimeMillis() - start);
}
