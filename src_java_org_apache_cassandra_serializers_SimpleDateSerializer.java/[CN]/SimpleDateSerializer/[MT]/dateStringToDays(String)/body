{
  if (rawPattern.matcher(source).matches()) {
    try {
      long result=Long.parseLong(source);
      if (result < 0 || result > maxSupportedDays)       throw new NumberFormatException("Input out of bounds: " + source);
      if (result >= Integer.MAX_VALUE)       result-=byteOrderShift;
      return (int)result;
    }
 catch (    NumberFormatException e) {
      throw new MarshalException(String.format("Unable to make unsigned int (for date) from: '%s'",source),e);
    }
  }
  try {
    DateTime parsed=formatter.parseDateTime(source);
    long millis=parsed.getMillis();
    if (millis < minSupportedDateMillis)     throw new MarshalException(String.format("Input date %s is less than min supported date %s",source,new LocalDate(minSupportedDateMillis).toString()));
    if (millis > maxSupportedDateMillis)     throw new MarshalException(String.format("Input date %s is greater than max supported date %s",source,new LocalDate(maxSupportedDateMillis).toString()));
    return timeInMillisToDay(millis);
  }
 catch (  IllegalArgumentException e1) {
    throw new MarshalException(String.format("Unable to coerce '%s' to a formatted date (long)",source),e1);
  }
}
