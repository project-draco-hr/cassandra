def test_prompt(self):
    with testrun_cqlsh(tty=True, keyspace=None) as c:
        self.assertTrue(c.output_header.splitlines()[(-1)].endswith('cqlsh> '))
        c.send('\n')
        output = c.read_to_next_prompt().replace('\r\n', '\n')
        self.assertTrue(output.endswith('cqlsh> '))
        cmd = ('USE "%s";\n' % get_keyspace().replace('"', '""'))
        c.send(cmd)
        output = c.read_to_next_prompt().replace('\r\n', '\n')
        self.assertTrue(output.endswith(('cqlsh:%s> ' % get_keyspace())))
        c.send('use system;\n')
        output = c.read_to_next_prompt().replace('\r\n', '\n')
        self.assertTrue(output.endswith('cqlsh:system> '))
        c.send('use NONEXISTENTKEYSPACE;\n')
        outputlines = c.read_to_next_prompt().splitlines()
        start_index = 0
        if c.realtty:
            self.assertEqual(outputlines[start_index], 'use NONEXISTENTKEYSPACE;')
            start_index = 1
        self.assertTrue(outputlines[(start_index + 1)].endswith('cqlsh:system> '))
        midline = ColoredText(outputlines[start_index])
        self.assertEqual(midline.plain(), 'InvalidRequest: Error from server: code=2200 [Invalid query] message="Keyspace \'nonexistentkeyspace\' does not exist"')
        self.assertColorFromTags(midline, 'RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR')
