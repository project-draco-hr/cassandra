def check_describe_keyspace(self, fullcqlver):
    with testrun_cqlsh(tty=True, cqlver=fullcqlver) as c:
        ks = get_test_keyspace()
        qks = quote_name(fullcqlver, ks)
        for cmd in ('describe keyspace', 'desc keyspace'):
            for givename in ('system', '', qks):
                for semicolon in ('', ';'):
                    fullcmd = (((cmd + (' ' if givename else '')) + givename) + semicolon)
                    desc = c.cmd_and_response(fullcmd)
                    self.check_describe_keyspace_output(desc, (givename or qks), fullcqlver)
        new_ks_name = ('COPY_OF_' + ks)
        copy_desc = desc.replace(ks, new_ks_name)
        statements = split_cql_commands(copy_desc, cqlver=fullcqlver)
        do_drop = True
        with cassandra_cursor(cql_version=fullcqlver) as curs:
            try:
                for stmt in statements:
                    cqlshlog.debug(('TEST EXEC: %s' % stmt))
                    try:
                        curs.execute(stmt)
                    except cql.ProgrammingError as e:
                        for errmsg in ('No definition found that is not part of the PRIMARY KEY', "mismatched input '<' expecting EOF"):
                            if (errmsg in str(e)):
                                do_drop = False
                                break
                        else:
                            raise
            finally:
                curs.execute('use system')
                if do_drop:
                    curs.execute(('drop keyspace %s' % quote_name(fullcqlver, new_ks_name)))
