def test_describe_columnfamily_output(self):
    table_desc3 = dedent(("\n\n            CREATE TABLE %s.has_all_types (\n                num int PRIMARY KEY,\n                asciicol ascii,\n                bigintcol bigint,\n                blobcol blob,\n                booleancol boolean,\n                decimalcol decimal,\n                doublecol double,\n                floatcol float,\n                intcol int,\n                textcol text,\n                timestampcol timestamp,\n                uuidcol uuid,\n                varcharcol text,\n                varintcol varint\n            ) WITH bloom_filter_fp_chance = 0.01\n                AND caching = 'KEYS_ONLY'\n                AND comment = ''\n                AND compaction = {'min_threshold': '4', 'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32'}\n                AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}\n                AND default_time_to_live = 0\n                AND gc_grace_seconds = 864000\n                AND max_index_interval = 2048\n                AND memtable_flush_period_in_ms = 0\n                AND min_index_interval = 128\n                AND populate_io_cache_on_flush = false\n                AND read_repair_chance = 0.1\n                AND rows_per_partition_to_cache = '100'\n                AND speculative_retry = '99.0PERCENTILE';\n\n        " % quote_name(get_test_keyspace())))
    with testrun_cqlsh(tty=True, cqlver='3.1.5') as c:
        for cmdword in ('describe table', 'desc columnfamily'):
            for semicolon in (';', ''):
                output = c.cmd_and_response(('%s has_all_types%s' % (cmdword, semicolon)))
                self.assertNoHasColors(output)
                self.assertEqual(output, table_desc3)
