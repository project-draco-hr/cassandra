{
  boolean transformed=false;
  Collection<Cell> insert=cm.getSortedColumns();
  while (true) {
    Holder current=ref;
    delta.reset();
    DeletionInfo deletionInfo;
    if (cm.deletionInfo().mayModify(current.deletionInfo)) {
      deletionInfo=current.deletionInfo.copy().add(cm.deletionInfo());
      delta.addHeapSize(deletionInfo.unsharedHeapSize() - current.deletionInfo.unsharedHeapSize());
    }
 else {
      deletionInfo=current.deletionInfo;
    }
    ColumnUpdater updater=new ColumnUpdater(this,current,transformation,indexer,delta);
    Object[] tree=BTree.update(current.tree,metadata.comparator.columnComparator(),insert,true,updater);
    if (tree != null && refUpdater.compareAndSet(this,current,new Holder(tree,deletionInfo))) {
      indexer.updateRowLevelIndexes();
      return updater.delta;
    }
    if (!transformed) {
      insert=transform(metadata.comparator.columnComparator(),cm,transformation,false);
      transformed=true;
    }
  }
}
