{
  final ByteBuffer partitionKey=ByteBufferUtil.readWithLength(in);
  final CellName cellName=cfs.metadata.comparator.cellFromByteBuffer(ByteBufferUtil.readWithLength(in));
  return StageManager.getStage(Stage.READ).submit(new Callable<Pair<CounterCacheKey,ClockAndCount>>(){
    public Pair<CounterCacheKey,ClockAndCount> call() throws Exception {
      DecoratedKey key=cfs.partitioner.decorateKey(partitionKey);
      QueryFilter filter=QueryFilter.getNamesFilter(key,cfs.metadata.cfName,FBUtilities.singleton(cellName,cfs.metadata.comparator),Long.MIN_VALUE);
      ColumnFamily cf=cfs.getTopLevelColumns(filter,Integer.MIN_VALUE);
      if (cf == null)       return null;
      Cell cell=cf.getColumn(cellName);
      if (cell == null || !cell.isLive(Long.MIN_VALUE))       return null;
      ClockAndCount clockAndCount=CounterContext.instance().getLocalClockAndCount(cell.value());
      return Pair.create(CounterCacheKey.create(cfs.metadata.cfId,partitionKey,cellName),clockAndCount);
    }
  }
);
}
