{
  int keyLength=input.readInt();
  if (keyLength > FBUtilities.MAX_UNSIGNED_SHORT) {
    throw new IOException(String.format("Corrupted key cache. Key length of %d is longer than maximum of %d",keyLength,FBUtilities.MAX_UNSIGNED_SHORT));
  }
  ByteBuffer key=ByteBufferUtil.read(input,keyLength);
  int generation=input.readInt();
  input.readBoolean();
  SSTableReader reader;
  if (cfs == null || !cfs.isKeyCacheEnabled() || (reader=findDesc(generation,cfs.getSSTables(SSTableSet.CANONICAL))) == null) {
    RowIndexEntry.Serializer.skipForCache(input,BigFormat.instance.getLatestVersion());
    return null;
  }
  RowIndexEntry.IndexSerializer<?> indexSerializer=reader.descriptor.getFormat().getIndexSerializer(reader.metadata,reader.descriptor.version,reader.header);
  RowIndexEntry<?> entry=indexSerializer.deserializeForCache(input);
  return Futures.immediateFuture(Pair.create(new KeyCacheKey(cfs.metadata.ksAndCFName,reader.descriptor,key),entry));
}
