{
  AbstractType<?> t=updateWith(def.type,keyspace,toReplace,updated);
  if (t == null)   return false;
  cfm.addOrReplaceColumnDefinition(def.withNewType(t));
switch (def.kind) {
case PARTITION_KEY:
    cfm.keyValidator(updateWith(cfm.getKeyValidator(),keyspace,toReplace,updated));
  break;
case CLUSTERING_COLUMN:
cfm.comparator=CellNames.fromAbstractType(updateWith(cfm.comparator.asAbstractType(),keyspace,toReplace,updated),cfm.comparator.isDense());
break;
default :
if (def.type instanceof CollectionType) {
t=updateWith(cfm.comparator.asAbstractType(),keyspace,toReplace,updated);
if (t != null) cfm.comparator=CellNames.fromAbstractType(t,cfm.comparator.isDense());
}
break;
}
return true;
}
