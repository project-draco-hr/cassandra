{
  Map<String,Pair<String,Integer>> part1=new HashMap<String,Pair<String,Integer>>(){
{
      put("key0",Pair.create("Maxie",-1));
      put("key1",Pair.create("Chelsie",33));
      put("key2",Pair.create((String)null,43));
      put("key3",Pair.create("Shanna",27));
      put("key4",Pair.create("Amiya",36));
    }
  }
;
  ColumnFamilyStore store=loadData(part1,forceFlush);
  final ByteBuffer firstName=UTF8Type.instance.decompose("first_name");
  final ByteBuffer age=UTF8Type.instance.decompose("age");
  Set<String> rows=getIndexed(store,10,buildExpression(firstName,Operator.LIKE_CONTAINS,UTF8Type.instance.decompose("a")));
  Assert.assertTrue(rows.toString(),Arrays.equals(new String[]{"key0","key3","key4"},rows.toArray(new String[rows.size()])));
  rows=getIndexed(store,10,buildExpression(age,Operator.EQ,Int32Type.instance.decompose(33)));
  Assert.assertTrue(rows.toString(),Arrays.equals(new String[]{"key1"},rows.toArray(new String[rows.size()])));
  store.indexManager.invalidateAllIndexesBlocking();
  rows=getIndexed(store,10,buildExpression(firstName,Operator.LIKE_CONTAINS,UTF8Type.instance.decompose("a")));
  Assert.assertTrue(rows.toString(),rows.isEmpty());
  rows=getIndexed(store,10,buildExpression(age,Operator.EQ,Int32Type.instance.decompose(33)));
  Assert.assertTrue(rows.toString(),rows.isEmpty());
  Map<String,Pair<String,Integer>> part2=new HashMap<String,Pair<String,Integer>>(){
{
      put("key5",Pair.create("Americo",20));
      put("key6",Pair.create("Fiona",39));
      put("key7",Pair.create("Francis",41));
      put("key8",Pair.create("Fred",21));
      put("key9",Pair.create("Amely",40));
      put("key14",Pair.create("Dino",28));
    }
  }
;
  loadData(part2,forceFlush);
  rows=getIndexed(store,10,buildExpression(firstName,Operator.LIKE_CONTAINS,UTF8Type.instance.decompose("a")));
  Assert.assertTrue(rows.toString(),Arrays.equals(new String[]{"key6","key7"},rows.toArray(new String[rows.size()])));
  rows=getIndexed(store,10,buildExpression(age,Operator.EQ,Int32Type.instance.decompose(40)));
  Assert.assertTrue(rows.toString(),Arrays.equals(new String[]{"key9"},rows.toArray(new String[rows.size()])));
}
