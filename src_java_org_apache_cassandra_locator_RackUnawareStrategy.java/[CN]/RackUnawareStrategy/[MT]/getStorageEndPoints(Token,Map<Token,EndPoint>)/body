{
  int startIndex;
  List<EndPoint> list=new ArrayList<EndPoint>();
  int foundCount=0;
  List tokens=new ArrayList<Token>(tokenToEndPointMap.keySet());
  Collections.sort(tokens);
  int index=Collections.binarySearch(tokens,token);
  if (index < 0) {
    index=(index + 1) * (-1);
    if (index >= tokens.size())     index=0;
  }
  int totalNodes=tokens.size();
  list.add(tokenToEndPointMap.get(tokens.get(index)));
  foundCount++;
  startIndex=(index + 1) % totalNodes;
  for (int i=startIndex, count=1; count < totalNodes && foundCount < replicas_; ++count, i=(i + 1) % totalNodes) {
    if (!list.contains(tokenToEndPointMap.get(tokens.get(i)))) {
      list.add(tokenToEndPointMap.get(tokens.get(i)));
      foundCount++;
    }
  }
  retrofitPorts(list);
  return list.toArray(new EndPoint[list.size()]);
}
