{
  String keyspace=ConfigHelper.getOutputKeyspace(conf);
  String cfName=ConfigHelper.getOutputColumnFamily(conf);
  String query="SELECT key_validator," + "       key_aliases," + "       column_aliases "+ "FROM system.schema_columnfamilies "+ "WHERE keyspace_name='%s' and columnfamily_name='%s'";
  String formatted=String.format(query,keyspace,cfName);
  CqlResult result=client.execute_cql3_query(ByteBufferUtil.bytes(formatted),Compression.NONE,ConsistencyLevel.ONE);
  Column rawKeyValidator=result.rows.get(0).columns.get(0);
  String validator=ByteBufferUtil.string(ByteBuffer.wrap(rawKeyValidator.getValue()));
  keyValidator=parseType(validator);
  Column rawPartitionKeys=result.rows.get(0).columns.get(1);
  String keyString=ByteBufferUtil.string(ByteBuffer.wrap(rawPartitionKeys.getValue()));
  logger.debug("partition keys: {}",keyString);
  List<String> keys=FBUtilities.fromJsonList(keyString);
  partitionKeyColumns=new String[keys.size()];
  int i=0;
  for (  String key : keys) {
    partitionKeyColumns[i]=key;
    i++;
  }
  Column rawClusterColumns=result.rows.get(0).columns.get(2);
  String clusterColumnString=ByteBufferUtil.string(ByteBuffer.wrap(rawClusterColumns.getValue()));
  logger.debug("cluster columns: {}",clusterColumnString);
  clusterColumns=FBUtilities.fromJsonList(clusterColumnString);
}
