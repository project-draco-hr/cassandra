{
  int ll, rl;
  ByteBuffer lb, rb;
  if (ltoken.token instanceof byte[]) {
    ll=((byte[])ltoken.token).length;
    lb=ByteBuffer.wrap(((byte[])ltoken.token));
  }
 else {
    ll=((ByteBuffer)ltoken.token).remaining();
    lb=(ByteBuffer)ltoken.token;
  }
  if (rtoken.token instanceof byte[]) {
    rl=((byte[])rtoken.token).length;
    rb=ByteBuffer.wrap(((byte[])rtoken.token));
  }
 else {
    rl=((ByteBuffer)rtoken.token).remaining();
    rb=(ByteBuffer)rtoken.token;
  }
  int sigbytes=Math.max(ll,rl);
  BigInteger left=bigForBytes(lb,sigbytes);
  BigInteger right=bigForBytes(rb,sigbytes);
  Pair<BigInteger,Boolean> midpair=FBUtilities.midpoint(left,right,8 * sigbytes);
  return new BytesToken(bytesForBig(midpair.left,sigbytes,midpair.right));
}
