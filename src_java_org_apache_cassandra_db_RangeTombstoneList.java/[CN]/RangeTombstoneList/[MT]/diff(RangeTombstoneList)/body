{
  if (isEmpty())   return superset;
  RangeTombstoneList diff=null;
  int j=0;
  for (int i=0; i < superset.size; i++) {
    while (j < size && comparator.compare(starts[j],superset.starts[i]) < 0)     j++;
    if (j >= size) {
      if (i < superset.size) {
        if (diff == null)         diff=new RangeTombstoneList(comparator,superset.size - i);
        for (int k=i; k < superset.size; k++)         diff.add(superset.starts[k],superset.ends[k],superset.markedAts[k],superset.delTimes[k]);
      }
      return diff;
    }
    if (!starts[j].equals(superset.starts[i]) || !ends[j].equals(superset.ends[i]) || markedAts[j] != superset.markedAts[i]) {
      if (diff == null)       diff=new RangeTombstoneList(comparator,Math.min(8,superset.size - i));
      diff.add(superset.starts[i],superset.ends[i],superset.markedAts[i],superset.delTimes[i]);
    }
  }
  return diff;
}
