{
  MapDifference<DecoratedKey,ColumnFamily> diff=Maps.difference(old,updated);
  for (  Map.Entry<DecoratedKey,ColumnFamily> entry : diff.entriesOnlyOnRight().entrySet()) {
    ColumnFamily cfAttrs=entry.getValue();
    if (!(cfAttrs.getColumnCount() == 0)) {
      Map<String,CFMetaData> cfDefs=KSMetaData.deserializeColumnFamilies(new Row(entry.getKey(),cfAttrs));
      for (      CFMetaData cfDef : cfDefs.values())       addColumnFamily(cfDef);
    }
  }
  Map<DecoratedKey,MapDifference.ValueDifference<ColumnFamily>> modifiedEntries=diff.entriesDiffering();
  for (  DecoratedKey keyspace : modifiedEntries.keySet()) {
    MapDifference.ValueDifference<ColumnFamily> valueDiff=modifiedEntries.get(keyspace);
    ColumnFamily prevValue=valueDiff.leftValue();
    ColumnFamily newValue=valueDiff.rightValue();
    Row newRow=new Row(keyspace,newValue);
    if (prevValue.getColumnCount() == 0) {
      for (      CFMetaData cfm : KSMetaData.deserializeColumnFamilies(newRow).values())       addColumnFamily(cfm);
    }
 else     if (newValue.getColumnCount() == 0) {
      for (      CFMetaData cfm : KSMetaData.deserializeColumnFamilies(new Row(keyspace,prevValue)).values())       dropColumnFamily(cfm.ksName,cfm.cfName);
    }
 else {
      String ksName=AsciiType.instance.getString(keyspace.key);
      Map<String,CFMetaData> oldCfDefs=new HashMap<String,CFMetaData>();
      for (      CFMetaData cfm : Schema.instance.getKSMetaData(ksName).cfMetaData().values())       oldCfDefs.put(cfm.cfName,cfm);
      Map<String,CFMetaData> newCfDefs=KSMetaData.deserializeColumnFamilies(newRow);
      MapDifference<String,CFMetaData> cfDefDiff=Maps.difference(oldCfDefs,newCfDefs);
      for (      CFMetaData cfDef : cfDefDiff.entriesOnlyOnRight().values())       addColumnFamily(cfDef);
      for (      CFMetaData cfDef : cfDefDiff.entriesOnlyOnLeft().values())       dropColumnFamily(cfDef.ksName,cfDef.cfName);
      for (      MapDifference.ValueDifference<CFMetaData> cfDef : cfDefDiff.entriesDiffering().values())       updateColumnFamily(cfDef.rightValue());
    }
  }
}
