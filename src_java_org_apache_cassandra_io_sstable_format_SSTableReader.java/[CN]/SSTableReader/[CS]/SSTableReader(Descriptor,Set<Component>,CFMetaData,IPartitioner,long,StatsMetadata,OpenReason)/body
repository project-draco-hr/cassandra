{
  super(desc,components,metadata,partitioner);
  this.sstableMetadata=sstableMetadata;
  this.maxDataAge=maxDataAge;
  this.openReason=openReason;
  this.rowIndexEntrySerializer=descriptor.version.getSSTableFormat().getIndexSerializer(metadata);
  tidy.deletingTask=new SSTableDeletingTask(this);
  if (SystemKeyspace.NAME.equals(desc.ksname) || openReason != OpenReason.NORMAL) {
    readMeter=null;
    readMeterSyncFuture=null;
    return;
  }
  readMeter=SystemKeyspace.getSSTableReadMeter(desc.ksname,desc.cfname,desc.generation);
  readMeterSyncFuture=syncExecutor.scheduleAtFixedRate(new Runnable(){
    public void run(){
      if (!isCompacted.get()) {
        meterSyncThrottle.acquire();
        SystemKeyspace.persistSSTableReadMeter(desc.ksname,desc.cfname,desc.generation,readMeter);
      }
    }
  }
,1,5,TimeUnit.MINUTES);
}
