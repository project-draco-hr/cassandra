{
  this.factory=new ThreadPoolMetricNameFactory("ThreadPools",path,poolName);
  activeTasks=Metrics.newGauge(factory.createMetricName("ActiveTasks"),new Gauge<Integer>(){
    public Integer value(){
      return executor.getActiveCount();
    }
  }
);
  totalBlocked=Metrics.newCounter(factory.createMetricName("TotalBlockedTasks"));
  currentBlocked=Metrics.newCounter(factory.createMetricName("CurrentlyBlockedTasks"));
  completedTasks=Metrics.newGauge(factory.createMetricName("CompletedTasks"),new Gauge<Long>(){
    public Long value(){
      return executor.getCompletedTaskCount();
    }
  }
);
  pendingTasks=Metrics.newGauge(factory.createMetricName("PendingTasks"),new Gauge<Long>(){
    public Long value(){
      return executor.getTaskCount() - executor.getCompletedTaskCount();
    }
  }
);
  maxPoolSize=Metrics.newGauge(factory.createMetricName("MaxPoolSize"),new Gauge<Integer>(){
    public Integer value(){
      return executor.getMaximumPoolSize();
    }
  }
);
}
