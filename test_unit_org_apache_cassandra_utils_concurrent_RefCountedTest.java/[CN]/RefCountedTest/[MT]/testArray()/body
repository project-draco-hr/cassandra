{
  final Object objects[]=new Object[entryCount];
  for (int i=0; i < entryCount; i+=2)   objects[i]=new Object();
  File f=File.createTempFile("foo","bar");
  RefCounted.Tidy tidier=new RefCounted.Tidy(){
    Object ref=objects;
    File fileRef=f;
    @Override public void tidy() throws Exception {
    }
    @Override public String name(){
      return "42";
    }
  }
;
  Ref<Object> ref=new Ref(new AtomicReference<Object[]>(objects),tidier);
  Visitor visitor=new Visitor();
  visitor.run();
  ref.close();
  System.out.println("Array visited " + visitor.lastVisitedCount + " iterations "+ visitor.iterations);
  Assert.assertTrue(visitor.lastVisitedCount > (entryCount / 2) && visitor.lastVisitedCount < (entryCount / 2) + fudgeFactor);
  Assert.assertTrue(visitor.iterations > (entryCount / 2) && visitor.iterations < (entryCount / 2) + fudgeFactor);
}
