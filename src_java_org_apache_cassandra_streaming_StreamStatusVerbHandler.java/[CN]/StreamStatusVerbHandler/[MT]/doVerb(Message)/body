{
  byte[] body=message.getMessageBody();
  ByteArrayInputStream bufIn=new ByteArrayInputStream(body);
  try {
    FileStatus streamStatus=FileStatus.serializer().deserialize(new DataInputStream(bufIn));
    StreamContext context=new StreamContext(message.getFrom(),streamStatus.getSessionId());
switch (streamStatus.getAction()) {
case DELETE:
      StreamOutManager.get(context).finishAndStartNext(streamStatus.getFile());
    break;
case STREAM:
  logger.warn("Need to re-stream file {} to {}",streamStatus.getFile(),message.getFrom());
StreamOutManager.get(context).retry(streamStatus.getFile());
break;
case EMPTY:
logger.error("Did not find matching ranges on {}",message.getFrom());
StreamInManager.get(context).remove();
if (StorageService.instance.isBootstrapMode()) StorageService.instance.removeBootstrapSource(message.getFrom(),new String(message.getHeader(StreamOut.TABLE_NAME)));
break;
default :
throw new RuntimeException("Cannot handle FileStatus.Action: " + streamStatus.getAction());
}
}
 catch (IOException ex) {
throw new IOError(ex);
}
}
