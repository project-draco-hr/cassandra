{
  String optionValue=options.get(TIMESTAMP_RESOLUTION_KEY);
  timestampResolution=optionValue == null ? DEFAULT_TIMESTAMP_RESOLUTION : TimeUnit.valueOf(optionValue);
  if (timestampResolution != DEFAULT_TIMESTAMP_RESOLUTION)   logger.warn("Using a non-default timestamp_resolution {} - are you really doing inserts with USING TIMESTAMP <non_microsecond_timestamp> (or driver equivalent)?",timestampResolution.toString());
  optionValue=options.get(COMPACTION_WINDOW_UNIT_KEY);
  sstableWindowUnit=optionValue == null ? DEFAULT_COMPACTION_WINDOW_UNIT : TimeUnit.valueOf(optionValue);
  optionValue=options.get(COMPACTION_WINDOW_SIZE_KEY);
  sstableWindowSize=optionValue == null ? DEFAULT_COMPACTION_WINDOW_SIZE : Integer.parseInt(optionValue);
  optionValue=options.get(EXPIRED_SSTABLE_CHECK_FREQUENCY_SECONDS_KEY);
  expiredSSTableCheckFrequency=TimeUnit.MILLISECONDS.convert(optionValue == null ? DEFAULT_EXPIRED_SSTABLE_CHECK_FREQUENCY_SECONDS : Long.parseLong(optionValue),TimeUnit.SECONDS);
  stcsOptions=new SizeTieredCompactionStrategyOptions(options);
}
