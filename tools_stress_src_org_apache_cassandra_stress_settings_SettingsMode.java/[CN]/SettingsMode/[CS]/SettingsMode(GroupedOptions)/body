{
  if (options instanceof Cql3Options) {
    cqlVersion=CqlVersion.CQL3;
    Cql3Options opts=(Cql3Options)options;
    api=opts.useNative.setByUser() ? ConnectionAPI.JAVA_DRIVER_NATIVE : ConnectionAPI.THRIFT;
    style=opts.usePrepared.setByUser() ? ConnectionStyle.CQL_PREPARED : ConnectionStyle.CQL;
    compression=ProtocolOptions.Compression.valueOf(opts.useCompression.value().toUpperCase()).name();
  }
 else   if (options instanceof Cql3SimpleNativeOptions) {
    cqlVersion=CqlVersion.CQL3;
    Cql3SimpleNativeOptions opts=(Cql3SimpleNativeOptions)options;
    api=ConnectionAPI.SIMPLE_NATIVE;
    style=opts.usePrepared.setByUser() ? ConnectionStyle.CQL_PREPARED : ConnectionStyle.CQL;
    compression=ProtocolOptions.Compression.NONE.name();
  }
 else   if (options instanceof Cql2Options) {
    cqlVersion=CqlVersion.CQL2;
    api=ConnectionAPI.THRIFT;
    Cql2Options opts=(Cql2Options)options;
    style=opts.usePrepared.setByUser() ? ConnectionStyle.CQL_PREPARED : ConnectionStyle.CQL;
    compression=ProtocolOptions.Compression.NONE.name();
  }
 else   if (options instanceof ThriftOptions) {
    ThriftOptions opts=(ThriftOptions)options;
    cqlVersion=CqlVersion.NOCQL;
    api=opts.smart.setByUser() ? ConnectionAPI.THRIFT_SMART : ConnectionAPI.THRIFT;
    style=ConnectionStyle.THRIFT;
    compression=ProtocolOptions.Compression.NONE.name();
  }
 else   throw new IllegalStateException();
}
