{
  List<PendingFile> pending=new ArrayList<PendingFile>();
  int i=0;
  for (  SSTableReader sstable : sstables) {
    Descriptor desc=sstable.getDescriptor();
    List<Pair<Long,Long>> sections=sstable.getPositionsForRanges(ranges);
    if (sections.isEmpty())     continue;
    pending.add(new PendingFile(desc,SSTable.COMPONENT_DATA,sections));
  }
  logger.info("Stream context metadata " + pending + " "+ sstables.size()+ " sstables.");
  PendingFile[] pendingFiles=pending.toArray(new PendingFile[pending.size()]);
  StreamOutManager.get(target).addFilesToStream(pendingFiles);
  StreamInitiateMessage biMessage=new StreamInitiateMessage(pendingFiles);
  Message message=StreamInitiateMessage.makeStreamInitiateMessage(biMessage);
  message.setHeader(StreamOut.TABLE_NAME,table.getBytes());
  logger.info("Sending a stream initiate message to " + target + " ...");
  MessagingService.instance.sendOneWay(message,target);
  if (pendingFiles.length > 0) {
    logger.info("Waiting for transfer to " + target + " to complete");
    StreamOutManager.get(target).waitForStreamCompletion();
    logger.info("Done with transfer to " + target);
  }
}
