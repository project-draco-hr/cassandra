{
  List<Range<Token>> differences=MerkleTrees.difference(r1.trees,r2.trees);
  stat=new SyncStat(new NodePair(r1.endpoint,r2.endpoint),differences.size());
  String format=String.format("[repair #%s] Endpoints %s and %s %%s for %s",desc.sessionId,r1.endpoint,r2.endpoint,desc.columnFamily);
  if (differences.isEmpty()) {
    logger.info(String.format(format,"are consistent"));
    Tracing.traceRepair("Endpoint {} is consistent with {} for {}",r1.endpoint,r2.endpoint,desc.columnFamily);
    set(stat);
    return;
  }
  logger.info(String.format(format,"have " + differences.size() + " range(s) out of sync"));
  Tracing.traceRepair("Endpoint {} has {} range(s) out of sync with {} for {}",r1.endpoint,differences.size(),r2.endpoint,desc.columnFamily);
  startSync(differences);
}
