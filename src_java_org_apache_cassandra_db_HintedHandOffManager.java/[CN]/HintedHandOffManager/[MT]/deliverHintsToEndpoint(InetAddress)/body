{
  if (logger_.isDebugEnabled())   logger_.debug("Started hinted handoff for endPoint " + endPoint);
  byte[] targetEPBytes=endPoint.getAddress();
  ColumnFamilyStore hintStore=Table.open(Table.SYSTEM_TABLE).getColumnFamilyStore(HINTS_CF);
  for (  String tableName : DatabaseDescriptor.getTables()) {
    DecoratedKey tableNameKey=StorageService.getPartitioner().decorateKey(tableName.getBytes(UTF8));
    byte[] startColumn=ArrayUtils.EMPTY_BYTE_ARRAY;
    while (true) {
      QueryFilter filter=QueryFilter.getSliceFilter(tableNameKey,new QueryPath(HINTS_CF),startColumn,ArrayUtils.EMPTY_BYTE_ARRAY,null,false,PAGE_SIZE);
      ColumnFamily hintColumnFamily=ColumnFamilyStore.removeDeleted(hintStore.getColumnFamily(filter),Integer.MAX_VALUE);
      if (pagingFinished(hintColumnFamily,startColumn))       break;
      Collection<IColumn> keys=hintColumnFamily.getSortedColumns();
      for (      IColumn keyColumn : keys) {
        byte[] keyBytes=keyColumn.name();
        Collection<IColumn> endpoints=keyColumn.getSubColumns();
        for (        IColumn hintEndPoint : endpoints) {
          if (Arrays.equals(hintEndPoint.name(),targetEPBytes) && sendMessage(endPoint,tableName,keyBytes)) {
            if (endpoints.size() == 1)             deleteHintKey(tableName,keyColumn.name());
 else             deleteEndPoint(hintEndPoint.name(),tableName,keyColumn.name(),System.currentTimeMillis());
            break;
          }
        }
        startColumn=keyColumn.name();
      }
    }
  }
  if (logger_.isDebugEnabled())   logger_.debug("Finished hinted handoff for endpoint " + endPoint);
}
