{
  if (logger_.isDebugEnabled())   logger_.debug("Started hinted handoff for endpoint " + endpoint);
  DecoratedKey epkey=StorageService.getPartitioner().decorateKey(endpoint.getAddress());
  ColumnFamilyStore hintStore=Table.open(Table.SYSTEM_TABLE).getColumnFamilyStore(HINTS_CF);
  byte[] startColumn=ArrayUtils.EMPTY_BYTE_ARRAY;
  while (true) {
    QueryFilter filter=QueryFilter.getSliceFilter(epkey,new QueryPath(HINTS_CF),startColumn,ArrayUtils.EMPTY_BYTE_ARRAY,null,false,PAGE_SIZE);
    ColumnFamily hintColumnFamily=ColumnFamilyStore.removeDeleted(hintStore.getColumnFamily(filter),Integer.MAX_VALUE);
    if (pagingFinished(hintColumnFamily,startColumn))     break;
    Collection<IColumn> keyColumns=hintColumnFamily.getSortedColumns();
    for (    IColumn keyColumn : keyColumns) {
      startColumn=keyColumn.name();
      Collection<IColumn> tableCFs=keyColumn.getSubColumns();
      for (      IColumn tableCF : tableCFs) {
        String[] parts=getTableAndCFNames(tableCF.name());
        if (sendMessage(endpoint,parts[0],parts[1],keyColumn.name()))         deleteHintKey(endpoint.getAddress(),keyColumn.name(),tableCF.name());
      }
    }
  }
  hintStore.forceFlush();
  try {
    CompactionManager.instance.submitMajor(hintStore,0,Integer.MAX_VALUE).get();
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  if (logger_.isDebugEnabled())   logger_.debug("Finished hinted handoff for endpoint " + endpoint);
}
