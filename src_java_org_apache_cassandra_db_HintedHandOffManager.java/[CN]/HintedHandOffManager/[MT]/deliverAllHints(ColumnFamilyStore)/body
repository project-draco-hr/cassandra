{
  if (logger_.isDebugEnabled())   logger_.debug("Started deliverAllHints");
  for (  String tableName : DatabaseDescriptor.getTables()) {
    ColumnFamily hintColumnFamily=ColumnFamilyStore.removeDeleted(hintStore.getColumnFamily(new IdentityQueryFilter(tableName,new QueryPath(HINTS_CF))),Integer.MAX_VALUE);
    if (hintColumnFamily == null) {
      continue;
    }
    Collection<IColumn> keys=hintColumnFamily.getSortedColumns();
    for (    IColumn keyColumn : keys) {
      Collection<IColumn> endpoints=keyColumn.getSubColumns();
      String keyStr=new String(keyColumn.name(),"UTF-8");
      int deleted=0;
      for (      IColumn endpoint : endpoints) {
        String endpointStr=new String(endpoint.name(),"UTF-8");
        if (sendMessage(endpointStr,tableName,keyStr)) {
          deleteEndPoint(endpoint.name(),tableName,keyColumn.name(),keyColumn.timestamp());
          deleted++;
        }
      }
      if (deleted == endpoints.size()) {
        deleteHintKey(tableName,keyColumn.name());
      }
    }
  }
  hintStore.forceFlush();
  hintStore.doMajorCompaction(0);
  if (logger_.isDebugEnabled())   logger_.debug("Finished deliverAllHints");
}
