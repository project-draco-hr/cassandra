{
  if (!Gossiper.instance.isKnownEndpoint(endpoint)) {
    logger_.warn("Hints found for endpoint " + endpoint + " which is not part of the gossip network.  discarding.");
    return true;
  }
  if (!FailureDetector.instance.isAlive(endpoint)) {
    return false;
  }
  Table table=Table.open(tableName);
  RowMutation rm=new RowMutation(tableName,key);
  DecoratedKey dkey=StorageService.getPartitioner().decorateKey(key);
  for (  ColumnFamilyStore cfstore : table.getColumnFamilyStores()) {
    ColumnFamily cf=cfstore.getColumnFamily(QueryFilter.getIdentityFilter(dkey,new QueryPath(cfstore.getColumnFamilyName())));
    if (cf != null)     rm.add(cf);
  }
  Message message=rm.makeRowMutationMessage();
  InetAddress[] endpoints=new InetAddress[]{endpoint};
  AbstractReplicationStrategy rs=StorageService.instance.getReplicationStrategy(tableName);
  List<InetAddress> endpointlist=Arrays.asList(endpoints);
  Multimap<InetAddress,InetAddress> hintedEndpoints=rs.getHintedEndpoints(endpointlist);
  WriteResponseHandler responseHandler=new WriteResponseHandler(endpointlist,hintedEndpoints,ConsistencyLevel.ALL,tableName);
  MessagingService.instance.sendRR(message,endpoints,responseHandler);
  try {
    responseHandler.get();
  }
 catch (  TimeoutException e) {
    return false;
  }
  return true;
}
