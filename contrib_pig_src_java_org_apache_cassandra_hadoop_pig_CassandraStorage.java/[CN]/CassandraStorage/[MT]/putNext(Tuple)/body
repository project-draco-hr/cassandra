{
  ByteBuffer key=objToBB(t.get(0));
  DefaultDataBag pairs=(DefaultDataBag)t.get(1);
  ArrayList<Mutation> mutationList=new ArrayList<Mutation>();
  CfDef cfDef=getCfDef();
  List<AbstractType> marshallers=getDefaultMarshallers(cfDef);
  Map<ByteBuffer,AbstractType> validators=getValidatorMap(cfDef);
  try {
    for (    Tuple pair : pairs) {
      Mutation mutation=new Mutation();
      if (DataType.findType(pair.get(1)) == DataType.BAG) {
        org.apache.cassandra.hadoop.avro.SuperColumn sc=new org.apache.cassandra.hadoop.avro.SuperColumn();
        sc.name=objToBB(pair.get(0));
        ArrayList<org.apache.cassandra.hadoop.avro.Column> columns=new ArrayList<org.apache.cassandra.hadoop.avro.Column>();
        for (        Tuple subcol : (DefaultDataBag)pair.get(1)) {
          org.apache.cassandra.hadoop.avro.Column column=new org.apache.cassandra.hadoop.avro.Column();
          column.name=objToBB(subcol.get(0));
          column.value=objToBB(subcol.get(1));
          column.timestamp=System.currentTimeMillis() * 1000;
          columns.add(column);
        }
        if (columns.isEmpty()) {
          mutation.deletion=new Deletion();
          mutation.deletion.super_column=objToBB(pair.get(0));
          mutation.deletion.timestamp=System.currentTimeMillis() * 1000;
        }
 else {
          sc.columns=columns;
          mutation.column_or_supercolumn=new ColumnOrSuperColumn();
          mutation.column_or_supercolumn.super_column=sc;
        }
      }
 else {
        if (pair.get(1) == null) {
          mutation.deletion=new Deletion();
          mutation.deletion.predicate=new org.apache.cassandra.hadoop.avro.SlicePredicate();
          mutation.deletion.predicate.column_names=Arrays.asList(objToBB(pair.get(0)));
          mutation.deletion.timestamp=System.currentTimeMillis() * 1000;
        }
 else {
          org.apache.cassandra.hadoop.avro.Column column=new org.apache.cassandra.hadoop.avro.Column();
          column.name=marshallers.get(0).decompose((pair.get(0)));
          if (validators.get(column.name) == null)           if (marshallers.get(1) instanceof BytesType)           column.value=ByteBuffer.wrap(((DataByteArray)pair.get(1)).get());
 else           column.value=marshallers.get(1).decompose(pair.get(1));
 else           column.value=validators.get(column.name).decompose(pair.get(1));
          column.timestamp=System.currentTimeMillis() * 1000;
          mutation.column_or_supercolumn=new ColumnOrSuperColumn();
          mutation.column_or_supercolumn.column=column;
          mutationList.add(mutation);
        }
      }
      mutationList.add(mutation);
    }
  }
 catch (  ClassCastException e) {
    throw new IOException(e + " Output must be (key, {(column,value)...}) for ColumnFamily or (key, {supercolumn:{(column,value)...}...}) for SuperColumnFamily");
  }
  try {
    writer.write(key,mutationList);
  }
 catch (  InterruptedException e) {
    throw new IOException(e);
  }
}
