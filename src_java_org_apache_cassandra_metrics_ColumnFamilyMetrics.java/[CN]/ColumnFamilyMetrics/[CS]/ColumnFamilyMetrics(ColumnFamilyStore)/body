{
  factory=new ColumnFamilyMetricNameFactory(cfs);
  memtableColumnsCount=createColumnFamilyGauge("MemtableColumnsCount",new Gauge<Long>(){
    public Long value(){
      return cfs.getDataTracker().getMemtable().getOperations();
    }
  }
);
  memtableDataSize=createColumnFamilyGauge("MemtableDataSize",new Gauge<Long>(){
    public Long value(){
      return cfs.getDataTracker().getMemtable().getLiveSize();
    }
  }
);
  memtableSwitchCount=createColumnFamilyCounter("MemtableSwitchCount");
  estimatedRowSizeHistogram=Metrics.newGauge(factory.createMetricName("EstimatedRowSizeHistogram"),new Gauge<long[]>(){
    public long[] value(){
      long[] histogram=new long[90];
      for (      SSTableReader sstable : cfs.getSSTables()) {
        long[] rowSize=sstable.getEstimatedRowSize().getBuckets(false);
        for (int i=0; i < histogram.length; i++)         histogram[i]+=rowSize[i];
      }
      return histogram;
    }
  }
);
  estimatedColumnCountHistogram=Metrics.newGauge(factory.createMetricName("EstimatedColumnCountHistogram"),new Gauge<long[]>(){
    public long[] value(){
      long[] histogram=new long[90];
      for (      SSTableReader sstable : cfs.getSSTables()) {
        long[] columnSize=sstable.getEstimatedColumnCount().getBuckets(false);
        for (int i=0; i < histogram.length; i++)         histogram[i]+=columnSize[i];
      }
      return histogram;
    }
  }
);
  sstablesPerReadHistogram=createColumnFamilyHistogram("SSTablesPerReadHistogram",cfs.table.metric.sstablesPerReadHistogram);
  compressionRatio=createColumnFamilyGauge("CompressionRatio",new Gauge<Double>(){
    public Double value(){
      double sum=0;
      int total=0;
      for (      SSTableReader sstable : cfs.getSSTables()) {
        if (sstable.getCompressionRatio() != SSTableMetadata.NO_COMPRESSION_RATIO) {
          sum+=sstable.getCompressionRatio();
          total++;
        }
      }
      return total != 0 ? sum / total : 0;
    }
  }
,new Gauge<Double>(){
    public Double value(){
      double sum=0;
      int total=0;
      for (      Table keyspace : Table.all()) {
        for (        SSTableReader sstable : keyspace.getAllSSTables()) {
          if (sstable.getCompressionRatio() != SSTableMetadata.NO_COMPRESSION_RATIO) {
            sum+=sstable.getCompressionRatio();
            total++;
          }
        }
      }
      return total != 0 ? sum / total : 0;
    }
  }
);
  readLatency=new LatencyMetrics(factory,"Read",cfs.table.metric.readLatency,globalReadLatency);
  writeLatency=new LatencyMetrics(factory,"Write",cfs.table.metric.writeLatency,globalWriteLatency);
  pendingTasks=Metrics.newGauge(factory.createMetricName("PendingTasks"),new Gauge<Integer>(){
    public Integer value(){
      return Table.switchLock.getQueueLength();
    }
  }
);
  liveSSTableCount=createColumnFamilyGauge("LiveSSTableCount",new Gauge<Integer>(){
    public Integer value(){
      return cfs.getDataTracker().getSSTables().size();
    }
  }
);
  liveDiskSpaceUsed=createColumnFamilyCounter("LiveDiskSpaceUsed");
  totalDiskSpaceUsed=createColumnFamilyCounter("TotalDiskSpaceUsed");
  minRowSize=createColumnFamilyGauge("MinRowSize",new Gauge<Long>(){
    public Long value(){
      long min=0;
      for (      SSTableReader sstable : cfs.getSSTables()) {
        if (min == 0 || sstable.getEstimatedRowSize().min() < min)         min=sstable.getEstimatedRowSize().min();
      }
      return min;
    }
  }
,new Gauge<Long>(){
    public Long value(){
      long min=Long.MAX_VALUE;
      for (      Metric cfGauge : allColumnFamilyMetrics.get("MinRowSize")) {
        min=Math.min(min,((Gauge<? extends Number>)cfGauge).value().longValue());
      }
      return min;
    }
  }
);
  maxRowSize=createColumnFamilyGauge("MaxRowSize",new Gauge<Long>(){
    public Long value(){
      long max=0;
      for (      SSTableReader sstable : cfs.getSSTables()) {
        if (sstable.getEstimatedRowSize().max() > max)         max=sstable.getEstimatedRowSize().max();
      }
      return max;
    }
  }
,new Gauge<Long>(){
    public Long value(){
      long max=0;
      for (      Metric cfGauge : allColumnFamilyMetrics.get("MaxRowSize")) {
        max=Math.max(max,((Gauge<? extends Number>)cfGauge).value().longValue());
      }
      return max;
    }
  }
);
  meanRowSize=createColumnFamilyGauge("MeanRowSize",new Gauge<Long>(){
    public Long value(){
      long sum=0;
      long count=0;
      for (      SSTableReader sstable : cfs.getSSTables()) {
        long n=sstable.getEstimatedRowSize().count();
        sum+=sstable.getEstimatedRowSize().mean() * n;
        count+=n;
      }
      return count > 0 ? sum / count : 0;
    }
  }
,new Gauge<Long>(){
    public Long value(){
      long sum=0;
      long count=0;
      for (      Table keyspace : Table.all()) {
        for (        SSTableReader sstable : keyspace.getAllSSTables()) {
          long n=sstable.getEstimatedRowSize().count();
          sum+=sstable.getEstimatedRowSize().mean() * n;
          count+=n;
        }
      }
      return count > 0 ? sum / count : 0;
    }
  }
);
  bloomFilterFalsePositives=createColumnFamilyGauge("BloomFilterFalsePositives",new Gauge<Long>(){
    public Long value(){
      long count=0L;
      for (      SSTableReader sstable : cfs.getSSTables())       count+=sstable.getBloomFilterFalsePositiveCount();
      return count;
    }
  }
);
  recentBloomFilterFalsePositives=createColumnFamilyGauge("RecentBloomFilterFalsePositives",new Gauge<Long>(){
    public Long value(){
      long count=0L;
      for (      SSTableReader sstable : cfs.getSSTables())       count+=sstable.getRecentBloomFilterFalsePositiveCount();
      return count;
    }
  }
);
  bloomFilterFalseRatio=createColumnFamilyGauge("BloomFilterFalseRatio",new Gauge<Double>(){
    public Double value(){
      long falseCount=0L;
      long trueCount=0L;
      for (      SSTableReader sstable : cfs.getSSTables()) {
        falseCount+=sstable.getBloomFilterFalsePositiveCount();
        trueCount+=sstable.getBloomFilterTruePositiveCount();
      }
      if (falseCount == 0L && trueCount == 0L)       return 0d;
      return (double)falseCount / (trueCount + falseCount);
    }
  }
,new Gauge<Double>(){
    public Double value(){
      long falseCount=0L;
      long trueCount=0L;
      for (      Table keyspace : Table.all()) {
        for (        SSTableReader sstable : keyspace.getAllSSTables()) {
          falseCount+=sstable.getBloomFilterFalsePositiveCount();
          trueCount+=sstable.getBloomFilterTruePositiveCount();
        }
      }
      if (falseCount == 0L && trueCount == 0L)       return 0d;
      return (double)falseCount / (trueCount + falseCount);
    }
  }
);
  recentBloomFilterFalseRatio=createColumnFamilyGauge("RecentBloomFilterFalseRatio",new Gauge<Double>(){
    public Double value(){
      long falseCount=0L;
      long trueCount=0L;
      for (      SSTableReader sstable : cfs.getSSTables()) {
        falseCount+=sstable.getRecentBloomFilterFalsePositiveCount();
        trueCount+=sstable.getRecentBloomFilterTruePositiveCount();
      }
      if (falseCount == 0L && trueCount == 0L)       return 0d;
      return (double)falseCount / (trueCount + falseCount);
    }
  }
,new Gauge<Double>(){
    public Double value(){
      long falseCount=0L;
      long trueCount=0L;
      for (      Table keyspace : Table.all()) {
        for (        SSTableReader sstable : keyspace.getAllSSTables()) {
          falseCount+=sstable.getRecentBloomFilterFalsePositiveCount();
          trueCount+=sstable.getRecentBloomFilterTruePositiveCount();
        }
      }
      if (falseCount == 0L && trueCount == 0L)       return 0d;
      return (double)falseCount / (trueCount + falseCount);
    }
  }
);
  bloomFilterDiskSpaceUsed=createColumnFamilyGauge("BloomFilterDiskSpaceUsed",new Gauge<Long>(){
    public Long value(){
      long total=0;
      for (      SSTableReader sst : cfs.getSSTables())       total+=sst.getBloomFilterSerializedSize();
      return total;
    }
  }
);
  keyCacheHitRate=Metrics.newGauge(factory.createMetricName("KeyCacheHitRate"),new RatioGauge(){
    protected double getNumerator(){
      long hits=0L;
      for (      SSTableReader sstable : cfs.getSSTables())       hits+=sstable.getKeyCacheHit();
      return hits;
    }
    protected double getDenominator(){
      long requests=0L;
      for (      SSTableReader sstable : cfs.getSSTables())       requests+=sstable.getKeyCacheRequest();
      return Math.max(requests,1);
    }
  }
);
  tombstoneScannedHistogram=createColumnFamilyHistogram("TombstoneScannedHistogram",cfs.table.metric.tombstoneScannedHistogram);
  liveScannedHistogram=createColumnFamilyHistogram("LiveScannedHistogram",cfs.table.metric.liveScannedHistogram);
}
