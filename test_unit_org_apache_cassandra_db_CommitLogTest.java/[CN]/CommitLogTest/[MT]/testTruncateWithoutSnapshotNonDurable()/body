{
  CommitLog.instance.resetUnsafe();
  boolean prevAutoSnapshot=DatabaseDescriptor.isAutoSnapshot();
  DatabaseDescriptor.setAutoSnapshot(false);
  Keyspace notDurableKs=Keyspace.open("NoCommitlogSpace");
  Assert.assertFalse(notDurableKs.getMetadata().durableWrites);
  ColumnFamilyStore cfs=notDurableKs.getColumnFamilyStore("Standard1");
  CellNameType type=notDurableKs.getColumnFamilyStore("Standard1").getComparator();
  Mutation rm;
  DecoratedKey dk=Util.dk("key1");
  rm=new Mutation("NoCommitlogSpace",dk.getKey());
  rm.add("Standard1",Util.cellname("Column1"),ByteBufferUtil.bytes("abcd"),0);
  rm.apply();
  ReadCommand command=new SliceByNamesReadCommand("NoCommitlogSpace",dk.getKey(),"Standard1",System.currentTimeMillis(),new NamesQueryFilter(FBUtilities.singleton(Util.cellname("Column1"),type)));
  Row row=command.getRow(notDurableKs);
  Cell col=row.cf.getColumn(Util.cellname("Column1"));
  Assert.assertEquals(col.value(),ByteBuffer.wrap("abcd".getBytes()));
  cfs.truncateBlocking();
  DatabaseDescriptor.setAutoSnapshot(prevAutoSnapshot);
  row=command.getRow(notDurableKs);
  Assert.assertEquals(null,row.cf);
}
