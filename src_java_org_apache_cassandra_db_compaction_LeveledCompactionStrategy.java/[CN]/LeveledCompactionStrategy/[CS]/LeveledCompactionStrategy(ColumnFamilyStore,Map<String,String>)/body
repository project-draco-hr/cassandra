{
  super(cfs,options);
  int configuredMaxSSTableSize=5;
  if (options != null) {
    String value=options.containsKey(SSTABLE_SIZE_OPTION) ? options.get(SSTABLE_SIZE_OPTION) : null;
    if (null != value) {
      try {
        configuredMaxSSTableSize=Integer.parseInt(value);
      }
 catch (      NumberFormatException ex) {
        logger.warn(String.format("%s is not a parsable int (base10) for %s using default value",value,SSTABLE_SIZE_OPTION));
      }
    }
  }
  maxSSTableSize=configuredMaxSSTableSize;
  cfs.getDataTracker().subscribe(this);
  logger.info(this + " subscribed to the data tracker.");
  manifest=LeveledManifest.create(cfs,this.maxSSTableSize);
  logger.debug("Created {}",manifest);
  cfs.setMaximumCompactionThreshold(Integer.MAX_VALUE);
  cfs.setMinimumCompactionThreshold(1);
  Runnable runnable=new Runnable(){
    public void run(){
      CompactionManager.instance.submitBackground(LeveledCompactionStrategy.this.cfs);
    }
  }
;
  StorageService.optionalTasks.scheduleAtFixedRate(runnable,5 * 60,5,TimeUnit.SECONDS);
}
