{
  Map<K,V> expungedValues=new HashMap<K,V>();
synchronized (cache_) {
    Enumeration<K> e=cache_.keys();
    while (e.hasMoreElements()) {
      K key=e.nextElement();
      CacheableObject co=cache_.get(key);
      if (co != null && co.isReadyToDie(expiration_)) {
        V v=co.getValue();
        if (null != v) {
          expungedValues.put(key,v);
        }
        cache_.remove(key);
      }
    }
  }
  for (  Entry<K,V> entry : expungedValues.entrySet()) {
    K key=entry.getKey();
    V value=entry.getValue();
    ICacheExpungeHook<K,V> hook=hooks_.remove(key);
    if (hook != null) {
      hook.callMe(key,value);
    }
 else     if (globalHook_ != null) {
      globalHook_.callMe(key,value);
    }
  }
  expungedValues.clear();
}
