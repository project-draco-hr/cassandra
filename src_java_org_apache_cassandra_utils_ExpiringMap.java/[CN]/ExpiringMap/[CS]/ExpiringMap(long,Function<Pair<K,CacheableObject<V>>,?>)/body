{
  this.defaultExpiration=defaultExpiration;
  if (defaultExpiration <= 0) {
    throw new IllegalArgumentException("Argument specified must be a positive number");
  }
  Runnable reaperTask=new Runnable(){
    public void run(){
      long start=System.nanoTime();
      int n=0;
      for (      Map.Entry<K,CacheableObject<V>> entry : cache.entrySet()) {
        if (entry.getValue().isReadyToDieAt(start)) {
          cache.remove(entry.getKey());
          n++;
          if (postExpireHook != null)           postExpireHook.apply(Pair.create(entry.getKey(),entry.getValue()));
        }
      }
      logger.trace("Expired {} entries",n);
    }
  }
;
  service.scheduleWithFixedDelay(reaperTask,defaultExpiration / 2,defaultExpiration / 2,TimeUnit.MILLISECONDS);
}
