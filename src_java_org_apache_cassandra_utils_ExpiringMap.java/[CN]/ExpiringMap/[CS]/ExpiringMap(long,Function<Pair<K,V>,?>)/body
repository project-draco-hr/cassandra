{
  this.expiration=expiration;
  if (expiration <= 0) {
    throw new IllegalArgumentException("Argument specified must be a positive number");
  }
  timer=new Timer("EXPIRING-MAP-TIMER-" + (++counter),true);
  TimerTask task=new TimerTask(){
    public void run(){
      long start=System.currentTimeMillis();
      for (      Map.Entry<K,CacheableObject<V>> entry : cache.entrySet()) {
        if (entry.getValue().isReadyToDie(start)) {
          cache.remove(entry.getKey());
          if (postExpireHook != null)           postExpireHook.apply(new Pair<K,V>(entry.getKey(),entry.getValue().getValue()));
        }
      }
    }
  }
;
  timer.schedule(task,expiration / 2,expiration / 2);
}
