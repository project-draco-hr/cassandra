{
  String file=System.getProperty("storage-config") + File.separator + "log4j.properties";
  PropertyConfigurator.configure(file);
  listenPort=DatabaseDescriptor.getRpcPort();
  listenAddr=DatabaseDescriptor.getRpcAddress();
  if (listenAddr == null)   listenAddr=FBUtilities.getLocalAddress();
  Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
    public void uncaughtException(    Thread t,    Throwable e){
      logger.error("Fatal exception in thread " + t,e);
      if (e instanceof OutOfMemoryError) {
        System.exit(100);
      }
    }
  }
);
  try {
    DatabaseDescriptor.loadSchemas();
  }
 catch (  IOException e) {
    logger.error("Fatal exception during initialization",e);
    System.exit(100);
  }
  for (  String table : DatabaseDescriptor.getTables()) {
    if (logger.isDebugEnabled())     logger.debug("opening keyspace " + table);
    Table.open(table);
  }
  CommitLog.recover();
  CompactionManager.instance.checkAllColumnFamilies();
  StorageService.instance.initServer();
}
