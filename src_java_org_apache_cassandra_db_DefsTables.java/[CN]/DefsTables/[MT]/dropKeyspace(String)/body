{
  KSMetaData ksm=Schema.instance.getKSMetaData(ksName);
  String snapshotName=Keyspace.getTimestampedSnapshotName(ksName);
  CompactionManager.instance.interruptCompactionFor(ksm.cfMetaData().values(),true);
  Keyspace keyspace=Keyspace.open(ksm.name);
  List<UUID> droppedCfs=new ArrayList<>();
  for (  CFMetaData cfm : ksm.cfMetaData().values()) {
    ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(cfm.cfName);
    Schema.instance.purge(cfm);
    if (!StorageService.instance.isClientMode()) {
      if (DatabaseDescriptor.isAutoSnapshot())       cfs.snapshot(snapshotName);
      Keyspace.open(ksm.name).dropCf(cfm.cfId);
    }
    droppedCfs.add(cfm.cfId);
  }
  Keyspace.clear(ksm.name);
  Schema.instance.clearKeyspaceDefinition(ksm);
  keyspace.writeOrder.awaitNewBarrier();
  CommitLog.instance.forceRecycleAllSegments(droppedCfs);
  if (!StorageService.instance.isClientMode()) {
    MigrationManager.instance.notifyDropKeyspace(ksm);
  }
}
