def language_callback(lexer, match):
    'Parse the content of a $-string using a lexer\n\n    The lexer is chosen looking for a nearby LANGUAGE or assumed as\n    java if no LANGUAGE has been found.\n    '
    l = None
    m = language_re.match(lexer.text[max(0, (match.start() - 100)):match.start()])
    if (m is not None):
        l = lexer._get_lexer(m.group(1))
    else:
        l = lexer._get_lexer('java')
    yield (match.start(1), String, match.group(1))
    yield (match.start(2), String.Delimiter, match.group(2))
    yield (match.start(3), String, match.group(3))
    if l:
        for x in l.get_tokens_unprocessed(match.group(4)):
            yield x
    else:
        yield (match.start(4), String, match.group(4))
    yield (match.start(5), String, match.group(5))
    yield (match.start(6), String.Delimiter, match.group(6))
    yield (match.start(7), String, match.group(7))
