{
  TServer server;
  if (CassandraDaemon.SYNC.equalsIgnoreCase(serverType)) {
    server=new CustomTThreadPoolServer.Factory().buildTServer(args);
    logger.info(String.format("Using synchronous/threadpool thrift server on %s : %s",args.addr.getHostName(),args.addr.getPort()));
  }
 else   if (CassandraDaemon.ASYNC.equalsIgnoreCase(serverType)) {
    server=new CustomTNonBlockingServer.Factory().buildTServer(args);
    logger.info(String.format("Using non-blocking/asynchronous thrift server on %s : %s",args.addr.getHostName(),args.addr.getPort()));
  }
 else   if (CassandraDaemon.HSHA.equalsIgnoreCase(serverType)) {
    server=new CustomTHsHaServer.Factory().buildTServer(args);
    logger.info(String.format("Using custom half-sync/half-async thrift server on %s : %s",args.addr.getHostName(),args.addr.getPort()));
  }
 else {
    TServerFactory serverFactory;
    try {
      serverFactory=(TServerFactory)Class.forName(serverType).newInstance();
    }
 catch (    Exception e) {
      throw new RuntimeException("Failed to instantiate server factory:" + serverType,e);
    }
    server=serverFactory.buildTServer(args);
    logger.info(String.format("Using custom thrift server %s on %s : %s",server.getClass().getName(),args.addr.getHostName(),args.addr.getPort()));
  }
  return server;
}
