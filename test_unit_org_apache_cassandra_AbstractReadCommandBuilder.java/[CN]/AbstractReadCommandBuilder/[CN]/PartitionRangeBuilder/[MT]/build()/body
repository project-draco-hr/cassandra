{
  PartitionPosition start=startKey;
  if (start == null) {
    start=StorageService.getPartitioner().getMinimumToken().maxKeyBound();
    startInclusive=false;
  }
  PartitionPosition end=endKey;
  if (end == null) {
    end=StorageService.getPartitioner().getMinimumToken().maxKeyBound();
    endInclusive=true;
  }
  AbstractBounds<PartitionPosition> bounds;
  if (startInclusive && endInclusive)   bounds=new Bounds<PartitionPosition>(start,end);
 else   if (startInclusive && !endInclusive)   bounds=new IncludingExcludingBounds<PartitionPosition>(start,end);
 else   if (!startInclusive && endInclusive)   bounds=new Range<PartitionPosition>(start,end);
 else   bounds=new ExcludingBounds<PartitionPosition>(start,end);
  return new PartitionRangeReadCommand(cfs.metadata,nowInSeconds,makeColumnFilter(),filter,makeLimits(),new DataRange(bounds,makeFilter()));
}
