{
  if (hasProperty(KW_COMMENT))   cfm.comment(getString(KW_COMMENT,""));
  cfm.readRepairChance(getDouble(KW_READREPAIRCHANCE,cfm.getReadRepairChance()));
  cfm.dcLocalReadRepairChance(getDouble(KW_DCLOCALREADREPAIRCHANCE,cfm.getDcLocalReadRepair()));
  cfm.gcGraceSeconds(getInt(KW_GCGRACESECONDS,cfm.getGcGraceSeconds()));
  cfm.replicateOnWrite(getBoolean(KW_REPLICATEONWRITE,cfm.getReplicateOnWrite()));
  cfm.minCompactionThreshold(toInt(KW_MINCOMPACTIONTHRESHOLD,getCompactionOptions().get(KW_MINCOMPACTIONTHRESHOLD),cfm.getMinCompactionThreshold()));
  cfm.maxCompactionThreshold(toInt(KW_MAXCOMPACTIONTHRESHOLD,getCompactionOptions().get(KW_MAXCOMPACTIONTHRESHOLD),cfm.getMaxCompactionThreshold()));
  cfm.caching(CFMetaData.Caching.fromString(getString(KW_CACHING,cfm.getCaching().toString())));
  cfm.bloomFilterFpChance(getDouble(KW_BF_FP_CHANCE,cfm.getBloomFilterFpChance()));
  if (compactionStrategyClass != null) {
    cfm.compactionStrategyClass(compactionStrategyClass);
    cfm.compactionStrategyOptions(new HashMap<String,String>(getCompactionOptions()));
  }
  if (!getCompressionOptions().isEmpty())   cfm.compressionParameters(CompressionParameters.create(getCompressionOptions()));
  try {
    ConsistencyLevel readCL=getConsistencyLevel(KW_DEFAULT_R_CONSISTENCY);
    if (readCL != null) {
      readCL.validateForRead(cfm.ksName);
      cfm.defaultReadCL(readCL);
    }
    ConsistencyLevel writeCL=getConsistencyLevel(KW_DEFAULT_W_CONSISTENCY);
    if (writeCL != null) {
      writeCL.validateForWrite(cfm.ksName);
      cfm.defaultWriteCL(writeCL);
    }
  }
 catch (  InvalidRequestException e) {
    throw new ConfigurationException(e.getMessage(),e.getCause());
  }
}
