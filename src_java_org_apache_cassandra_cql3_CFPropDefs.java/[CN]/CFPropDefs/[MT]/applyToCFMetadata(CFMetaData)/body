{
  if (hasProperty(KW_COMMENT))   cfm.comment(get(KW_COMMENT));
  cfm.readRepairChance(getDouble(KW_READREPAIRCHANCE,cfm.getReadRepairChance()));
  cfm.dcLocalReadRepairChance(getDouble(KW_DCLOCALREADREPAIRCHANCE,cfm.getDcLocalReadRepair()));
  cfm.gcGraceSeconds(getInt(KW_GCGRACESECONDS,cfm.getGcGraceSeconds()));
  cfm.replicateOnWrite(getBoolean(KW_REPLICATEONWRITE,cfm.getReplicateOnWrite()));
  cfm.minCompactionThreshold(toInt(KW_MINCOMPACTIONTHRESHOLD,compactionStrategyOptions.get(KW_MINCOMPACTIONTHRESHOLD),cfm.getMinCompactionThreshold()));
  cfm.maxCompactionThreshold(toInt(KW_MAXCOMPACTIONTHRESHOLD,compactionStrategyOptions.get(KW_MAXCOMPACTIONTHRESHOLD),cfm.getMaxCompactionThreshold()));
  cfm.caching(CFMetaData.Caching.fromString(getString(KW_CACHING,cfm.getCaching().toString())));
  cfm.bloomFilterFpChance(getDouble(KW_BF_FP_CHANCE,cfm.getBloomFilterFpChance()));
  if (compactionStrategyClass != null)   cfm.compactionStrategyClass(compactionStrategyClass);
  if (!compactionStrategyOptions.isEmpty())   cfm.compactionStrategyOptions(new HashMap<String,String>(compactionStrategyOptions));
  if (!compressionParameters.isEmpty())   cfm.compressionParameters(CompressionParameters.create(compressionParameters));
}
