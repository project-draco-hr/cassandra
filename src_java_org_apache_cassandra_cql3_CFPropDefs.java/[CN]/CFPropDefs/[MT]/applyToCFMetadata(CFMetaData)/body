{
  if (hasProperty(KW_COMMENT))   cfm.comment(getString(KW_COMMENT,""));
  cfm.readRepairChance(getDouble(KW_READREPAIRCHANCE,cfm.getReadRepairChance()));
  cfm.dcLocalReadRepairChance(getDouble(KW_DCLOCALREADREPAIRCHANCE,cfm.getDcLocalReadRepair()));
  cfm.gcGraceSeconds(getInt(KW_GCGRACESECONDS,cfm.getGcGraceSeconds()));
  cfm.replicateOnWrite(getBoolean(KW_REPLICATEONWRITE,cfm.getReplicateOnWrite()));
  int minCompactionThreshold=toInt(KW_MINCOMPACTIONTHRESHOLD,getCompactionOptions().get(KW_MINCOMPACTIONTHRESHOLD),cfm.getMinCompactionThreshold());
  int maxCompactionThreshold=toInt(KW_MAXCOMPACTIONTHRESHOLD,getCompactionOptions().get(KW_MAXCOMPACTIONTHRESHOLD),cfm.getMaxCompactionThreshold());
  if (minCompactionThreshold <= 0 || maxCompactionThreshold <= 0)   throw new ConfigurationException("Disabling compaction by setting compaction thresholds to 0 has been deprecated, set the compaction option 'enabled' to false instead.");
  cfm.minCompactionThreshold(minCompactionThreshold);
  cfm.maxCompactionThreshold(maxCompactionThreshold);
  cfm.caching(CFMetaData.Caching.fromString(getString(KW_CACHING,cfm.getCaching().toString())));
  cfm.defaultTimeToLive(getInt(KW_DEFAULT_TIME_TO_LIVE,cfm.getDefaultTimeToLive()));
  cfm.speculativeRetry(CFMetaData.SpeculativeRetry.fromString(getString(KW_SPECULATIVE_RETRY,cfm.getSpeculativeRetry().toString())));
  cfm.memtableFlushPeriod(getInt(KW_MEMTABLE_FLUSH_PERIOD,cfm.getMemtableFlushPeriod()));
  cfm.populateIoCacheOnFlush(getBoolean(KW_POPULATE_IO_CACHE_ON_FLUSH,cfm.populateIoCacheOnFlush()));
  cfm.indexInterval(getInt(KW_INDEX_INTERVAL,cfm.getIndexInterval()));
  if (compactionStrategyClass != null) {
    cfm.compactionStrategyClass(compactionStrategyClass);
    cfm.compactionStrategyOptions(new HashMap<String,String>(getCompactionOptions()));
  }
  cfm.bloomFilterFpChance(getDouble(KW_BF_FP_CHANCE,cfm.getBloomFilterFpChance()));
  if (!getCompressionOptions().isEmpty())   cfm.compressionParameters(CompressionParameters.create(getCompressionOptions()));
}
