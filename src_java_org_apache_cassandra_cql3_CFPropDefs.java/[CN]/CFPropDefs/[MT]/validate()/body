{
  validate(keywords,obsoleteKeywords);
  Map<String,String> compactionOptions=getCompactionOptions();
  if (!compactionOptions.isEmpty()) {
    String strategy=compactionOptions.get(COMPACTION_STRATEGY_CLASS_KEY);
    if (strategy == null)     throw new ConfigurationException("Missing sub-option '" + COMPACTION_STRATEGY_CLASS_KEY + "' for the '"+ KW_COMPACTION+ "' option.");
    compactionStrategyClass=CFMetaData.createCompactionStrategy(strategy);
    compactionOptions.remove(COMPACTION_STRATEGY_CLASS_KEY);
    CFMetaData.validateCompactionOptions(compactionStrategyClass,compactionOptions);
  }
  Integer defaultTimeToLive=getInt(KW_DEFAULT_TIME_TO_LIVE,null);
  if (defaultTimeToLive != null) {
    if (defaultTimeToLive < 0)     throw new ConfigurationException(String.format("%s cannot be smaller than %s, (default %s)",KW_DEFAULT_TIME_TO_LIVE,0,CFMetaData.DEFAULT_DEFAULT_TIME_TO_LIVE));
  }
}
