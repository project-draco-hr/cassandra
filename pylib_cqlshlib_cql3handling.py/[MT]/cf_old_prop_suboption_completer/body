def cf_old_prop_suboption_completer(ctxt, cass):
    opt = ctxt.get_binding('optname')
    if (opt == 'compaction_strategy_options'):
        prevopts = ctxt.get_binding('propname', ())
        prevvals = ctxt.get_binding('optval', ())
        for (prevopt, prevval) in zip(prevopts, prevvals):
            if (prevopt == 'compaction_strategy_class'):
                csc = dequote_value(prevval)
                break
        else:
            layout = get_cf_layout(ctxt, cass)
            try:
                csc = layout.compaction_strategy
            except Exception:
                csc = ''
        csc = csc.split('.')[(-1)]
        if (csc == 'SizeTieredCompactionStrategy'):
            return ['min_sstable_size']
        elif (csc == 'LeveledCompactionStrategy'):
            return ['sstable_size_in_mb']
    for (optname, _, subopts) in CqlRuleSet.columnfamily_layout_map_options:
        if (opt == optname):
            return subopts
    return ()
