@completer_for('propertyValue', 'ender')
def keyspace_properties_map_ender_completer(ctxt, cass):
    optname = ctxt.get_binding('propname')[(-1)]
    if (optname != 'replication'):
        return [',']
    keysseen = map(dequote_value, ctxt.get_binding('propmapkey', ()))
    valsseen = map(dequote_value, ctxt.get_binding('propmapval', ()))
    for (k, v) in zip(keysseen, valsseen):
        if (k == 'class'):
            repclass = v
            break
    else:
        return [',']
    if (repclass in CqlRuleSet.replication_factor_strategies):
        opts = set(('replication_factor',))
        if ('replication_factor' not in keysseen):
            return [',']
    if ((repclass == 'NetworkTopologyStrategy') and (len(keysseen) == 1)):
        return [',']
    return ['}']
