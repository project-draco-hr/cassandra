def cf_new_prop_val_completer(ctxt, cass):
    exist_opts = ctxt.get_binding('propname')
    this_opt = exist_opts[(-1)]
    if (this_opt == 'compression'):
        return ["{'sstable_compression': '"]
    if (this_opt == 'compaction'):
        return ["{'class': '"]
    if any(((this_opt == opt[0]) for opt in CqlRuleSet.obsolete_cf_options)):
        return ["'<obsolete_option>'"]
    if (this_opt in ('read_repair_chance', 'bloom_filter_fp_chance', 'dclocal_read_repair_chance')):
        return [Hint('<float_between_0_and_1>')]
    if (this_opt in ('replicate_on_write', 'populate_io_cache_on_flush')):
        return ["'yes'", "'no'"]
    if (this_opt in ('min_compaction_threshold', 'max_compaction_threshold', 'gc_grace_seconds')):
        return [Hint('<integer>')]
    if (this_opt == 'default_read_consistency'):
        return [cl for cl in CqlRuleSet.consistency_levels if (cl != 'ANY')]
    if (this_opt == 'default_write_consistency'):
        return CqlRuleSet.consistency_levels
    return [Hint('<option_value>')]
