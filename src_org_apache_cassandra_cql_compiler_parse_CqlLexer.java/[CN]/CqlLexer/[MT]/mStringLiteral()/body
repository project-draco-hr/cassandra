{
  try {
    int _type=StringLiteral;
{
      match('\'');
      loop2:       do {
        int alt2=2;
        int LA2_0=input.LA(1);
        if (((LA2_0 >= '\u0000' && LA2_0 <= '&') || (LA2_0 >= '(' && LA2_0 <= '\uFFFE'))) {
          alt2=1;
        }
switch (alt2) {
case 1:
{
            if ((input.LA(1) >= '\u0000' && input.LA(1) <= '&') || (input.LA(1) >= '(' && input.LA(1) <= '\uFFFE')) {
              input.consume();
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recover(mse);
              throw mse;
            }
          }
        break;
default :
      break loop2;
  }
}
 while (true);
match('\'');
loop4: do {
  int alt4=2;
  int LA4_0=input.LA(1);
  if ((LA4_0 == '\'')) {
    alt4=1;
  }
switch (alt4) {
case 1:
{
      match('\'');
      loop3:       do {
        int alt3=2;
        int LA3_0=input.LA(1);
        if (((LA3_0 >= '\u0000' && LA3_0 <= '&') || (LA3_0 >= '(' && LA3_0 <= '\uFFFE'))) {
          alt3=1;
        }
switch (alt3) {
case 1:
{
            if ((input.LA(1) >= '\u0000' && input.LA(1) <= '&') || (input.LA(1) >= '(' && input.LA(1) <= '\uFFFE')) {
              input.consume();
            }
 else {
              MismatchedSetException mse=new MismatchedSetException(null,input);
              recover(mse);
              throw mse;
            }
          }
        break;
default :
      break loop3;
  }
}
 while (true);
match('\'');
}
break;
default :
break loop4;
}
}
 while (true);
}
this.type=_type;
}
  finally {
}
}
