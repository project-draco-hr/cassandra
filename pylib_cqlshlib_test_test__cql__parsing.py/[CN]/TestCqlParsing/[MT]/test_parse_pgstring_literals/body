def test_parse_pgstring_literals(self):
    for n in ['$$eggs$$', '$$Sausage 1$$', '$$spam\nspam\n\tsausage$$', '$$$$']:
        self.assertSequenceEqual(tokens_with_types(CqlRuleSet.lex(n)), [(n, 'pgStringLiteral')])
    self.assertSequenceEqual(tokens_with_types(CqlRuleSet.lex('$$eggs$$')), [('$$eggs$$', 'pgStringLiteral')])
    tokens = CqlRuleSet.lex('$$spam\nspam\n\tsausage$$')
    tokens = CqlRuleSet.cql_massage_tokens(tokens)
    self.assertEqual(tokens[0][0], 'pgStringLiteral')
    tokens = CqlRuleSet.lex('$$spam\nspam\n')
    tokens = CqlRuleSet.cql_massage_tokens(tokens)
    self.assertEqual(tokens[0][0], 'unclosedPgString')
    tokens = CqlRuleSet.lex('$$foo bar$$ $$spam\nspam\n')
    tokens = CqlRuleSet.cql_massage_tokens(tokens)
    self.assertEqual(tokens[0][0], 'pgStringLiteral')
    self.assertEqual(tokens[1][0], 'unclosedPgString')
