def test_parse_insert(self):
    parsed = parse_cqlsh_statements('INSERT INTO mytable (x) VALUES (2);')
    self.assertSequenceEqual(tokens_with_types(parsed), [('INSERT', 'reserved_identifier'), ('INTO', 'reserved_identifier'), ('mytable', 'identifier'), ('(', 'op'), ('x', 'identifier'), (')', 'op'), ('VALUES', 'identifier'), ('(', 'op'), ('2', 'wholenumber'), (')', 'op'), (';', 'endtoken')])
    parsed = parse_cqlsh_statements("INSERT INTO mytable (x, y) VALUES (2, 'eggs');")
    self.assertSequenceEqual(tokens_with_types(parsed), [('INSERT', 'reserved_identifier'), ('INTO', 'reserved_identifier'), ('mytable', 'identifier'), ('(', 'op'), ('x', 'identifier'), (',', 'op'), ('y', 'identifier'), (')', 'op'), ('VALUES', 'identifier'), ('(', 'op'), ('2', 'wholenumber'), (',', 'op'), ("'eggs'", 'quotedStringLiteral'), (')', 'op'), (';', 'endtoken')])
    parsed = parse_cqlsh_statements("INSERT INTO mytable (x, y) VALUES (2, 'eggs');")
    self.assertSequenceEqual(tokens_with_types(parsed), [('INSERT', 'reserved_identifier'), ('INTO', 'reserved_identifier'), ('mytable', 'identifier'), ('(', 'op'), ('x', 'identifier'), (',', 'op'), ('y', 'identifier'), (')', 'op'), ('VALUES', 'identifier'), ('(', 'op'), ('2', 'wholenumber'), (',', 'op'), ("'eggs'", 'quotedStringLiteral'), (')', 'op'), (';', 'endtoken')])
    parsed = parse_cqlsh_statements('INSERT INTO mytable (ids) VALUES (7ee251da-af52-49a4-97f4-3f07e406c7a7) USING TTL 86400;')
    self.assertSequenceEqual(tokens_with_types(parsed), [('INSERT', 'reserved_identifier'), ('INTO', 'reserved_identifier'), ('mytable', 'identifier'), ('(', 'op'), ('ids', 'identifier'), (')', 'op'), ('VALUES', 'identifier'), ('(', 'op'), ('7ee251da-af52-49a4-97f4-3f07e406c7a7', 'uuid'), (')', 'op'), ('USING', 'reserved_identifier'), ('TTL', 'identifier'), ('86400', 'wholenumber'), (';', 'endtoken')])
    parsed = parse_cqlsh_statements("INSERT INTO test_table (username) VALUES ('Albert') USING TIMESTAMP 1240003134 AND TTL 600;")
    self.assertSequenceEqual(tokens_with_types(parsed), [('INSERT', 'reserved_identifier'), ('INTO', 'reserved_identifier'), ('test_table', 'identifier'), ('(', 'op'), ('username', 'identifier'), (')', 'op'), ('VALUES', 'identifier'), ('(', 'op'), ("'Albert'", 'quotedStringLiteral'), (')', 'op'), ('USING', 'reserved_identifier'), ('TIMESTAMP', 'identifier'), ('1240003134', 'wholenumber'), ('AND', 'reserved_identifier'), ('TTL', 'identifier'), ('600', 'wholenumber'), (';', 'endtoken')])
