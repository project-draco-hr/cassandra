{
  createTable("CREATE TABLE %s (k frozen<map<set<int>, list<int>>> PRIMARY KEY, v int)");
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",map(),1);
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",map(set(),list(1,2,3)),0);
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",map(set(1,2,3),list(1,2,3)),1);
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",map(set(4,5,6),list(1,2,3)),0);
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",map(set(7,8,9),list(1,2,3)),0);
  execute("UPDATE %s SET v=? WHERE k=?",0,map());
  execute("UPDATE %s SET v=? WHERE k=?",0,map(set(1,2,3),list(1,2,3)));
  assertRows(execute("SELECT * FROM %s"),row(map(),0),row(map(set(),list(1,2,3)),0),row(map(set(1,2,3),list(1,2,3)),0),row(map(set(4,5,6),list(1,2,3)),0),row(map(set(7,8,9),list(1,2,3)),0));
  assertRows(execute("SELECT k FROM %s"),row(map()),row(map(set(),list(1,2,3))),row(map(set(1,2,3),list(1,2,3))),row(map(set(4,5,6),list(1,2,3))),row(map(set(7,8,9),list(1,2,3))));
  assertRows(execute("SELECT * FROM %s LIMIT 3"),row(map(),0),row(map(set(),list(1,2,3)),0),row(map(set(1,2,3),list(1,2,3)),0));
  assertRows(execute("SELECT * FROM %s WHERE k=?",map(set(4,5,6),list(1,2,3))),row(map(set(4,5,6),list(1,2,3)),0));
  assertRows(execute("SELECT * FROM %s WHERE k=?",map()),row(map(),0));
  assertRows(execute("SELECT * FROM %s WHERE k=?",map(set(),list(1,2,3))),row(map(set(),list(1,2,3)),0));
  assertRows(execute("SELECT * FROM %s WHERE k IN ?",list(map(set(4,5,6),list(1,2,3)),map(),map(set(),list(1,2,3)))),row(map(set(4,5,6),list(1,2,3)),0),row(map(),0),row(map(set(),list(1,2,3)),0));
  assertRows(execute("SELECT * FROM %s WHERE token(k) >= token(?)",map(set(4,5,6),list(1,2,3))),row(map(set(4,5,6),list(1,2,3)),0),row(map(set(7,8,9),list(1,2,3)),0));
  execute("DELETE FROM %s WHERE k=?",map());
  execute("DELETE FROM %s WHERE k=?",map(set(),list(1,2,3)));
  execute("DELETE FROM %s WHERE k=?",map(set(4,5,6),list(1,2,3)));
  assertRows(execute("SELECT * FROM %s"),row(map(set(1,2,3),list(1,2,3)),0),row(map(set(7,8,9),list(1,2,3)),0));
}
