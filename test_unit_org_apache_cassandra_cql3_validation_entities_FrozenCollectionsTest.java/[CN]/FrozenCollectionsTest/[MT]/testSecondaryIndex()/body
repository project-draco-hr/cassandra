{
  createTable("CREATE TABLE %s (a frozen<map<int, text>> PRIMARY KEY, b frozen<map<int, text>>)");
  assertInvalidIndexCreationWithMessage("CREATE INDEX ON %s (full(a))","Cannot create secondary index on partition key column");
  assertInvalidIndexCreationWithMessage("CREATE INDEX ON %s (keys(a))","Cannot create secondary index on partition key column");
  assertInvalidIndexCreationWithMessage("CREATE INDEX ON %s (keys(b))","Cannot create keys() index on frozen column b. " + "Frozen collections only support full() indexes");
  createTable("CREATE TABLE %s (a int, b frozen<list<int>>, c frozen<set<int>>, d frozen<map<int, text>>, PRIMARY KEY (a, b))");
  createIndex("CREATE INDEX ON %s (full(b))");
  createIndex("CREATE INDEX ON %s (full(c))");
  createIndex("CREATE INDEX ON %s (full(d))");
  execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",0,list(1,2,3),set(1,2,3),map(1,"a"));
  execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",0,list(4,5,6),set(1,2,3),map(1,"a"));
  execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",1,list(1,2,3),set(4,5,6),map(2,"b"));
  execute("INSERT INTO %s (a, b, c, d) VALUES (?, ?, ?, ?)",1,list(4,5,6),set(4,5,6),map(2,"b"));
  assertInvalidMessage("Cannot use CONTAINS KEY on non-map column","SELECT * FROM %s WHERE b CONTAINS KEY ?",1);
  assertInvalidMessage("Cannot use CONTAINS KEY on non-map column","SELECT * FROM %s WHERE b CONTAINS KEY ? ALLOW FILTERING",1);
  assertInvalidMessage("Cannot use CONTAINS KEY on non-map column","SELECT * FROM %s WHERE c CONTAINS KEY ?",1);
  assertInvalidMessage("Cannot restrict clustering columns by a CONTAINS relation without a secondary index","SELECT * FROM %s WHERE b CONTAINS ?",1);
  assertInvalidMessage("Cannot restrict clustering columns by a CONTAINS relation without a secondary index","SELECT * FROM %s WHERE b CONTAINS ? ALLOW FILTERING",1);
  assertInvalidMessage(StatementRestrictions.REQUIRES_ALLOW_FILTERING_MESSAGE,"SELECT * FROM %s WHERE d CONTAINS KEY ?",1);
  assertInvalidMessage("Cannot restrict clustering columns by a CONTAINS relation without a secondary index","SELECT * FROM %s WHERE b CONTAINS ? AND d CONTAINS KEY ? ALLOW FILTERING",1,1);
  assertRows(execute("SELECT * FROM %s WHERE b=?",list(1,2,3)),row(0,list(1,2,3),set(1,2,3),map(1,"a")),row(1,list(1,2,3),set(4,5,6),map(2,"b")));
  assertEmpty(execute("SELECT * FROM %s WHERE b=?",list(-1)));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE b=? AND c=?",list(1,2,3),set(4,5,6));
  assertRows(execute("SELECT * FROM %s WHERE b=? AND c=? ALLOW FILTERING",list(1,2,3),set(4,5,6)),row(1,list(1,2,3),set(4,5,6),map(2,"b")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE b=? AND c CONTAINS ?",list(1,2,3),5);
  assertRows(execute("SELECT * FROM %s WHERE b=? AND c CONTAINS ? ALLOW FILTERING",list(1,2,3),5),row(1,list(1,2,3),set(4,5,6),map(2,"b")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE b=? AND d=?",list(1,2,3),map(1,"a"));
  assertRows(execute("SELECT * FROM %s WHERE b=? AND d=? ALLOW FILTERING",list(1,2,3),map(1,"a")),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE b=? AND d CONTAINS ?",list(1,2,3),"a");
  assertRows(execute("SELECT * FROM %s WHERE b=? AND d CONTAINS ? ALLOW FILTERING",list(1,2,3),"a"),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE b=? AND d CONTAINS KEY ?",list(1,2,3),1);
  assertRows(execute("SELECT * FROM %s WHERE b=? AND d CONTAINS KEY ? ALLOW FILTERING",list(1,2,3),1),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertRows(execute("SELECT * FROM %s WHERE c=?",set(1,2,3)),row(0,list(1,2,3),set(1,2,3),map(1,"a")),row(0,list(4,5,6),set(1,2,3),map(1,"a")));
  assertRows(execute("SELECT * FROM %s WHERE c=?",set(2,1,3)),row(0,list(1,2,3),set(1,2,3),map(1,"a")),row(0,list(4,5,6),set(1,2,3),map(1,"a")));
  assertEmpty(execute("SELECT * FROM %s WHERE c=?",set(-1)));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE c=? AND b=?",set(1,2,3),list(1,2,3));
  assertRows(execute("SELECT * FROM %s WHERE c=? AND b=? ALLOW FILTERING",set(1,2,3),list(1,2,3)),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE c=? AND b CONTAINS ?",set(1,2,3),1);
  assertRows(execute("SELECT * FROM %s WHERE c=? AND b CONTAINS ? ALLOW FILTERING",set(1,2,3),1),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE c=? AND d = ?",set(1,2,3),map(1,"a"));
  assertRows(execute("SELECT * FROM %s WHERE c=? AND d = ? ALLOW FILTERING",set(1,2,3),map(1,"a")),row(0,list(1,2,3),set(1,2,3),map(1,"a")),row(0,list(4,5,6),set(1,2,3),map(1,"a")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE c=? AND d CONTAINS ?",set(1,2,3),"a");
  assertRows(execute("SELECT * FROM %s WHERE c=? AND d CONTAINS ? ALLOW FILTERING",set(1,2,3),"a"),row(0,list(1,2,3),set(1,2,3),map(1,"a")),row(0,list(4,5,6),set(1,2,3),map(1,"a")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE c=? AND d CONTAINS KEY ?",set(1,2,3),1);
  assertRows(execute("SELECT * FROM %s WHERE c=? AND d CONTAINS KEY ? ALLOW FILTERING",set(1,2,3),1),row(0,list(1,2,3),set(1,2,3),map(1,"a")),row(0,list(4,5,6),set(1,2,3),map(1,"a")));
  assertRows(execute("SELECT * FROM %s WHERE d=?",map(1,"a")),row(0,list(1,2,3),set(1,2,3),map(1,"a")),row(0,list(4,5,6),set(1,2,3),map(1,"a")));
  assertRows(execute("SELECT * FROM %s WHERE d=?",map(2,"b")),row(1,list(1,2,3),set(4,5,6),map(2,"b")),row(1,list(4,5,6),set(4,5,6),map(2,"b")));
  assertEmpty(execute("SELECT * FROM %s WHERE d=?",map(3,"c")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE d=? AND c=?",map(1,"a"),set(1,2,3));
  assertRows(execute("SELECT * FROM %s WHERE d=? AND b=? ALLOW FILTERING",map(1,"a"),list(1,2,3)),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE d=? AND b CONTAINS ?",map(1,"a"),3);
  assertRows(execute("SELECT * FROM %s WHERE d=? AND b CONTAINS ? ALLOW FILTERING",map(1,"a"),3),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertInvalidMessage("ALLOW FILTERING","SELECT * FROM %s WHERE d=? AND b=? AND c=?",map(1,"a"),list(1,2,3),set(1,2,3));
  assertRows(execute("SELECT * FROM %s WHERE d=? AND b=? AND c=? ALLOW FILTERING",map(1,"a"),list(1,2,3),set(1,2,3)),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertRows(execute("SELECT * FROM %s WHERE d=? AND b CONTAINS ? AND c CONTAINS ? ALLOW FILTERING",map(1,"a"),2,2),row(0,list(1,2,3),set(1,2,3),map(1,"a")));
  assertRows(execute("SELECT * FROM %s WHERE d CONTAINS KEY ? ALLOW FILTERING",1),row(0,list(1,2,3),set(1,2,3),map(1,"a")),row(0,list(4,5,6),set(1,2,3),map(1,"a")));
  execute("DELETE d FROM %s WHERE a=? AND b=?",0,list(1,2,3));
  assertRows(execute("SELECT * FROM %s WHERE d=?",map(1,"a")),row(0,list(4,5,6),set(1,2,3),map(1,"a")));
}
