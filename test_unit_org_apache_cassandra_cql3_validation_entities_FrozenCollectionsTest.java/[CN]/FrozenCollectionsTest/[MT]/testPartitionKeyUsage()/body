{
  createTable("CREATE TABLE %s (k frozen<set<int>> PRIMARY KEY, v int)");
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",set(),1);
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",set(1,2,3),1);
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",set(4,5,6),0);
  execute("INSERT INTO %s (k, v) VALUES (?, ?)",set(7,8,9),0);
  execute("UPDATE %s SET v=? WHERE k=?",0,set());
  execute("UPDATE %s SET v=? WHERE k=?",0,set(1,2,3));
  assertRows(execute("SELECT * FROM %s"),row(set(),0),row(set(1,2,3),0),row(set(4,5,6),0),row(set(7,8,9),0));
  assertRows(execute("SELECT k FROM %s"),row(set()),row(set(1,2,3)),row(set(4,5,6)),row(set(7,8,9)));
  assertRows(execute("SELECT * FROM %s LIMIT 2"),row(set(),0),row(set(1,2,3),0));
  assertRows(execute("SELECT * FROM %s WHERE k=?",set(4,5,6)),row(set(4,5,6),0));
  assertRows(execute("SELECT * FROM %s WHERE k=?",set()),row(set(),0));
  assertRows(execute("SELECT * FROM %s WHERE k IN ?",list(set(4,5,6),set())),row(set(),0),row(set(4,5,6),0));
  assertRows(execute("SELECT * FROM %s WHERE token(k) >= token(?)",set(4,5,6)),row(set(4,5,6),0),row(set(7,8,9),0));
  assertInvalid("INSERT INTO %s (k, v) VALUES (null, 0)");
  execute("DELETE FROM %s WHERE k=?",set());
  execute("DELETE FROM %s WHERE k=?",set(4,5,6));
  assertRows(execute("SELECT * FROM %s"),row(set(1,2,3),0),row(set(7,8,9),0));
}
