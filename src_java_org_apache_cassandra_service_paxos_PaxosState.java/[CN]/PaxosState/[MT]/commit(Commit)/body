{
  long start=System.nanoTime();
  try {
    if (UUIDGen.unixTimestamp(proposal.ballot) >= SystemKeyspace.getTruncatedAt(proposal.update.metadata().cfId)) {
      Tracing.trace("Committing proposal {}",proposal);
      Mutation mutation=proposal.makeMutation();
      try {
        Uninterruptibles.getUninterruptibly(Keyspace.open(mutation.getKeyspaceName()).apply(mutation,true));
      }
 catch (      ExecutionException e) {
        throw Throwables.propagate(e.getCause());
      }
    }
 else {
      Tracing.trace("Not committing proposal {} as ballot timestamp predates last truncation time",proposal);
    }
    SystemKeyspace.savePaxosCommit(proposal);
  }
  finally {
    Keyspace.open(proposal.update.metadata().ksName).getColumnFamilyStore(proposal.update.metadata().cfId).metric.casCommit.addNano(System.nanoTime() - start);
  }
}
