{
  CliParser.columnName_return retval=new CliParser.columnName_return();
  retval.start=input.LT(1);
  CommonTree root_0=null;
  Token Identifier237=null;
  CommonTree Identifier237_tree=null;
  try {
{
      root_0=(CommonTree)adaptor.nil();
      Identifier237=(Token)match(input,Identifier,FOLLOW_Identifier_in_columnName3224);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        Identifier237_tree=(CommonTree)adaptor.create(Identifier237);
        adaptor.addChild(root_0,Identifier237_tree);
      }
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(CommonTree)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(CommonTree)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
