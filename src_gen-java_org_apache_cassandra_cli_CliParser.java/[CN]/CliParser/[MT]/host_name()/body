{
  CliParser.host_name_return retval=new CliParser.host_name_return();
  retval.start=input.LT(1);
  CommonTree root_0=null;
  Token Identifier274=null;
  Token char_literal275=null;
  Token Identifier276=null;
  CommonTree Identifier274_tree=null;
  CommonTree char_literal275_tree=null;
  CommonTree Identifier276_tree=null;
  try {
{
      root_0=(CommonTree)adaptor.nil();
      Identifier274=(Token)match(input,Identifier,FOLLOW_Identifier_in_host_name3655);
      if (state.failed)       return retval;
      if (state.backtracking == 0) {
        Identifier274_tree=(CommonTree)adaptor.create(Identifier274);
        adaptor.addChild(root_0,Identifier274_tree);
      }
      loop38:       do {
        int alt38=2;
        int LA38_0=input.LA(1);
        if ((LA38_0 == 112)) {
          alt38=1;
        }
switch (alt38) {
case 1:
{
            char_literal275=(Token)match(input,112,FOLLOW_112_in_host_name3658);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              char_literal275_tree=(CommonTree)adaptor.create(char_literal275);
              adaptor.addChild(root_0,char_literal275_tree);
            }
            Identifier276=(Token)match(input,Identifier,FOLLOW_Identifier_in_host_name3660);
            if (state.failed)             return retval;
            if (state.backtracking == 0) {
              Identifier276_tree=(CommonTree)adaptor.create(Identifier276);
              adaptor.addChild(root_0,Identifier276_tree);
            }
          }
        break;
default :
      break loop38;
  }
}
 while (true);
}
retval.stop=input.LT(-1);
if (state.backtracking == 0) {
retval.tree=(CommonTree)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(CommonTree)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
