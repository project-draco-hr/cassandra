{
  CliParser.delStatement_return retval=new CliParser.delStatement_return();
  retval.start=input.LT(1);
  CommonTree root_0=null;
  Token DEL143=null;
  CliParser.columnFamilyExpr_return columnFamilyExpr144=null;
  CommonTree DEL143_tree=null;
  RewriteRuleTokenStream stream_DEL=new RewriteRuleTokenStream(adaptor,"token DEL");
  RewriteRuleSubtreeStream stream_columnFamilyExpr=new RewriteRuleSubtreeStream(adaptor,"rule columnFamilyExpr");
  try {
{
      DEL143=(Token)match(input,DEL,FOLLOW_DEL_in_delStatement2012);
      if (state.failed)       return retval;
      if (state.backtracking == 0)       stream_DEL.add(DEL143);
      pushFollow(FOLLOW_columnFamilyExpr_in_delStatement2014);
      columnFamilyExpr144=columnFamilyExpr();
      state._fsp--;
      if (state.failed)       return retval;
      if (state.backtracking == 0)       stream_columnFamilyExpr.add(columnFamilyExpr144.getTree());
      if (state.backtracking == 0) {
        retval.tree=root_0;
        RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval != null ? retval.tree : null);
        root_0=(CommonTree)adaptor.nil();
{
{
            CommonTree root_1=(CommonTree)adaptor.nil();
            root_1=(CommonTree)adaptor.becomeRoot((CommonTree)adaptor.create(NODE_THRIFT_DEL,"NODE_THRIFT_DEL"),root_1);
            adaptor.addChild(root_1,stream_columnFamilyExpr.nextTree());
            adaptor.addChild(root_0,root_1);
          }
        }
        retval.tree=root_0;
      }
    }
    retval.stop=input.LT(-1);
    if (state.backtracking == 0) {
      retval.tree=(CommonTree)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
    }
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(CommonTree)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
