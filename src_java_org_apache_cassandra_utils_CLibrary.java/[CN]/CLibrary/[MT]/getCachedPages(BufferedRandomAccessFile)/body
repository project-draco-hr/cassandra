{
  if (pageSize == null || pageSize == 0 || !DatabaseDescriptor.isPageCaheMigrationEnabled())   return null;
  long length=braf.length();
  PageCacheMetrics pageCacheMetrics=new PageCacheMetrics(pageSize,length);
  try {
    char[] pages=null;
    for (long offset=0; offset < length; offset+=Integer.MAX_VALUE) {
      long limit=(offset + Integer.MAX_VALUE) > length ? (length - offset) : Integer.MAX_VALUE;
      ByteBuffer buf=braf.getChannel().map(MapMode.READ_ONLY,offset,limit);
      int numPages=(int)((limit + pageSize - 1) / pageSize);
      if (pages == null || pages.length < numPages)       pages=new char[numPages];
      int rc=mincore(buf,(int)limit,pages);
      if (rc != 0) {
        logger.warn(String.format("mincore failed, rc (%d).",rc));
        break;
      }
      for (long i=0, position=offset; position < limit; position+=pageSize, i++) {
        if ((pages[(int)i] & 1) == 1) {
          pageCacheMetrics.setPage(position);
        }
      }
    }
  }
 catch (  RuntimeException e) {
    if (!(e instanceof LastErrorException))     throw e;
    logger.warn(String.format("mincore failed, errno (%d).",CLibrary.errno(e)));
  }
catch (  UnsatisfiedLinkError e) {
  }
  return pageCacheMetrics;
}
