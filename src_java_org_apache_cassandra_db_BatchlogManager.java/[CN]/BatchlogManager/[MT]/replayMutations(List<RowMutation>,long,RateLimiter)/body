{
  int ttl=calculateHintTTL(mutations,writtenAt);
  if (ttl <= 0)   return;
  for (  RowMutation mutation : mutations) {
    Set<InetAddress> liveEndpoints=Sets.newHashSet();
    List<InetAddress> hintEndpoints=Lists.newArrayList();
    String ks=mutation.getTable();
    Token tk=StorageService.getPartitioner().getToken(mutation.key());
    int mutationSize=(int)RowMutation.serializer.serializedSize(mutation,VERSION);
    for (    InetAddress endpoint : Iterables.concat(StorageService.instance.getNaturalEndpoints(ks,tk),StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk,ks))) {
      rateLimiter.acquire(mutationSize);
      if (endpoint.equals(FBUtilities.getBroadcastAddress()))       mutation.apply();
 else       if (FailureDetector.instance.isAlive(endpoint))       liveEndpoints.add(endpoint);
 else       hintEndpoints.add(endpoint);
    }
    if (!liveEndpoints.isEmpty())     hintEndpoints.addAll(attemptDirectDelivery(mutation,liveEndpoints));
    for (    InetAddress endpoint : hintEndpoints)     StorageProxy.writeHintForMutation(mutation,writtenAt,ttl,endpoint);
  }
}
