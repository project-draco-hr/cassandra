{
  int ttl=calculateHintTTL(mutation,writtenAt);
  if (ttl <= 0)   return;
  Set<InetAddress> liveEndpoints=new HashSet<>();
  String ks=mutation.getKeyspaceName();
  Token<?> tk=StorageService.getPartitioner().getToken(mutation.key());
  int mutationSize=(int)RowMutation.serializer.serializedSize(mutation,version);
  for (  InetAddress endpoint : Iterables.concat(StorageService.instance.getNaturalEndpoints(ks,tk),StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk,ks))) {
    rateLimiter.acquire(mutationSize);
    if (endpoint.equals(FBUtilities.getBroadcastAddress()))     mutation.apply();
 else     if (FailureDetector.instance.isAlive(endpoint))     liveEndpoints.add(endpoint);
 else     StorageProxy.writeHintForMutation(mutation,ttl,endpoint);
  }
  if (!liveEndpoints.isEmpty())   attemptDirectDelivery(mutation,writtenAt,liveEndpoints);
}
