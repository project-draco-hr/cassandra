{
  Set<InetAddress> liveEndpoints=new HashSet<>();
  String ks=mutation.getKeyspaceName();
  Token tk=mutation.key().getToken();
  for (  InetAddress endpoint : Iterables.concat(StorageService.instance.getNaturalEndpoints(ks,tk),StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk,ks))) {
    if (endpoint.equals(FBUtilities.getBroadcastAddress())) {
      mutation.apply();
    }
 else     if (FailureDetector.instance.isAlive(endpoint)) {
      liveEndpoints.add(endpoint);
    }
 else {
      hintedNodes.add(endpoint);
      HintsService.instance.write(StorageService.instance.getHostIdForEndpoint(endpoint),Hint.create(mutation,writtenAt));
    }
  }
  if (liveEndpoints.isEmpty())   return null;
  ReplayWriteResponseHandler<Mutation> handler=new ReplayWriteResponseHandler<>(liveEndpoints);
  MessageOut<Mutation> message=mutation.createMessage();
  for (  InetAddress endpoint : liveEndpoints)   MessagingService.instance().sendRR(message,endpoint,handler,false);
  return handler;
}
