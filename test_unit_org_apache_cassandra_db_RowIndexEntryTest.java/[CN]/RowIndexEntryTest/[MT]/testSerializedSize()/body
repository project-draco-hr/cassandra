{
  final RowIndexEntry<IndexHelper.IndexInfo> simple=new RowIndexEntry<>(123);
  DataOutputBuffer buffer=new DataOutputBuffer();
  RowIndexEntry.Serializer serializer=new RowIndexEntry.Serializer(new IndexHelper.IndexInfo.Serializer(new SimpleDenseCellNameType(UTF8Type.instance)));
  serializer.serialize(simple,buffer);
  Assert.assertEquals(buffer.getLength(),serializer.serializedSize(simple));
  buffer=new DataOutputBuffer();
  Schema.instance.setKeyspaceDefinition(KSMetaData.newKeyspace("Keyspace1",SimpleStrategy.class,Collections.<String,String>emptyMap(),false,Collections.singleton(standardCFMD("Keyspace1","Standard1"))));
  ColumnFamily cf=ArrayBackedSortedColumns.factory.create("Keyspace1","Standard1");
  ColumnIndex columnIndex=new ColumnIndex.Builder(cf,ByteBufferUtil.bytes("a"),new DataOutputBuffer()){
{
      int idx=0, size=0;
      Cell column;
      do {
        column=new BufferCell(CellNames.simpleDense(ByteBufferUtil.bytes("c" + idx++)),ByteBufferUtil.bytes("v"),FBUtilities.timestampMicros());
        size+=column.serializedSize(new SimpleDenseCellNameType(UTF8Type.instance),TypeSizes.NATIVE);
        add(column);
      }
 while (size < DatabaseDescriptor.getColumnIndexSize() * 3);
    }
  }
.build();
  RowIndexEntry<IndexHelper.IndexInfo> withIndex=RowIndexEntry.create(0xdeadbeef,DeletionTime.LIVE,columnIndex);
  serializer.serialize(withIndex,buffer);
  Assert.assertEquals(buffer.getLength(),serializer.serializedSize(withIndex));
}
