{
  List<AbstractType<?>> subComparators=new ArrayList<AbstractType<?>>(){
{
      ;
      add(UTF8Type.instance);
      add(UTF8Type.instance);
    }
  }
;
  CompositeType comp=CompositeType.getInstance(subComparators);
  String[][] inputs=new String[][]{new String[]{"foo","bar"},new String[]{"",""},new String[]{"foo\\","bar"},new String[]{"foo\\:","bar"},new String[]{"foo:","bar"},new String[]{"foo","b:ar"},new String[]{"foo!","b:ar"}};
  for (  String[] input : inputs) {
    CompositeType.Builder builder=new CompositeType.Builder(comp);
    for (    String part : input)     builder.add(UTF8Type.instance.fromString(part));
    ByteBuffer value=comp.fromString(comp.getString(builder.build()));
    ByteBuffer[] splitted=comp.split(value);
    for (int i=0; i < splitted.length; i++)     assertEquals(input[i],UTF8Type.instance.getString(splitted[i]));
  }
}
