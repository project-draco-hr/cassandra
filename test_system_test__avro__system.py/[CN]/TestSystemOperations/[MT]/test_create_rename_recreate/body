def test_create_rename_recreate(self):
    cf = {'keyspace': 'CreateRenameRecreate', 'name': 'CF_1', }
    keyspace1 = {'name': 'CreateRenameRecreate', 'strategy_class': 'org.apache.cassandra.locator.SimpleStrategy', 'strategy_options': {}, 'replication_factor': 1, 'cf_defs': [cf], }
    self.client.request('set_keyspace', {'keyspace': 'system', })
    self.client.request('system_add_keyspace', {'ks_def': keyspace1, })
    assert self.client.request('describe_keyspace', {'keyspace': keyspace1['name'], })
    self.client.request('system_rename_keyspace', {'old_name': keyspace1['name'], 'new_name': (keyspace1['name'] + '_renamed'), })
    assert self.client.request('describe_keyspace', {'keyspace': (keyspace1['name'] + '_renamed'), })
    avro_utils.assert_raises(AvroRemoteException, self.client.request, 'describe_keyspace', {'keyspace': keyspace1['name'], })
    self.client.request('system_add_keyspace', {'ks_def': keyspace1, })
    assert self.client.request('describe_keyspace', {'keyspace': keyspace1['name'], })
