{
  validate();
  try {
    AbstractType<?> comparator=DatabaseDescriptor.getComparator(comparators.get(getPropertyString(KW_COMPARATOR,"ascii")));
    String validator=getPropertyString(KW_DEFAULTVALIDATION,"ascii");
    return new CFMetaData(keyspace,name,ColumnFamilyType.create("Standard"),comparator,null,properties.get(KW_COMMENT),getPropertyDouble(KW_ROWCACHESIZE,CFMetaData.DEFAULT_ROW_CACHE_SIZE),getPropertyDouble(KW_KEYCACHESIZE,CFMetaData.DEFAULT_KEY_CACHE_SIZE),getPropertyDouble(KW_READREPAIRCHANCE,CFMetaData.DEFAULT_READ_REPAIR_CHANCE),getPropertyBoolean(KW_REPLICATEONWRITE,false),getPropertyInt(KW_GCGRACESECONDS,CFMetaData.DEFAULT_GC_GRACE_SECONDS),DatabaseDescriptor.getComparator(comparators.get(validator)),getPropertyInt(KW_MINCOMPACTIONTHRESHOLD,CFMetaData.DEFAULT_MIN_COMPACTION_THRESHOLD),getPropertyInt(KW_MAXCOMPACTIONTHRESHOLD,CFMetaData.DEFAULT_MAX_COMPACTION_THRESHOLD),getPropertyInt(KW_ROWCACHESAVEPERIODSECS,CFMetaData.DEFAULT_ROW_CACHE_SAVE_PERIOD_IN_SECONDS),getPropertyInt(KW_KEYCACHESAVEPERIODSECS,CFMetaData.DEFAULT_KEY_CACHE_SAVE_PERIOD_IN_SECONDS),getPropertyInt(KW_MEMTABLEFLUSHINMINS,CFMetaData.DEFAULT_MEMTABLE_LIFETIME_IN_MINS),getPropertyInt(KW_MEMTABLESIZEINMB,CFMetaData.DEFAULT_MEMTABLE_THROUGHPUT_IN_MB),getPropertyDouble(KW_MEMTABLEOPSINMILLIONS,CFMetaData.DEFAULT_MEMTABLE_OPERATIONS_IN_MILLIONS),0,getColumns(comparator));
  }
 catch (  ConfigurationException e) {
    throw new InvalidRequestException(e.toString());
  }
}
