{
  validate();
  CFMetaData newCFMD;
  try {
    AbstractType<?> comparator=DatabaseDescriptor.getComparator(comparators.get(getPropertyString(KW_COMPARATOR,"ascii")));
    String validator=getPropertyString(KW_DEFAULTVALIDATION,"ascii");
    newCFMD=new CFMetaData(keyspace,name,ColumnFamilyType.Standard,comparator,null);
    newCFMD.comment(properties.get(KW_COMMENT)).rowCacheSize(getPropertyDouble(KW_ROWCACHESIZE,CFMetaData.DEFAULT_ROW_CACHE_SIZE)).keyCacheSize(getPropertyDouble(KW_KEYCACHESIZE,CFMetaData.DEFAULT_KEY_CACHE_SIZE)).readRepairChance(getPropertyDouble(KW_READREPAIRCHANCE,CFMetaData.DEFAULT_READ_REPAIR_CHANCE)).replicateOnWrite(getPropertyBoolean(KW_REPLICATEONWRITE,CFMetaData.DEFAULT_REPLICATE_ON_WRITE)).gcGraceSeconds(getPropertyInt(KW_GCGRACESECONDS,CFMetaData.DEFAULT_GC_GRACE_SECONDS)).defaultValidator(DatabaseDescriptor.getComparator(comparators.get(validator))).minCompactionThreshold(getPropertyInt(KW_MINCOMPACTIONTHRESHOLD,CFMetaData.DEFAULT_MIN_COMPACTION_THRESHOLD)).maxCompactionThreshold(getPropertyInt(KW_MAXCOMPACTIONTHRESHOLD,CFMetaData.DEFAULT_MAX_COMPACTION_THRESHOLD)).rowCacheSavePeriod(getPropertyInt(KW_ROWCACHESAVEPERIODSECS,CFMetaData.DEFAULT_ROW_CACHE_SAVE_PERIOD_IN_SECONDS)).keyCacheSavePeriod(getPropertyInt(KW_KEYCACHESAVEPERIODSECS,CFMetaData.DEFAULT_KEY_CACHE_SAVE_PERIOD_IN_SECONDS)).memTime(getPropertyInt(KW_MEMTABLEFLUSHINMINS,CFMetaData.DEFAULT_MEMTABLE_LIFETIME_IN_MINS)).memSize(getPropertyInt(KW_MEMTABLESIZEINMB,CFMetaData.DEFAULT_MEMTABLE_THROUGHPUT_IN_MB)).memOps(getPropertyDouble(KW_MEMTABLEOPSINMILLIONS,CFMetaData.DEFAULT_MEMTABLE_OPERATIONS_IN_MILLIONS)).mergeShardsChance(0.0).columnMetadata(getColumns(comparator));
  }
 catch (  ConfigurationException e) {
    throw new InvalidRequestException(e.toString());
  }
  return newCFMD;
}
