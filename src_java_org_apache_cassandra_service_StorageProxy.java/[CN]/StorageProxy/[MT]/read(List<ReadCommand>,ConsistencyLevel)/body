{
  if (StorageService.instance.isBootstrapMode()) {
    ClientRequestMetrics.readUnavailables.inc();
    throw new UnavailableException();
  }
  long startTime=System.nanoTime();
  List<Row> rows;
  try {
    rows=fetchRows(commands,consistency_level);
  }
 catch (  UnavailableException e) {
    ClientRequestMetrics.readUnavailables.inc();
    throw e;
  }
catch (  TimeoutException e) {
    ClientRequestMetrics.readTimeouts.inc();
    throw e;
  }
 finally {
    readStats.addNano(System.nanoTime() - startTime);
  }
  return rows;
}
