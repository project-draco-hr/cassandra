{
  Map<String,Collection<InetAddress>> dcGroups=null;
  for (  InetAddress destination : targets) {
    if (totalHintsInProgress.get() > maxHintsInProgress && (getHintsInProgressFor(destination).get() > 0 && shouldHint(destination))) {
      throw new OverloadedException("Too many in flight hints: " + totalHintsInProgress.get());
    }
    if (FailureDetector.instance.isAlive(destination)) {
      if (destination.equals(FBUtilities.getBroadcastAddress()) && OPTIMIZE_LOCAL_REQUESTS) {
        insertLocal(rm,responseHandler);
      }
 else {
        String dc=DatabaseDescriptor.getEndpointSnitch().getDatacenter(destination);
        Collection<InetAddress> dcTargets=(dcGroups != null) ? dcGroups.get(dc) : null;
        if (dcTargets == null) {
          dcTargets=new ArrayList<InetAddress>(3);
          if (dcGroups == null)           dcGroups=new HashMap<String,Collection<InetAddress>>();
          dcGroups.put(dc,dcTargets);
        }
        dcTargets.add(destination);
      }
    }
 else {
      if (!shouldHint(destination))       continue;
      submitHint(rm,destination,responseHandler,consistency_level);
    }
  }
  if (dcGroups != null) {
    MessageOut<RowMutation> message=rm.createMessage();
    for (    Map.Entry<String,Collection<InetAddress>> entry : dcGroups.entrySet()) {
      boolean isLocalDC=entry.getKey().equals(localDataCenter);
      Collection<InetAddress> dcTargets=entry.getValue();
      sendMessagesToOneDC(message,dcTargets,isLocalDC,responseHandler);
    }
  }
}
