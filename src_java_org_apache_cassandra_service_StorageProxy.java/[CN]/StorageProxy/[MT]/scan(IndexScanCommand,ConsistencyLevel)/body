{
  IPartitioner p=StorageService.getPartitioner();
  Token startToken=command.index_clause.start_key == null ? p.getMinimumToken() : p.getToken(command.index_clause.start_key);
  List<InetAddress> endpoints=StorageService.instance.getLiveNaturalEndpoints(command.keyspace,startToken);
  Message message=command.getMessage();
  RangeSliceResponseResolver resolver=new RangeSliceResponseResolver(command.keyspace,endpoints);
  AbstractReplicationStrategy rs=StorageService.instance.getReplicationStrategy(command.keyspace);
  QuorumResponseHandler<List<Row>> handler=rs.getQuorumResponseHandler(resolver,consistency_level);
  MessagingService.instance.sendRR(message,endpoints.get(0),handler);
  try {
    return handler.get();
  }
 catch (  DigestMismatchException e) {
    throw new RuntimeException(e);
  }
}
