{
  TokenMetadata.Topology topology=StorageService.instance.getTokenMetadata().cachedOnlyTokenMap().getTopology();
  List<InetAddress> localEndpoints=new ArrayList<>(topology.getDatacenterEndpoints().get(localDataCenter));
  if (localEndpoints.size() == 1)   return localEndpoints;
  List<InetAddress> chosenEndpoints=new ArrayList<>(2);
  int startOffset=new Random().nextInt(localEndpoints.size());
  for (int i=0; i < localEndpoints.size() && chosenEndpoints.size() < 2; i++) {
    InetAddress endpoint=localEndpoints.get((i + startOffset) % localEndpoints.size());
    if (!endpoint.equals(FBUtilities.getBroadcastAddress()) && FailureDetector.instance.isAlive(endpoint))     chosenEndpoints.add(endpoint);
  }
  if (chosenEndpoints.isEmpty()) {
    if (consistencyLevel == ConsistencyLevel.ANY)     return Collections.singleton(FBUtilities.getBroadcastAddress());
    throw new UnavailableException(ConsistencyLevel.ONE,1,0);
  }
  return chosenEndpoints;
}
