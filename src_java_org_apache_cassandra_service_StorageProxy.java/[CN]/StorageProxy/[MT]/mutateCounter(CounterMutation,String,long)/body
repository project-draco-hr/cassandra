{
  InetAddress endpoint=findSuitableEndpoint(cm.getKeyspaceName(),cm.key(),localDataCenter,cm.consistency());
  if (endpoint.equals(FBUtilities.getBroadcastAddress())) {
    return applyCounterMutationOnCoordinator(cm,localDataCenter,queryStartNanoTime);
  }
 else {
    String keyspaceName=cm.getKeyspaceName();
    AbstractReplicationStrategy rs=Keyspace.open(keyspaceName).getReplicationStrategy();
    Token tk=cm.key().getToken();
    List<InetAddress> naturalEndpoints=StorageService.instance.getNaturalEndpoints(keyspaceName,tk);
    Collection<InetAddress> pendingEndpoints=StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk,keyspaceName);
    rs.getWriteResponseHandler(naturalEndpoints,pendingEndpoints,cm.consistency(),null,WriteType.COUNTER,queryStartNanoTime).assureSufficientLiveNodes();
    AbstractWriteResponseHandler<IMutation> responseHandler=new WriteResponseHandler<>(endpoint,WriteType.COUNTER,queryStartNanoTime);
    Tracing.trace("Enqueuing counter update to {}",endpoint);
    MessagingService.instance().sendRR(cm.makeMutationMessage(),endpoint,responseHandler,false);
    return responseHandler;
  }
}
