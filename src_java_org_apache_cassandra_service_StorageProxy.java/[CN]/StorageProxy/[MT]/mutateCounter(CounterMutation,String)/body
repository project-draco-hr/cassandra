{
  InetAddress endpoint=findSuitableEndpoint(cm.getTable(),cm.key(),localDataCenter,cm.consistency());
  if (endpoint.equals(FBUtilities.getBroadcastAddress())) {
    return applyCounterMutationOnCoordinator(cm,localDataCenter);
  }
 else {
    String table=cm.getTable();
    AbstractReplicationStrategy rs=Table.open(table).getReplicationStrategy();
    Token tk=StorageService.getPartitioner().getToken(cm.key());
    List<InetAddress> naturalEndpoints=StorageService.instance.getNaturalEndpoints(table,tk);
    Collection<InetAddress> pendingEndpoints=StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk,table);
    rs.getWriteResponseHandler(naturalEndpoints,pendingEndpoints,cm.consistency(),null,WriteType.COUNTER).assureSufficientLiveNodes();
    AbstractWriteResponseHandler responseHandler=new WriteResponseHandler(endpoint,WriteType.COUNTER);
    if (logger.isTraceEnabled())     logger.trace("forwarding counter update of key " + ByteBufferUtil.bytesToHex(cm.key()) + " to "+ endpoint);
    MessagingService.instance().sendRR(cm.makeMutationMessage(),endpoint,responseHandler);
    return responseHandler;
  }
}
