{
  long startTime=System.currentTimeMillis();
  Message message=null;
  try {
    message=rm.makeRowMutationMessage();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  try {
    IResponseResolver<Boolean> writeResponseResolver=new WriteResponseResolver();
    QuorumResponseHandler<Boolean> quorumResponseHandler=new QuorumResponseHandler<Boolean>(DatabaseDescriptor.getReplicationFactor(),writeResponseResolver);
    EndPoint[] endpoints=StorageService.instance().getNStorageEndPoint(rm.key());
    logger.debug("insertBlocking writing to [" + StringUtils.join(endpoints,", ") + "]");
    MessagingService.getMessagingInstance().sendRR(message,endpoints,quorumResponseHandler);
    if (!quorumResponseHandler.get())     throw new UnavailableException();
  }
 catch (  Exception e) {
    logger.error(e);
    throw new UnavailableException();
  }
 finally {
    if (writeOperations++ == Integer.MAX_VALUE) {
      writeOperations=1;
      writeLatency=0;
    }
    writeLatency+=System.currentTimeMillis() - startTime;
  }
}
