{
  Iterator<InetAddress> iter=targets.iterator();
  InetAddress target=iter.next();
  if (localDC || MessagingService.instance().getVersion(target) < MessagingService.VERSION_20) {
    MessagingService.instance().sendRR(message,target,handler);
    while (iter.hasNext()) {
      target=iter.next();
      MessagingService.instance().sendRR(message,target,handler);
    }
    return;
  }
  FastByteArrayOutputStream bos=new FastByteArrayOutputStream();
  DataOutputStream out=new DataOutputStream(bos);
  out.writeInt(targets.size() - 1);
  while (iter.hasNext()) {
    InetAddress destination=iter.next();
    CompactEndpointSerializationHelper.serialize(destination,out);
    int id=MessagingService.instance().addCallback(handler,message,destination,message.getTimeout());
    out.writeInt(id);
    logger.trace("Adding FWD message to {}@{}",id,destination);
  }
  message=message.withParameter(RowMutation.FORWARD_TO,bos.toByteArray());
  int id=MessagingService.instance().sendRR(message,target,handler);
  logger.trace("Sending message to {}@{}",id,target);
}
