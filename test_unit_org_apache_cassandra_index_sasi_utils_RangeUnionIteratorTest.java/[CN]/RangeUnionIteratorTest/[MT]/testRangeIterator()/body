{
  LongIterator tokens=new LongIterator(new long[]{0L,1L,2L,3L});
  Assert.assertEquals(0L,(long)tokens.getMinimum());
  Assert.assertEquals(3L,(long)tokens.getMaximum());
  for (int i=0; i <= 3; i++) {
    Assert.assertTrue(tokens.hasNext());
    Assert.assertEquals(i,(long)tokens.getCurrent());
    Assert.assertEquals(i,(long)tokens.next().get());
  }
  tokens=new LongIterator(new long[]{0L,1L,3L,5L});
  Assert.assertEquals(3L,(long)tokens.skipTo(2L).get());
  Assert.assertTrue(tokens.hasNext());
  Assert.assertEquals(3L,(long)tokens.getCurrent());
  Assert.assertEquals(3L,(long)tokens.next().get());
  Assert.assertEquals(5L,(long)tokens.skipTo(5L).get());
  Assert.assertTrue(tokens.hasNext());
  Assert.assertEquals(5L,(long)tokens.getCurrent());
  Assert.assertEquals(5L,(long)tokens.next().get());
  LongIterator empty=new LongIterator(new long[0]);
  Assert.assertNull(empty.skipTo(3L));
  Assert.assertFalse(empty.hasNext());
}
