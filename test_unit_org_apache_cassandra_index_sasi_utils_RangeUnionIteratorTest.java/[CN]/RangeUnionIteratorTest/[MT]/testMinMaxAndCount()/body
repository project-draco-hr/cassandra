{
  RangeUnionIterator.Builder<Long,Token> builder=RangeUnionIterator.builder();
  builder.add(new LongIterator(new long[]{1L,2L,3L}));
  builder.add(new LongIterator(new long[]{4L,5L,6L}));
  builder.add(new LongIterator(new long[]{7L,8L,9L}));
  Assert.assertEquals(9L,(long)builder.getMaximum());
  Assert.assertEquals(9L,builder.getTokenCount());
  RangeIterator<Long,Token> tokens=builder.build();
  Assert.assertNotNull(tokens);
  Assert.assertEquals(1L,(long)tokens.getMinimum());
  Assert.assertEquals(9L,(long)tokens.getMaximum());
  Assert.assertEquals(9L,tokens.getCount());
  for (long i=1; i < 10; i++) {
    Assert.assertTrue(tokens.hasNext());
    Assert.assertEquals(i,(long)tokens.next().get());
  }
  Assert.assertFalse(tokens.hasNext());
  Assert.assertEquals(1L,(long)tokens.getMinimum());
}
