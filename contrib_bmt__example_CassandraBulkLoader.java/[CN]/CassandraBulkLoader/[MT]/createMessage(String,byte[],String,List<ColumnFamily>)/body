{
  ColumnFamily baseColumnFamily;
  DataOutputBuffer bufOut=new DataOutputBuffer();
  RowMutation rm;
  Message message;
  Column column;
  baseColumnFamily=new ColumnFamily(CFName,ColumnFamilyType.Standard,DatabaseDescriptor.getComparator(Keyspace,CFName),DatabaseDescriptor.getSubComparator(Keyspace,CFName),CFMetaData.getId(Keyspace,CFName));
  for (  ColumnFamily cf : ColumnFamiles) {
    bufOut.reset();
    try {
      ColumnFamily.serializer().serializeWithIndexes(cf,bufOut);
      byte[] data=new byte[bufOut.getLength()];
      System.arraycopy(bufOut.getData(),0,data,0,bufOut.getLength());
      column=new Column(cf.name().getBytes("UTF-8"),data,0);
      baseColumnFamily.addColumn(column);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
  rm=new RowMutation(Keyspace,Key);
  rm.add(baseColumnFamily);
  try {
    message=rm.makeRowMutationMessage(StorageService.Verb.BINARY);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  return message;
}
