{
  if (!isEnabled() || cfs.getSSTables().isEmpty())   return Collections.emptyList();
  int base=cfs.getMinimumCompactionThreshold();
  long now=getNow();
  Iterable<SSTableReader> candidates=filterSuspectSSTables(Sets.intersection(cfs.getUncompactingSSTables(),sstables));
  List<SSTableReader> mostInteresting=getCompactionCandidates(candidates,now,base);
  if (mostInteresting != null) {
    return mostInteresting;
  }
  List<SSTableReader> sstablesWithTombstones=Lists.newArrayList();
  for (  SSTableReader sstable : candidates) {
    if (worthDroppingTombstones(sstable,gcBefore))     sstablesWithTombstones.add(sstable);
  }
  if (sstablesWithTombstones.isEmpty())   return Collections.emptyList();
  return Collections.singletonList(Collections.min(sstablesWithTombstones,new SSTableReader.SizeComparator()));
}
