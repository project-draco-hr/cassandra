{
  if (cfs.getSSTables().isEmpty())   return Collections.emptyList();
  Set<SSTableReader> uncompacting=Sets.intersection(sstables,cfs.getUncompactingSSTables());
  Set<SSTableReader> expired=Collections.emptySet();
  if (System.currentTimeMillis() - lastExpiredCheck > options.expiredSSTableCheckFrequency) {
    expired=CompactionController.getFullyExpiredSSTables(cfs,uncompacting,cfs.getOverlappingSSTables(uncompacting),gcBefore);
    lastExpiredCheck=System.currentTimeMillis();
  }
  Set<SSTableReader> candidates=Sets.newHashSet(filterSuspectSSTables(uncompacting));
  List<SSTableReader> compactionCandidates=new ArrayList<>(getNextNonExpiredSSTables(Sets.difference(candidates,expired),gcBefore));
  if (!expired.isEmpty()) {
    logger.debug("Including expired sstables: {}",expired);
    compactionCandidates.addAll(expired);
  }
  return compactionCandidates;
}
