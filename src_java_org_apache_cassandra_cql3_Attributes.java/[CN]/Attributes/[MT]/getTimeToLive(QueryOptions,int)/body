{
  if (timeToLive == null)   return defaultTimeToLive;
  ByteBuffer tval=timeToLive.bindAndGet(options);
  if (tval == null)   return 0;
  if (tval == ByteBufferUtil.UNSET_BYTE_BUFFER)   return defaultTimeToLive;
  try {
    Int32Type.instance.validate(tval);
  }
 catch (  MarshalException e) {
    throw new InvalidRequestException("Invalid timestamp value: " + tval);
  }
  int ttl=Int32Type.instance.compose(tval);
  if (ttl < 0)   throw new InvalidRequestException("A TTL must be greater or equal to 0, but was " + ttl);
  if (ttl > MAX_TTL)   throw new InvalidRequestException(String.format("ttl is too large. requested (%d) maximum (%d)",ttl,MAX_TTL));
  if (defaultTimeToLive != LivenessInfo.NO_TTL && ttl == LivenessInfo.NO_TTL)   return LivenessInfo.NO_TTL;
  return ttl;
}
