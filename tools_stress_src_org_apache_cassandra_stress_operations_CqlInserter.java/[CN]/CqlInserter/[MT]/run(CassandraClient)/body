{
  if (session.getColumnFamilyType() == ColumnFamilyType.Super)   throw new RuntimeException("Super columns are not implemented for CQL");
  if (values == null)   values=generateValues();
  if (cqlQuery == null) {
    StringBuilder query=new StringBuilder("UPDATE ").append(wrapInQuotesIfRequired("Standard1"));
    if (session.cqlVersion.startsWith("2"))     query.append(" USING CONSISTENCY ").append(session.getConsistencyLevel().toString());
    query.append(" SET ");
    for (int i=0; i < session.getColumnsPerKey(); i++) {
      if (i > 0)       query.append(',');
      if (session.timeUUIDComparator) {
        if (session.cqlVersion.startsWith("3"))         throw new UnsupportedOperationException("Cannot use UUIDs in column names with CQL3");
        query.append(wrapInQuotesIfRequired(UUIDGen.getTimeUUID().toString())).append(" = ?");
      }
 else {
        query.append(wrapInQuotesIfRequired("C" + i)).append(" = ?");
      }
    }
    query.append(" WHERE KEY=?");
    cqlQuery=query.toString();
  }
  List<String> queryParms=new ArrayList<String>();
  for (int i=0; i < session.getColumnsPerKey(); i++) {
    queryParms.add(getUnQuotedCqlBlob(values.get(i % values.size()).array(),session.cqlVersion.startsWith("3")));
  }
  String key=String.format("%0" + session.getTotalKeysLength() + "d",index);
  queryParms.add(getUnQuotedCqlBlob(key,session.cqlVersion.startsWith("3")));
  String formattedQuery=null;
  TimerContext context=session.latency.time();
  boolean success=false;
  String exceptionMessage=null;
  for (int t=0; t < session.getRetryTimes(); t++) {
    if (success)     break;
    try {
      if (session.usePreparedStatements()) {
        Integer stmntId=getPreparedStatement(client,cqlQuery);
        if (session.cqlVersion.startsWith("3"))         client.execute_prepared_cql3_query(stmntId,queryParamsAsByteBuffer(queryParms),session.getConsistencyLevel());
 else         client.execute_prepared_cql_query(stmntId,queryParamsAsByteBuffer(queryParms));
      }
 else {
        if (formattedQuery == null)         formattedQuery=formatCqlQuery(cqlQuery,queryParms);
        if (session.cqlVersion.startsWith("3"))         client.execute_cql3_query(ByteBuffer.wrap(formattedQuery.getBytes()),Compression.NONE,session.getConsistencyLevel());
 else         client.execute_cql_query(ByteBuffer.wrap(formattedQuery.getBytes()),Compression.NONE);
      }
      success=true;
    }
 catch (    Exception e) {
      exceptionMessage=getExceptionMessage(e);
      success=false;
    }
  }
  if (!success) {
    error(String.format("Operation [%d] retried %d times - error inserting key %s %s%n with query %s",index,session.getRetryTimes(),key,(exceptionMessage == null) ? "" : "(" + exceptionMessage + ")",cqlQuery));
  }
  session.operations.getAndIncrement();
  session.keys.getAndIncrement();
  context.stop();
}
