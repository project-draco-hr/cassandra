{
  for (int i=0; i < versions.size(); i++) {
    ColumnFamily diffCf=ColumnFamily.diff(versions.get(i),resolved);
    if (diffCf == null) {
      if (logger.isDebugEnabled())       logger.debug("{} has the most recent version",endpoints.get(i));
      continue;
    }
    RowMutation rowMutation=new RowMutation(table,key.key);
    rowMutation.add(diffCf);
    Message repairMessage;
    try {
      repairMessage=rowMutation.getMessage(Gossiper.instance.getVersion(endpoints.get(i)));
    }
 catch (    IOException e) {
      throw new IOError(e);
    }
    if (logger.isDebugEnabled())     logger.debug("read repair sending {} to {}",rowMutation,endpoints.get(i));
    MessagingService.instance().sendOneWay(repairMessage,endpoints.get(i));
  }
}
