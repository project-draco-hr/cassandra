{
  while (true) {
    AtomicInteger c;
    OpOrder.Group opGroup=order.start();
    try {
      if (null == (c=count.get(opGroup))) {
        count.putIfAbsent(opGroup,new AtomicInteger());
        c=count.get(opGroup);
      }
      c.incrementAndGet();
      State s=state;
      while (!s.accept(opGroup))       s=s.replacement;
    }
  finally {
      opGroup.finishOne();
    }
  }
}
