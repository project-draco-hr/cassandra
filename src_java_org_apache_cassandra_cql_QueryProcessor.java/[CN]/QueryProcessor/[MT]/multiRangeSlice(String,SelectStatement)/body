{
  List<org.apache.cassandra.db.Row> rows=null;
  IPartitioner<?> p=StorageService.getPartitioner();
  AbstractBounds bounds=new Bounds(p.getToken(select.getKeyStart().getByteBuffer()),p.getToken(select.getKeyFinish().getByteBuffer()));
  SlicePredicate thriftSlicePredicate=slicePredicateFromSelect(select);
  try {
    rows=StorageProxy.getRangeSlice(new RangeSliceCommand(keyspace,select.getColumnFamily(),null,thriftSlicePredicate,bounds,select.getNumRecords()),select.getConsistencyLevel());
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
catch (  org.apache.cassandra.thrift.UnavailableException e) {
    throw new UnavailableException();
  }
catch (  TimeoutException e) {
    throw new TimedOutException();
  }
  return rows;
}
