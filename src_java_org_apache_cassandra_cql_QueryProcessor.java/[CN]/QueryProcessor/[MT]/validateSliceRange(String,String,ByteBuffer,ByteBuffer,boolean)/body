{
  AbstractType<?> comparator=ColumnFamily.getComparatorFor(keyspace,columnFamily,null);
  try {
    comparator.validate(start);
    comparator.validate(finish);
  }
 catch (  MarshalException e) {
    throw new InvalidRequestException(e.getMessage());
  }
  Comparator<ByteBuffer> orderedComparator=reversed ? comparator.reverseComparator : comparator;
  if (start.remaining() > 0 && finish.remaining() > 0 && orderedComparator.compare(start,finish) > 0)   throw new InvalidRequestException("range finish must come after start in traversal order");
}
