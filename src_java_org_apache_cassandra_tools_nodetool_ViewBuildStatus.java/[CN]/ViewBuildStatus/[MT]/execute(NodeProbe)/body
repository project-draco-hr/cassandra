{
  String keyspace=null, view=null;
  if (args.size() == 2) {
    keyspace=args.get(0);
    view=args.get(1);
  }
 else   if (args.size() == 1) {
    String[] input=args.get(0).split("\\.");
    checkArgument(input.length == 2,"viewbuildstatus requires keyspace and view name arguments");
    keyspace=input[0];
    view=input[1];
  }
 else {
    checkArgument(false,"viewbuildstatus requires keyspace and view name arguments");
  }
  Map<String,String> buildStatus=probe.getViewBuildStatuses(keyspace,view);
  boolean failed=false;
  TableBuilder builder=new TableBuilder();
  builder.add("Host","Info");
  for (  Map.Entry<String,String> status : buildStatus.entrySet()) {
    if (!status.getValue().equals(SUCCESS)) {
      failed=true;
    }
    builder.add(status.getKey(),status.getValue());
  }
  if (failed) {
    System.out.println(String.format("%s.%s has not finished building; node status is below.",keyspace,view));
    System.out.println();
    builder.printTo(System.out);
    System.exit(1);
  }
 else {
    System.out.println(String.format("%s.%s has finished building",keyspace,view));
    System.exit(0);
  }
}
