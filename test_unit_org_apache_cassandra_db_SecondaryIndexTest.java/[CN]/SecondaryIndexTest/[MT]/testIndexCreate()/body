{
  Keyspace keyspace=Keyspace.open(KEYSPACE1);
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(COMPOSITE_INDEX_TO_BE_ADDED);
  new RowUpdateBuilder(cfs.metadata,0,"k1").clustering("c").add("birthdate",1L).build().applyUnsafe();
  String indexName="birthdate_index";
  ColumnDefinition old=cfs.metadata.getColumnDefinition(ByteBufferUtil.bytes("birthdate"));
  IndexMetadata indexDef=IndexMetadata.fromIndexTargets(cfs.metadata,Collections.singletonList(new IndexTarget(old.name,IndexTarget.Type.VALUES)),indexName,IndexMetadata.Kind.COMPOSITES,Collections.EMPTY_MAP);
  cfs.metadata.indexes(cfs.metadata.getIndexes().with(indexDef));
  Future<?> future=cfs.indexManager.addIndex(indexDef);
  future.get();
  boolean flushed=false;
  ColumnFamilyStore indexCfs=cfs.indexManager.getIndex(indexDef).getBackingTable().orElseThrow(throwAssert("Index not found"));
  flushed=!indexCfs.getLiveSSTables().isEmpty();
  assertTrue(flushed);
  assertIndexedOne(cfs,ByteBufferUtil.bytes("birthdate"),1L);
  assertTrue(cfs.getBuiltIndexes().contains(indexName));
  cfs.indexManager.removeIndex(indexDef.name);
  assertFalse(cfs.getBuiltIndexes().contains(indexName));
  future=cfs.indexManager.addIndex(indexDef);
  future.get();
  assertIndexedOne(cfs,ByteBufferUtil.bytes("birthdate"),1L);
}
