{
  ColumnFamilyStore cfs=Keyspace.open(KEYSPACE1).getColumnFamilyStore(WITH_COMPOSITE_INDEX);
  ByteBuffer bBB=ByteBufferUtil.bytes("birthdate");
  ColumnDefinition bDef=cfs.metadata.getColumnDefinition(bBB);
  ByteBuffer col=ByteBufferUtil.bytes("birthdate");
  new RowUpdateBuilder(cfs.metadata,0,"k1").clustering("c").add("birthdate",1L).build().applyUnsafe();
  assertIndexedOne(cfs,col,1L);
  RowUpdateBuilder.deleteRow(cfs.metadata,1,"k1","c").applyUnsafe();
  assertIndexedNone(cfs,col,1L);
  ReadCommand rc=Util.cmd(cfs).build();
  assertEquals(0,cfs.indexManager.getIndexSearchersFor(rc).size());
  new RowUpdateBuilder(cfs.metadata,2,"k1").clustering("c").add("birthdate",1L).build().apply();
  ;
  assertIndexedOne(cfs,col,1L);
  RowUpdateBuilder.deleteRow(cfs.metadata,1,"k1","c").applyUnsafe();
  assertIndexedOne(cfs,col,1L);
  new RowUpdateBuilder(cfs.metadata,1,"k1").clustering("c").delete(bDef).build().applyUnsafe();
  assertIndexedOne(cfs,col,1L);
  RowUpdateBuilder.deleteRow(cfs.metadata,3,"k1","c").applyUnsafe();
  rc=Util.cmd(cfs).build();
  assertEquals(0,cfs.indexManager.getIndexSearchersFor(rc).size());
  new RowUpdateBuilder(cfs.metadata,3,"k1").clustering("c").add("birthdate",1L).build().apply();
  ;
  rc=Util.cmd(cfs).build();
  assertEquals(0,cfs.indexManager.getIndexSearchersFor(rc).size());
}
