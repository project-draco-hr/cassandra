{
  if (k == null)   return null;
  K key=Tries.cast(k);
  TrieEntry<K,V> current=root.left;
  TrieEntry<K,V> path=root;
  while (true) {
    if (current.bitIndex <= path.bitIndex) {
      if (!current.isEmpty() && compareKeys(key,current.key)) {
        return removeEntry(current);
      }
 else {
        return null;
      }
    }
    path=current;
    current=!isBitSet(key,current.bitIndex) ? current.left : current.right;
  }
}
