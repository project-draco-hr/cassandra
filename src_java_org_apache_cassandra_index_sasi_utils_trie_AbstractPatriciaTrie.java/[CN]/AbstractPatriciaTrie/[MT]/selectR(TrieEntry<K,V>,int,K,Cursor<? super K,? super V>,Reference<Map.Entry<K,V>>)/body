{
  if (h.bitIndex <= bitIndex) {
    if (!h.isEmpty()) {
      Decision decision=cursor.select(h);
switch (decision) {
case REMOVE:
        throw new UnsupportedOperationException("Cannot remove during select");
case EXIT:
      reference.set(h);
    return false;
case REMOVE_AND_EXIT:
  TrieEntry<K,V> entry=new TrieEntry<>(h.getKey(),h.getValue(),-1);
reference.set(entry);
removeEntry(h);
return false;
case CONTINUE:
}
}
return true;
}
if (!isBitSet(key,h.bitIndex)) {
if (selectR(h.left,h.bitIndex,key,cursor,reference)) {
return selectR(h.right,h.bitIndex,key,cursor,reference);
}
}
 else {
if (selectR(h.right,h.bitIndex,key,cursor,reference)) {
return selectR(h.left,h.bitIndex,key,cursor,reference);
}
}
return false;
}
