{
  RowUpdateBuilder adder=new RowUpdateBuilder(SystemKeyspace.LegacyColumnfamilies,timestamp,mutation).clustering(table.cfName);
  adder.add("cf_id",table.cfId).add("type",table.isSuper() ? "Super" : "Standard");
  if (table.isSuper()) {
    adder.add("comparator",table.comparator.subtype(0).toString()).add("subcomparator",((MapType)table.compactValueColumn().type).getKeysType().toString());
  }
 else {
    adder.add("comparator",LegacyLayout.makeLegacyComparator(table).toString());
  }
  adder.add("bloom_filter_fp_chance",table.getBloomFilterFpChance()).add("caching",table.getCaching().toString()).add("comment",table.getComment()).add("compaction_strategy_class",table.compactionStrategyClass.getName()).add("compaction_strategy_options",json(table.compactionStrategyOptions)).add("compression_parameters",json(ThriftConversion.compressionParametersToThrift(table.compressionParameters))).add("default_time_to_live",table.getDefaultTimeToLive()).add("gc_grace_seconds",table.getGcGraceSeconds()).add("key_validator",table.getKeyValidator().toString()).add("local_read_repair_chance",table.getDcLocalReadRepairChance()).add("max_compaction_threshold",table.getMaxCompactionThreshold()).add("max_index_interval",table.getMaxIndexInterval()).add("memtable_flush_period_in_ms",table.getMemtableFlushPeriod()).add("min_compaction_threshold",table.getMinCompactionThreshold()).add("min_index_interval",table.getMinIndexInterval()).add("read_repair_chance",table.getReadRepairChance()).add("speculative_retry",table.getSpeculativeRetry().toString());
  for (  Map.Entry<ByteBuffer,CFMetaData.DroppedColumn> entry : table.getDroppedColumns().entrySet()) {
    String name=UTF8Type.instance.getString(entry.getKey());
    CFMetaData.DroppedColumn column=entry.getValue();
    adder.addMapEntry("dropped_columns",name,column.droppedTime);
  }
  adder.add("is_dense",table.isDense());
  adder.add("default_validator",table.makeLegacyDefaultValidator().toString());
  if (withColumnsAndTriggers) {
    for (    ColumnDefinition column : table.allColumns())     addColumnToSchemaMutation(table,column,timestamp,mutation);
    for (    TriggerMetadata trigger : table.getTriggers())     addTriggerToSchemaMutation(table,trigger,timestamp,mutation);
  }
  adder.build();
}
