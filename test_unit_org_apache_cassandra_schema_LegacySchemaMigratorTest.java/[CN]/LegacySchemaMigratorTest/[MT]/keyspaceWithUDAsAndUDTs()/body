{
  String keyspace=KEYSPACE_PREFIX + "UDAUDTs";
  UserType udt1=new UserType(keyspace,bytes("udt1"),new ArrayList<ByteBuffer>(){
{
      add(bytes("col1"));
      add(bytes("col2"));
    }
  }
,new ArrayList<AbstractType<?>>(){
{
      add(UTF8Type.instance);
      add(Int32Type.instance);
    }
  }
,true);
  UserType udt2=new UserType(keyspace,bytes("udt2"),new ArrayList<ByteBuffer>(){
{
      add(bytes("col1"));
      add(bytes("col2"));
    }
  }
,new ArrayList<AbstractType<?>>(){
{
      add(ListType.getInstance(udt1,false));
      add(Int32Type.instance);
    }
  }
,true);
  UDFunction udf1=UDFunction.create(new FunctionName(keyspace,"udf1"),ImmutableList.of(new ColumnIdentifier("col1",false),new ColumnIdentifier("col2",false)),ImmutableList.of(udt1,udt2),udt1,false,"java","return null;");
  UDFunction udf2=UDFunction.create(new FunctionName(keyspace,"udf2"),ImmutableList.of(new ColumnIdentifier("col1",false),new ColumnIdentifier("col2",false)),ImmutableList.of(udt2,udt1),udt2,false,"java","return null;");
  UDFunction udf3=UDFunction.create(new FunctionName(keyspace,"udf3"),ImmutableList.of(new ColumnIdentifier("col1",false)),ImmutableList.of(udt2),DoubleType.instance,false,"java","return 42d;");
  Functions udfs=Functions.builder().add(udf1).add(udf2).add(udf3).build();
  UDAggregate uda1=UDAggregate.create(udfs,new FunctionName(keyspace,"uda1"),ImmutableList.of(udf1.argTypes().get(1)),udf1.returnType(),udf1.name(),null,udf1.argTypes().get(0),null);
  ByteBuffer twoNullEntries=ByteBuffer.allocate(8);
  twoNullEntries.putInt(-1);
  twoNullEntries.putInt(-1);
  twoNullEntries.flip();
  UDAggregate uda2=UDAggregate.create(udfs,new FunctionName(keyspace,"uda2"),ImmutableList.of(udf2.argTypes().get(1)),udf3.returnType(),udf2.name(),udf3.name(),udf2.argTypes().get(0),twoNullEntries);
  return KeyspaceMetadata.create(keyspace,KeyspaceParams.simple(1),Tables.none(),Views.none(),Types.of(udt1,udt2),Functions.of(udf1,udf2,udf3,uda1,uda2));
}
