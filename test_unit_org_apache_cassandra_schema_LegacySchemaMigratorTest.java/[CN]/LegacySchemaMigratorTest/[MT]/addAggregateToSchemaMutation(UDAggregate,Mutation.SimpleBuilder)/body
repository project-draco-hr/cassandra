{
  Row.SimpleBuilder adder=builder.update(SystemKeyspace.LegacyAggregates).row(aggregate.name().name,functionSignatureWithTypes(aggregate));
  adder.add("return_type",aggregate.returnType().toString()).add("state_func",aggregate.stateFunction().name().name);
  if (aggregate.stateType() != null)   adder.add("state_type",aggregate.stateType().toString());
  if (aggregate.finalFunction() != null)   adder.add("final_func",aggregate.finalFunction().name().name);
  if (aggregate.initialCondition() != null)   adder.add("initcond",aggregate.initialCondition());
  List<String> types=new ArrayList<>();
  for (  AbstractType<?> argType : aggregate.argTypes())   types.add(argType.toString());
  adder.add("argument_types",types);
}
