{
  byte[] bytes=message.getMessageBody();
  DataInputBuffer buffer=new DataInputBuffer();
  buffer.reset(bytes,bytes.length);
  try {
    RowMutation rm=RowMutation.serializer().deserialize(buffer);
    if (logger_.isDebugEnabled())     logger_.debug("Applying " + rm);
    byte[] hintedBytes=message.getHeader(RowMutation.HINT);
    if (hintedBytes != null && hintedBytes.length > 0) {
      EndPoint hint=EndPoint.fromBytes(hintedBytes);
      if (logger_.isDebugEnabled())       logger_.debug("Adding hint for " + hint);
      RowMutation hintedMutation=new RowMutation(Table.SYSTEM_TABLE,rm.table());
      hintedMutation.addHints(rm.key(),hint.getHost());
      hintedMutation.apply();
    }
    rm.apply();
    WriteResponse response=new WriteResponse(rm.table(),rm.key(),true);
    Message responseMessage=WriteResponse.makeWriteResponseMessage(message,response);
    if (logger_.isDebugEnabled())     logger_.debug(rm + " applied.  Sending response to " + message.getMessageId()+ "@"+ message.getFrom());
    MessagingService.getMessagingInstance().sendOneWay(responseMessage,message.getFrom());
  }
 catch (  IOException e) {
    logger_.error("Error in row mutation",e);
  }
}
