{
  byte[] bytes=message.getMessageBody();
  RowMutationContext rowMutationCtx=tls_.get();
  if (rowMutationCtx == null) {
    rowMutationCtx=new RowMutationContext();
    tls_.set(rowMutationCtx);
  }
  rowMutationCtx.buffer_.reset(bytes,bytes.length);
  try {
    RowMutation rm=RowMutation.serializer().deserialize(rowMutationCtx.buffer_);
    logger_.debug("Applying " + rm);
    byte[] hintedBytes=message.getHeader(RowMutation.HINT);
    if (hintedBytes != null && hintedBytes.length > 0) {
      EndPoint hint=EndPoint.fromBytes(hintedBytes);
      logger_.debug("Adding hint for " + hint);
      RowMutation hintedMutation=new RowMutation(rm.table(),HintedHandOffManager.key_);
      hintedMutation.addHints(rm.key() + ":" + hint.getHost());
      hintedMutation.apply();
    }
    long start=System.currentTimeMillis();
    rowMutationCtx.row_.clear();
    rowMutationCtx.row_.key(rm.key());
    rm.apply(rowMutationCtx.row_);
    long end=System.currentTimeMillis();
    WriteResponse response=new WriteResponse(rm.table(),rm.key(),true);
    Message responseMessage=WriteResponse.makeWriteResponseMessage(message,response);
    logger_.debug("Mutation applied in " + (end - start) + "ms.  Sending response to "+ message.getMessageId()+ "@"+ message.getFrom());
    MessagingService.getMessagingInstance().sendOneWay(responseMessage,message.getFrom());
  }
 catch (  IOException e) {
    logger_.error("Error in row mutation",e);
  }
}
