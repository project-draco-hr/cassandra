{
  Keyspace keyspace=Keyspace.open(KEYSPACE1);
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(CF_STANDARDDYNCOMPOSITE);
  ByteBuffer cname1=createDynamicCompositeKey("test1",null,-1,false,true);
  ByteBuffer cname2=createDynamicCompositeKey("test1",uuids[0],24,false,true);
  ByteBuffer cname3=createDynamicCompositeKey("test1",uuids[0],42,false,true);
  ByteBuffer cname4=createDynamicCompositeKey("test2",uuids[0],-1,false,true);
  ByteBuffer cname5=createDynamicCompositeKey("test2",uuids[1],42,false,true);
  ByteBuffer key=ByteBufferUtil.bytes("kr");
  long ts=FBUtilities.timestampMicros();
  new RowUpdateBuilder(cfs.metadata,ts,key).clustering(cname5).add("val","cname5").build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,ts,key).clustering(cname1).add("val","cname1").build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,ts,key).clustering(cname4).add("val","cname4").build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,ts,key).clustering(cname2).add("val","cname2").build().applyUnsafe();
  new RowUpdateBuilder(cfs.metadata,ts,key).clustering(cname3).add("val","cname3").build().applyUnsafe();
  ColumnDefinition cdef=cfs.metadata.getColumnDefinition(ByteBufferUtil.bytes("val"));
  ImmutableBTreePartition readPartition=Util.getOnlyPartitionUnfiltered(Util.cmd(cfs,key).build());
  Iterator<Row> iter=readPartition.iterator();
  compareValues(iter.next().getCell(cdef),"cname5");
  compareValues(iter.next().getCell(cdef),"cname4");
  compareValues(iter.next().getCell(cdef),"cname1");
  compareValues(iter.next().getCell(cdef),"cname3");
  compareValues(iter.next().getCell(cdef),"cname2");
}
