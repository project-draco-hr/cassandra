{
  String[] values=RowMutation.getColumnAndColumnFamily(cf);
  String columnFamilyName=values[0];
  String columnName=(values.length == 1) ? null : values[1];
  long bytesRead=-1L;
  if (isEOF())   return bytesRead;
  seekTo(key,section);
  long startPosition=file_.getFilePointer();
  String keyInDisk=readKeyFromDisk(file_);
  if (keyInDisk != null) {
    if (keyInDisk.compareTo(key) > 0)     return bytesRead;
    int dataSize=file_.readInt();
    if (keyInDisk.equals(key)) {
      bufOut.writeUTF(keyInDisk);
      if (columnName == null) {
        int bytesSkipped=IndexHelper.skipBloomFilterAndIndex(file_);
        dataSize-=bytesSkipped;
        bufOut.writeInt(dataSize);
        bufOut.write(file_,dataSize);
      }
 else {
        BloomFilter bf=defreezeBloomFilter();
        if (!bf.isPresent(columnName))         return bytesRead;
        List<IndexHelper.ColumnIndexInfo> columnIndexList=new ArrayList<IndexHelper.ColumnIndexInfo>();
        int totalBytesRead=handleColumnNameIndexes(columnFamilyName,columnIndexList);
        dataSize-=totalBytesRead;
        String cfName=file_.readUTF();
        dataSize-=(utfPrefix_ + cfName.length());
        boolean markedForDelete=file_.readBoolean();
        dataSize-=1;
        int totalNumCols=file_.readInt();
        dataSize-=4;
        IndexHelper.ColumnIndexInfo cIndexInfo=new IndexHelper.ColumnNameIndexInfo(columnName);
        IndexHelper.ColumnRange columnRange=IndexHelper.getColumnRangeFromNameIndex(cIndexInfo,columnIndexList,dataSize,totalNumCols);
        Coordinate coordinate=columnRange.coordinate();
        file_.skipBytes((int)coordinate.start_);
        dataSize=(int)(coordinate.end_ - coordinate.start_);
        bufOut.writeInt(dataSize + utfPrefix_ + cfName.length()+ 4+ 1);
        bufOut.writeUTF(cfName);
        bufOut.writeBoolean(markedForDelete);
        bufOut.writeInt(columnRange.count());
        bufOut.write(file_,dataSize);
      }
    }
 else {
      file_.seek(dataSize + file_.getFilePointer());
    }
    long endPosition=file_.getFilePointer();
    bytesRead=endPosition - startPosition;
  }
  return bytesRead;
}
