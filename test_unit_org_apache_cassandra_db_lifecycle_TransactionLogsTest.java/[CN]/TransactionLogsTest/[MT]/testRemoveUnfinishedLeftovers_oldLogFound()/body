{
  ColumnFamilyStore cfs=MockSchema.newCFS(KEYSPACE);
  SSTableReader sstableOld=sstable(cfs,0,128);
  SSTableReader sstableNew=sstable(cfs,1,128);
  TransactionLogs transactionLogs=new TransactionLogs(OperationType.COMPACTION,cfs.metadata);
  assertNotNull(transactionLogs);
  transactionLogs.trackNew(sstableNew);
  TransactionLogs.SSTableTidier tidier=transactionLogs.obsoleted(sstableOld);
  File tmpNewLog=copyToTmpFile(transactionLogs.getData().newLog().file);
  File tmpOldLog=copyToTmpFile(transactionLogs.getData().oldLog().file);
  transactionLogs.getData().newLog().delete(false);
  Set<File> tmpFiles=new HashSet<>(TransactionLogs.getLogFiles(cfs.metadata));
  for (  String p : sstableOld.getAllFilePaths())   tmpFiles.add(new File(p));
  sstableNew.selfRef().release();
  sstableOld.selfRef().release();
  Assert.assertEquals(tmpFiles,TransactionLogs.getTemporaryFiles(cfs.metadata,sstableOld.descriptor.directory));
  TransactionLogs.removeUnfinishedLeftovers(cfs.metadata);
  Directories directories=new Directories(cfs.metadata);
  Map<Descriptor,Set<Component>> sstables=directories.sstableLister().list();
  assertEquals(1,sstables.size());
  assertFiles(transactionLogs.getDataFolder(),new HashSet<>(sstableNew.getAllFilePaths()));
  assertFiles(transactionLogs.getLogsFolder(),Collections.<String>emptySet());
  tidier.run();
  Files.move(tmpNewLog.toPath(),transactionLogs.getData().newLog().file.toPath());
  Files.move(tmpOldLog.toPath(),transactionLogs.getData().oldLog().file.toPath());
  transactionLogs.close();
}
