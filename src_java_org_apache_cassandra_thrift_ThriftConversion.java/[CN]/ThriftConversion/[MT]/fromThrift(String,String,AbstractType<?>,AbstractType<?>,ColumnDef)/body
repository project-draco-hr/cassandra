{
  boolean isSuper=thriftSubcomparator != null;
  AbstractType<?> comparator=thriftSubcomparator == null ? thriftComparator : thriftSubcomparator;
  try {
    comparator.validate(thriftColumnDef.name);
  }
 catch (  MarshalException e) {
    throw new ConfigurationException(String.format("Column name %s is not valid for comparator %s",ByteBufferUtil.bytesToHex(thriftColumnDef.name),comparator));
  }
  ColumnDefinition.Kind kind=isSuper ? ColumnDefinition.Kind.REGULAR : ColumnDefinition.Kind.STATIC;
  return new ColumnDefinition(ksName,cfName,ColumnIdentifier.getInterned(ByteBufferUtil.clone(thriftColumnDef.name),comparator),TypeParser.parse(thriftColumnDef.validation_class),ColumnDefinition.NO_POSITION,kind);
}
