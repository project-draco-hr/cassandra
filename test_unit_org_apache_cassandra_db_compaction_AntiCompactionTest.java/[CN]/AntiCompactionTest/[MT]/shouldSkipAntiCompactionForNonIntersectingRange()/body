{
  ColumnFamilyStore store=prepareColumnFamilyStore();
  Collection<SSTableReader> sstables=store.getUnrepairedSSTables();
  assertEquals(store.getSSTables().size(),sstables.size());
  Range<Token> range=new Range<Token>(new BytesToken("-1".getBytes()),new BytesToken("-10".getBytes()));
  List<Range<Token>> ranges=Arrays.asList(range);
  Refs<SSTableReader> refs=Refs.tryRef(sstables);
  if (refs == null)   throw new IllegalStateException();
  CompactionManager.instance.performAnticompaction(store,ranges,refs,1);
  assertThat(store.getSSTables().size(),is(1));
  assertThat(Iterables.get(store.getSSTables(),0).isRepaired(),is(false));
  assertThat(Iterables.get(store.getSSTables(),0).selfRef().globalCount(),is(1));
  assertThat(store.getDataTracker().getCompacting().size(),is(0));
}
