{
  Keyspace keyspace=Keyspace.open(KEYSPACE1);
  ColumnFamilyStore cfs=keyspace.getColumnFamilyStore(CF);
  cfs.disableAutoCompaction();
  SSTableReader s=writeFile(cfs,1000);
  cfs.addSSTable(s);
  long origSize=s.bytesOnDisk();
  Range<Token> range=new Range<Token>(new BytesToken(ByteBufferUtil.bytes(0)),new BytesToken(ByteBufferUtil.bytes(500)));
  Collection<SSTableReader> sstables=cfs.getLiveSSTables();
  try (LifecycleTransaction txn=cfs.getTracker().tryModify(sstables,OperationType.ANTICOMPACTION);Refs<SSTableReader> refs=Refs.ref(sstables)){
    CompactionManager.instance.performAnticompaction(cfs,Arrays.asList(range),refs,txn,12345);
  }
   long sum=0;
  long rows=0;
  for (  SSTableReader x : cfs.getLiveSSTables()) {
    sum+=x.bytesOnDisk();
    rows+=x.getTotalRows();
  }
  assertEquals(sum,cfs.metric.liveDiskSpaceUsed.getCount());
  assertEquals(rows,1000 * (1000 * 5));
  assertEquals(origSize,cfs.metric.liveDiskSpaceUsed.getCount(),16000000);
}
