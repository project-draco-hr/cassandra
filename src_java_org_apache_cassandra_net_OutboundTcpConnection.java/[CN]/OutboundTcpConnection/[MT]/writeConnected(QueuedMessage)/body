{
  try {
    byte[] sessionBytes=qm.message.parameters.get(Tracing.TRACE_HEADER);
    if (sessionBytes != null) {
      UUID sessionId=UUIDGen.getUUID(ByteBuffer.wrap(sessionBytes));
      Tracing.instance().continueExistingSession(sessionId);
      logger.debug("Sending message to {}",poolReference.endPoint());
      Tracing.instance().maybeStopNonlocalSession(sessionId);
    }
    write(qm.message,qm.id,qm.timestamp,out,targetVersion);
    completed++;
    if (active.peek() == null) {
      out.flush();
    }
  }
 catch (  Exception e) {
    if (!(e instanceof IOException))     logger.error("error writing to " + poolReference.endPoint(),e);
 else     if (logger.isDebugEnabled())     logger.debug("error writing to " + poolReference.endPoint(),e);
    disconnect();
  }
}
