{
  if (sstables.size() < 2) {
    logger.info("Nothing to compact in " + cfs.getColumnFamilyName() + "; use forceUserDefinedCompaction if you wish to force compaction of single sstables (e.g. for tombstone collection)");
    return 0;
  }
  Table table=cfs.table;
  Set<SSTableReader> smallerSSTables=new HashSet<SSTableReader>(sstables);
  while (smallerSSTables.size() > 1) {
    String compactionFileLocation=table.getDataFileLocation(cfs.getExpectedCompactedFileSize(smallerSSTables));
    if (compactionFileLocation != null)     return doCompactionWithoutSizeEstimation(cfs,smallerSSTables,gcBefore,compactionFileLocation,false);
    logger.warn("insufficient space to compact all requested files " + StringUtils.join(smallerSSTables,", "));
    smallerSSTables.remove(cfs.getMaxSizeFile(smallerSSTables));
  }
  logger.error("insufficient space to compact even the two smallest files, aborting");
  return 0;
}
