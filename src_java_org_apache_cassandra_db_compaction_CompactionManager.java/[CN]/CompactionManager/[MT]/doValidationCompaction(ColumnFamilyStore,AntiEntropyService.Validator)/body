{
  try {
    StorageService.instance.forceTableFlush(cfs.table.name,cfs.getColumnFamilyName());
  }
 catch (  ExecutionException e) {
    throw new IOException(e);
  }
catch (  InterruptedException e) {
    throw new AssertionError(e);
  }
  Collection<SSTableReader> sstables=cfs.markCurrentSSTablesReferenced();
  CompactionIterable ci=new ValidationCompactionIterable(cfs,sstables,validator.request.range);
  CloseableIterator<AbstractCompactedRow> iter=ci.iterator();
  validationExecutor.beginCompaction(ci);
  try {
    Iterator<AbstractCompactedRow> nni=Iterators.filter(iter,Predicates.notNull());
    validator.prepare(cfs);
    while (nni.hasNext()) {
      if (ci.isStopped())       throw new UserInterruptedException(ci.getCompactionInfo());
      AbstractCompactedRow row=nni.next();
      validator.add(row);
    }
    validator.complete();
  }
  finally {
    SSTableReader.releaseReferences(sstables);
    iter.close();
    validationExecutor.finishCompaction(ci);
  }
}
