{
  final Iterable<SSTableReader> sstables=cfs.markAllCompacting();
  if (sstables == null) {
    logger.info("Aborting scrub of {}.{} after failing to interrupt other compaction operations",cfs.keyspace.getName(),cfs.name);
    return AllSSTableOpStatus.ABORTED;
  }
  if (Iterables.isEmpty(sstables)) {
    logger.info("No sstables to scrub for {}.{}",cfs.keyspace.getName(),cfs.name);
    return AllSSTableOpStatus.SUCCESSFUL;
  }
  Runnable runnable=new UnmarkingRunnable(cfs,sstables){
    protected void runMayThrow() throws IOException {
      doScrub(cfs,sstables,skipCorrupted);
    }
  }
;
  executor.submit(runnable).get();
  return AllSSTableOpStatus.SUCCESSFUL;
}
