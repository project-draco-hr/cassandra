{
  Runnable runnable=new WrappedRunnable(){
    protected void runMayThrow(){
      Collection<SSTableReader> sstables=new ArrayList<>(dataFiles.size());
      for (      Descriptor desc : dataFiles) {
        SSTableReader sstable=lookupSSTable(cfs,desc);
        if (sstable == null) {
          logger.info("Will not compact {}: it is not an active sstable",desc);
        }
 else {
          sstables.add(sstable);
        }
      }
      if (sstables.isEmpty()) {
        logger.info("No files to compact for user defined compaction");
      }
 else {
        List<AbstractCompactionTask> tasks=cfs.getCompactionStrategyManager().getUserDefinedTasks(sstables,gcBefore);
        for (        AbstractCompactionTask task : tasks) {
          if (task != null)           task.execute(metrics);
        }
      }
    }
  }
;
  if (executor.isShutdown()) {
    logger.info("Compaction executor has shut down, not submitting task");
    return Futures.immediateCancelledFuture();
  }
  return executor.submit(runnable);
}
