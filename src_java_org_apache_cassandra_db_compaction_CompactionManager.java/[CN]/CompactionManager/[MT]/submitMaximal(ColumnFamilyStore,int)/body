{
  Callable<Object> callable=new Callable<Object>(){
    public Object call() throws IOException {
      compactionLock.writeLock().lock();
      try {
        if (cfStore.isInvalid())         return this;
        AbstractCompactionStrategy strategy=cfStore.getCompactionStrategy();
        for (        AbstractCompactionTask task : strategy.getMaximalTasks(gcBefore)) {
          if (!task.markSSTablesForCompaction(0,Integer.MAX_VALUE))           return this;
          try {
            compactionLock.readLock().lock();
            compactionLock.writeLock().unlock();
            try {
              return task.execute(executor);
            }
  finally {
              compactionLock.readLock().unlock();
            }
          }
  finally {
            task.unmarkSSTables();
          }
        }
      }
  finally {
        if (compactionLock.writeLock().isHeldByCurrentThread())         compactionLock.writeLock().unlock();
      }
      return this;
    }
  }
;
  return executor.submit(callable);
}
