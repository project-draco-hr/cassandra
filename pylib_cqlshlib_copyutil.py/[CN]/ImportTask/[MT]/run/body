def run(self):
    shell = self.shell
    if self.options.unrecognized:
        shell.printerr(('Unrecognized COPY FROM options: %s' % ', '.join(self.options.unrecognized.keys())))
        return
    if (not self.validate_columns()):
        return 0
    columns = ((u'[' + u', '.join(self.valid_columns)) + u']')
    self.printmsg((u'\nStarting copy of %s.%s with columns %s.' % (self.ks, self.table, columns)), encoding=self.encoding)
    try:
        try:
            params = self.make_params()
            for i in range((self.num_processes - 1)):
                self.processes.append(ImportProcess(self.update_params(params, i)))
            feeder = FeedingProcess(self.outmsg.channels[(-1)], self.inmsg.channels[(-1)], self.outmsg.channels[:(-1)], self.fname, self.options)
            self.processes.append(feeder)
            self.start_processes()
            pr = (profile_on() if PROFILE_ON else None)
            self.import_records()
            if pr:
                profile_off(pr, file_name=('parent_profile_%d.txt' % (os.getpid(),)))
        except Exception as exc:
            shell.printerr(unicode(exc))
            if shell.debug:
                traceback.print_exc()
            return 0
    finally:
        self.close()
