def split_batches(self, batch, conv):
    "\n        Split a batch into sub-batches with the same\n        partition key, if possible. If there are at least\n        batch_size rows with the same partition key value then\n        create a sub-batch with that partition key value, else\n        aggregate all remaining rows in a single 'left-overs' batch\n        "
    rows_by_pk = defaultdict(list)
    for row in batch['rows']:
        pk = conv.get_row_partition_key_values(row)
        rows_by_pk[pk].append(row)
    ret = dict()
    remaining_rows = []
    for (pk, rows) in rows_by_pk.items():
        if (len(rows) >= self.min_batch_size):
            ret[pk] = self.batches(rows, batch)
        else:
            remaining_rows.extend(rows)
    if remaining_rows:
        ret[self.hostname] = self.batches(remaining_rows, batch)
    return ret.itervalues()
