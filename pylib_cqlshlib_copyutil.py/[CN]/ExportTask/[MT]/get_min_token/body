def get_min_token(self):
    "\n        :return the minimum token, which depends on the partitioner.\n        For partitioners that do not support tokens we return None, in\n        this cases we will not work in parallel, we'll just send all requests\n        to the cqlsh session host.\n        "
    partitioner = self.shell.conn.metadata.partitioner
    if partitioner.endswith('RandomPartitioner'):
        return (-1)
    elif partitioner.endswith('Murmur3Partitioner'):
        return (- (2 ** 63))
    else:
        return None
