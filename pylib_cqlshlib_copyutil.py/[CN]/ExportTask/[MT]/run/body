def run(self):
    '\n        Initiates the export by creating the processes.\n        '
    shell = self.shell
    fname = self.fname
    if (fname is None):
        do_close = False
        csvdest = sys.stdout
    else:
        do_close = True
        try:
            csvdest = open(fname, 'wb')
        except IOError as e:
            shell.printerr(("Can't open %r for writing: %s" % (fname, e)))
            return 0
    if self.csv_options['header']:
        writer = csv.writer(csvdest, **self.dialect_options)
        writer.writerow(self.columns)
    ranges = self.get_ranges()
    num_processes = get_num_processes(cap=min(16, len(ranges)))
    params = self.make_params()
    for i in xrange(num_processes):
        self.processes.append(ExportProcess(params))
    for process in self.processes:
        process.start()
    try:
        return self.check_processes(csvdest, ranges)
    finally:
        self.close()
        if do_close:
            csvdest.close()
