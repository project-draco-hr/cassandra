def get_session(self, hosts, token_range):
    '\n        We return a session connected to one of the hosts passed in, which are valid replicas for\n        the token range. We sort replicas by favouring those without any active requests yet or with the\n        smallest number of requests. If we fail to connect we report an error so that the token will\n        be retried again later.\n\n        :return: An ExportSession connected to the chosen host.\n        '
    hosts = sorted(hosts, key=(lambda hh: (0 if (hh not in self.hosts_to_sessions) else self.hosts_to_sessions[hh].requests)))
    errors = []
    ret = None
    for host in hosts:
        try:
            ret = self.connect(host)
        except Exception as e:
            errors.append(self.get_error_message(e))
        if ret:
            if errors:
                self.printdebugmsg(('Warning: failed to connect to some replicas: %s' % (errors,)))
            return ret
    self.report_error(('Failed to connect to all replicas %s for %s, errors: %s' % (hosts, token_range, errors)))
    return None
