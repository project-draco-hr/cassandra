def init_feeder_thread(self):
    "\n        Start a thread to feed response messages to the parent process.\n\n        It is not safe to write on the pipe from the main thread if the parent process is still sending work and\n        not receiving yet. This will in fact block the main thread on the send, which in turn won't be able to call\n        recv(), and will therefore block the parent process on its send().\n\n        It is also not safe to write on the pipe from the driver receiving thread whilst the parent process is\n        sending work, because if the receiving thread stops making progress, then the main thread may no longer\n        call recv() due to the check on the maximum number of requests in inner_run().\n\n        These deadlocks are easiest to reproduce with a single worker process, but may well affect multiple worker\n        processes too.\n\n        It is important that the order of the responses in the queue is respected, or else the parent process may\n        kill off worker processes before it has received all the pages of the last token range.\n        "

    def feed_errors():
        while True:
            try:
                self.outmsg.send(self.responses.get())
            except Exception as e:
                self.printdebugmsg(e.message)
    self.responses = Queue()
    thread = threading.Thread(target=feed_errors)
    thread.setDaemon(True)
    thread.start()
