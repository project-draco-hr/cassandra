def parse_options(shell, opts):
    '\n    Parse options for import (COPY FROM) and export (COPY TO) operations.\n    Extract from opts csv and dialect options.\n\n    :return: 3 dictionaries: the csv options, the dialect options, any unrecognized options.\n    '
    dialect_options = shell.csv_dialect_defaults.copy()
    if ('quote' in opts):
        dialect_options['quotechar'] = opts.pop('quote')
    if ('escape' in opts):
        dialect_options['escapechar'] = opts.pop('escape')
    if ('delimiter' in opts):
        dialect_options['delimiter'] = opts.pop('delimiter')
    if (dialect_options['quotechar'] == dialect_options['escapechar']):
        dialect_options['doublequote'] = True
        del dialect_options['escapechar']
    csv_options = dict()
    csv_options['nullval'] = opts.pop('null', '')
    csv_options['header'] = bool((opts.pop('header', '').lower() == 'true'))
    csv_options['encoding'] = opts.pop('encoding', 'utf8')
    csv_options['jobs'] = int(opts.pop('jobs', 12))
    csv_options['pagesize'] = int(opts.pop('pagesize', 1000))
    csv_options['pagetimeout'] = int(opts.pop('pagetimeout', max(10, (10 * (csv_options['pagesize'] / 1000)))))
    csv_options['maxattempts'] = int(opts.pop('maxattempts', 5))
    csv_options['dtformats'] = opts.pop('timeformat', shell.display_time_format)
    csv_options['float_precision'] = shell.display_float_precision
    return (csv_options, dialect_options, opts)
