{
  Callable<Object> callable=new Callable<Object>(){
    public Object call() throws IOException {
      compactionLock.writeLock().lock();
      try {
        if (cfStore.isInvalid())         return this;
        Collection<SSTableReader> sstables;
        if (skip > 0) {
          sstables=new ArrayList<SSTableReader>();
          for (          SSTableReader sstable : cfStore.getSSTables()) {
            if (sstable.length() < skip * 1024L * 1024L* 1024L) {
              sstables.add(sstable);
            }
          }
        }
 else {
          sstables=cfStore.getSSTables();
        }
        Collection<SSTableReader> tocompact=cfStore.getDataTracker().markCompacting(sstables,0,Integer.MAX_VALUE);
        if (tocompact == null || tocompact.isEmpty())         return this;
        try {
          compactionLock.readLock().lock();
          compactionLock.writeLock().unlock();
          try {
            doCompaction(cfStore,tocompact,gcBefore);
          }
  finally {
            compactionLock.readLock().unlock();
          }
        }
  finally {
          cfStore.getDataTracker().unmarkCompacting(tocompact);
        }
        return this;
      }
  finally {
        if (compactionLock.writeLock().isHeldByCurrentThread())         compactionLock.writeLock().unlock();
      }
    }
  }
;
  return executor.submit(callable);
}
