{
  try {
    StorageService.instance.forceTableFlush(cfs.table.name,cfs.getColumnFamilyName());
  }
 catch (  ExecutionException e) {
    throw new IOException(e);
  }
catch (  InterruptedException e) {
    throw new AssertionError(e);
  }
  CompactionIterator ci=new ValidationCompactionIterator(cfs,validator.request.range);
  executor.beginCompaction(cfs.columnFamily,ci);
  try {
    Iterator<AbstractCompactedRow> nni=new FilterIterator(ci,PredicateUtils.notNullPredicate());
    validator.prepare(cfs);
    while (nni.hasNext()) {
      AbstractCompactedRow row=nni.next();
      validator.add(row);
    }
    validator.complete();
  }
  finally {
    ci.close();
  }
}
