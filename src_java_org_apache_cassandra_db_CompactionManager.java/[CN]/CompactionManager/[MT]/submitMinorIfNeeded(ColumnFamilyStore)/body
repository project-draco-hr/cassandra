{
  Callable<Integer> callable=new Callable<Integer>(){
    public Integer call() throws IOException {
      if (minimumCompactionThreshold <= 0 || maximumCompactionThreshold <= 0) {
        logger.debug("Compaction is currently disabled.");
        return 0;
      }
      logger.debug("Checking to see if compaction of " + cfs.columnFamily_ + " would be useful");
      Set<List<SSTableReader>> buckets=getBuckets(cfs.getSSTables(),50L * 1024L * 1024L);
      updateEstimateFor(cfs,buckets);
      for (      List<SSTableReader> sstables : buckets) {
        if (sstables.size() >= minimumCompactionThreshold) {
          Collections.sort(sstables);
          return doCompaction(cfs,sstables.subList(0,Math.min(sstables.size(),maximumCompactionThreshold)),getDefaultGCBefore());
        }
      }
      return 0;
    }
  }
;
  return executor.submit(callable);
}
