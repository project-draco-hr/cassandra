{
  pig.setBatchOn();
  pig.registerQuery("rows = LOAD 'cql://thrift_ks/some_app?" + defaultParameters + nativeParameters+ "&input_cql=select%20*%20from%20some_app%20where%20token(key)%20%3E%20%3F%20and%20token(key)%20%3C%3D%20%3F' USING CqlNativeStorage();");
  pig.registerQuery("records = FOREACH rows GENERATE TOTUPLE(TOTUPLE('key', key)),TOTUPLE(atomic_weight, created, name, percent, rating, score, vote_type);");
  pig.registerQuery("STORE records INTO 'cql://thrift_ks/copy_of_some_app?" + defaultParameters + nativeParameters+ "&output_query=UPDATE+thrift_ks.copy_of_some_app+set+atomic_weight+%3D+%3F,+created+%3D+%3F,+name+%3D+%3F,+percent+%3D+%3F,+rating+%3D+%3F,+score+%3D+%3F,+vote_type+%3D+%3F' USING CqlNativeStorage();");
  pig.executeBatch();
  Assert.assertEquals("User Qux",getColumnValue("thrift_ks","copy_of_some_app","name","qux","UTF8Type"));
  Assert.assertEquals("dislike",getColumnValue("thrift_ks","copy_of_some_app","vote_type","qux","UTF8Type"));
  Assert.assertEquals("64.7",getColumnValue("thrift_ks","copy_of_some_app","percent","qux","FloatType"));
}
