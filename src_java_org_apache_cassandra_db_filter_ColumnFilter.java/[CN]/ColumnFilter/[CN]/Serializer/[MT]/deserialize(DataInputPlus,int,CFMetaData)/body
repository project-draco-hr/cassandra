{
  int header=in.readUnsignedByte();
  boolean isFetchAll=(header & IS_FETCH_ALL_MASK) != 0;
  boolean hasQueried=(header & HAS_QUERIED_MASK) != 0;
  boolean hasSubSelections=(header & HAS_SUB_SELECTIONS_MASK) != 0;
  PartitionColumns queried=null;
  if (hasQueried) {
    Columns statics=Columns.serializer.deserialize(in,metadata);
    Columns regulars=Columns.serializer.deserialize(in,metadata);
    queried=new PartitionColumns(statics,regulars);
  }
  SortedSetMultimap<ColumnIdentifier,ColumnSubselection> subSelections=null;
  if (hasSubSelections) {
    subSelections=TreeMultimap.create(Comparator.<ColumnIdentifier>naturalOrder(),Comparator.<ColumnSubselection>naturalOrder());
    int size=(int)in.readUnsignedVInt();
    for (int i=0; i < size; i++) {
      ColumnSubselection subSel=ColumnSubselection.serializer.deserialize(in,version,metadata);
      subSelections.put(subSel.column().name,subSel);
    }
  }
  return new ColumnFilter(isFetchAll,isFetchAll ? metadata : null,queried,subSelections);
}
