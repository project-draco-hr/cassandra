def test_complete_in_describe(self):
    '\n        Tests for Cassandra-10733\n        '
    self.trycompletions('DES', immediate='C')
    self.trycompletions('DESCR', immediate='IBE ')
    self.trycompletions('DESC TABLE ', choices=['twenty_rows_table', 'ascii_with_special_chars', 'users', 'has_all_types', 'system.', 'empty_composite_table', 'empty_table', 'system_auth.', 'undefined_values_table', 'dynamic_columns', 'twenty_rows_composite_table', 'utf8_with_special_chars', 'system_traces.', 'songs', 'system_distributed.', (('"' + self.cqlsh.keyspace) + '".')], other_choices_ok=True)
    self.trycompletions('DESC TYPE ', choices=['system.', 'system_auth.', 'system_traces.', 'system_distributed.', 'address', 'phone_number', 'band_info_type', 'tags'], other_choices_ok=True)
    self.trycompletions('DESC FUNCTION ', choices=['system.', 'system_auth.', 'system_traces.', 'system_distributed.', 'fbestband', 'fbestsong', 'fmax', 'fmin', (('"' + self.cqlsh.keyspace) + '".')], other_choices_ok=True)
    self.trycompletions('DESC AGGREGATE ', choices=['system.', 'system_auth.', 'system_traces.', 'system_distributed.', 'aggmin', 'aggmax', (('"' + self.cqlsh.keyspace) + '".')], other_choices_ok=True)
    self.trycompletions(((('DESC TABLE ' + '"') + self.cqlsh.keyspace) + '".'), choices=['twenty_rows_table', 'ascii_with_special_chars', 'users', 'has_all_types', 'empty_composite_table', 'empty_table', 'undefined_values_table', 'dynamic_columns', 'twenty_rows_composite_table', 'utf8_with_special_chars', 'songs'], other_choices_ok=True)
    self.trycompletions(((('DESC TYPE ' + '"') + self.cqlsh.keyspace) + '".'), choices=['address', 'phone_number', 'band_info_type', 'tags'], other_choices_ok=True)
    self.trycompletions(((('DESC FUNCTION ' + '"') + self.cqlsh.keyspace) + '".'), immediate='f')
    self.trycompletions(((('DESC FUNCTION ' + '"') + self.cqlsh.keyspace) + '".f'), choices=['fbestband', 'fbestsong', 'fmax', 'fmin'], other_choices_ok=True)
    self.trycompletions(((('DESC AGGREGATE ' + '"') + self.cqlsh.keyspace) + '".'), immediate='aggm')
    self.trycompletions(((('DESC AGGREGATE ' + '"') + self.cqlsh.keyspace) + '".aggm'), choices=['aggmin', 'aggmax'], other_choices_ok=True)
