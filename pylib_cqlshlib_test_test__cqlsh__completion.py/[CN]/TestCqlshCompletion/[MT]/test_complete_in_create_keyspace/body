def test_complete_in_create_keyspace(self):
    self.trycompletions('create keyspace ', '', choices=('<identifier>', '<quotedName>', 'IF'))
    self.trycompletions('create keyspace moo ', "WITH replication = {'class': '")
    self.trycompletions('create keyspace "12SomeName" with ', "replication = {'class': '")
    self.trycompletions('create keyspace fjdkljf with foo=bar ', '', choices=('AND', ';'))
    self.trycompletions('create keyspace fjdkljf with foo=bar AND ', "replication = {'class': '")
    self.trycompletions('create keyspace moo with replication', " = {'class': '")
    self.trycompletions('create keyspace moo with replication=', " {'class': '")
    self.trycompletions('create keyspace moo with replication={', "'class':'")
    self.trycompletions("create keyspace moo with replication={'class'", ":'")
    self.trycompletions("create keyspace moo with replication={'class': ", "'")
    self.trycompletions("create keyspace moo with replication={'class': '", '', choices=self.strategies())
    self.trycompletions("create keySPACE ttl with replication ={ 'class' : 'SimpleStrategy'", ", 'replication_factor': ")
    self.trycompletions("create   keyspace ttl with replication ={'class':'SimpleStrategy',", " 'replication_factor': ")
    self.trycompletions('create keyspace "ttl" with replication ={\'class\': \'SimpleStrategy\', ', "'replication_factor': ")
    self.trycompletions('create keyspace "ttl" with replication ={\'class\': \'SimpleStrategy\', \'repl', "ication_factor'")
    self.trycompletions("create keyspace foo with replication ={'class': 'SimpleStrategy', 'replication_factor': ", '', choices=('<value>',))
    self.trycompletions("create keyspace foo with replication ={'class': 'SimpleStrategy', 'replication_factor': 1", '', choices=('<value>',))
    self.trycompletions("create keyspace foo with replication ={'class': 'SimpleStrategy', 'replication_factor': 1 ", '}')
    self.trycompletions("create keyspace foo with replication ={'class': 'SimpleStrategy', 'replication_factor': 1, ", '', choices=())
    self.trycompletions("create keyspace foo with replication ={'class': 'SimpleStrategy', 'replication_factor': 1} ", '', choices=('AND', ';'))
    self.trycompletions("create keyspace foo with replication ={'class': 'NetworkTopologyStrategy', ", '', choices=('<dc_name>',))
    self.trycompletions('create keyspace "PB and J" with replication={\'class\': \'NetworkTopologyStrategy\'', ', ')
    self.trycompletions("create keyspace PBJ with replication={'class': 'NetworkTopologyStrategy'} and ", "durable_writes = '")
