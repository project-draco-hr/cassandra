{
  SocketOptions socketOptions=new SocketOptions();
  Optional<Integer> connectTimeoutMillis=getInputNativeConnectionTimeout(conf);
  Optional<Integer> readTimeoutMillis=getInputNativeReadConnectionTimeout(conf);
  Optional<Integer> receiveBufferSize=getInputNativeReceiveBufferSize(conf);
  Optional<Integer> sendBufferSize=getInputNativeSendBufferSize(conf);
  Optional<Integer> soLinger=getInputNativeSolinger(conf);
  Optional<Boolean> tcpNoDelay=getInputNativeTcpNodelay(conf);
  Optional<Boolean> reuseAddress=getInputNativeReuseAddress(conf);
  Optional<Boolean> keepAlive=getInputNativeKeepAlive(conf);
  if (connectTimeoutMillis.isPresent())   socketOptions.setConnectTimeoutMillis(connectTimeoutMillis.get());
  if (readTimeoutMillis.isPresent())   socketOptions.setReadTimeoutMillis(readTimeoutMillis.get());
  if (receiveBufferSize.isPresent())   socketOptions.setReceiveBufferSize(receiveBufferSize.get());
  if (sendBufferSize.isPresent())   socketOptions.setSendBufferSize(sendBufferSize.get());
  if (soLinger.isPresent())   socketOptions.setSoLinger(soLinger.get());
  if (tcpNoDelay.isPresent())   socketOptions.setTcpNoDelay(tcpNoDelay.get());
  if (reuseAddress.isPresent())   socketOptions.setReuseAddress(reuseAddress.get());
  if (keepAlive.isPresent())   socketOptions.setKeepAlive(keepAlive.get());
  return socketOptions;
}
