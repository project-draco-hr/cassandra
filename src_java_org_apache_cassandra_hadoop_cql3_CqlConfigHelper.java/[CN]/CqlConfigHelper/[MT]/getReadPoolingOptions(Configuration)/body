{
  Optional<Integer> coreConnections=getInputCoreConnections(conf);
  Optional<Integer> maxConnections=getInputMaxConnections(conf);
  Optional<Integer> maxSimultaneousRequests=getInputMaxSimultReqPerConnections(conf);
  Optional<Integer> minSimultaneousRequests=getInputMinSimultReqPerConnections(conf);
  PoolingOptions poolingOptions=new PoolingOptions();
  for (  HostDistance hostDistance : Arrays.asList(HostDistance.LOCAL,HostDistance.REMOTE)) {
    if (coreConnections.isPresent())     poolingOptions.setCoreConnectionsPerHost(hostDistance,coreConnections.get());
    if (maxConnections.isPresent())     poolingOptions.setMaxConnectionsPerHost(hostDistance,maxConnections.get());
    if (minSimultaneousRequests.isPresent())     poolingOptions.setMinSimultaneousRequestsPerConnectionThreshold(hostDistance,minSimultaneousRequests.get());
    if (maxSimultaneousRequests.isPresent())     poolingOptions.setMaxSimultaneousRequestsPerConnectionThreshold(hostDistance,maxSimultaneousRequests.get());
  }
  return poolingOptions;
}
