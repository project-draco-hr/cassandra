{
  Optional<String> truststorePath=getInputNativeSSLTruststorePath(conf);
  Optional<String> keystorePath=getInputNativeSSLKeystorePath(conf);
  Optional<String> truststorePassword=getInputNativeSSLTruststorePassword(conf);
  Optional<String> keystorePassword=getInputNativeSSLKeystorePassword(conf);
  Optional<String> cipherSuites=getInputNativeSSLCipherSuites(conf);
  if (truststorePath.isPresent()) {
    SSLContext context;
    try {
      context=getSSLContext(truststorePath,truststorePassword,keystorePath,keystorePassword);
    }
 catch (    UnrecoverableKeyException|KeyManagementException|NoSuchAlgorithmException|KeyStoreException|CertificateException|IOException e) {
      throw new RuntimeException(e);
    }
    String[] css=SSLOptions.DEFAULT_SSL_CIPHER_SUITES;
    if (cipherSuites.isPresent())     css=cipherSuites.get().split(",");
    return Optional.of(new SSLOptions(context,css));
  }
  return Optional.absent();
}
