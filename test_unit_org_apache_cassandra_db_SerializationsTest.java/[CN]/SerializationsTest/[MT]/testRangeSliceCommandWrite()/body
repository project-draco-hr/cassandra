{
  ByteBuffer startCol=ByteBufferUtil.bytes("Start");
  ByteBuffer stopCol=ByteBufferUtil.bytes("Stop");
  ByteBuffer emptyCol=ByteBufferUtil.bytes("");
  NamesQueryFilter namesPred=new NamesQueryFilter(Statics.NamedCols);
  SliceQueryFilter emptyRangePred=new SliceQueryFilter(emptyCol,emptyCol,false,100);
  SliceQueryFilter nonEmptyRangePred=new SliceQueryFilter(startCol,stopCol,true,100);
  IPartitioner part=StorageService.getPartitioner();
  AbstractBounds<RowPosition> bounds=new Range<Token>(part.getRandomToken(),part.getRandomToken()).toRowBounds();
  RangeSliceCommand namesCmd=new RangeSliceCommand(Statics.KS,"Standard1",null,namesPred,bounds,100);
  MessageOut<RangeSliceCommand> namesCmdMsg=namesCmd.createMessage();
  RangeSliceCommand emptyRangeCmd=new RangeSliceCommand(Statics.KS,"Standard1",null,emptyRangePred,bounds,100);
  MessageOut<RangeSliceCommand> emptyRangeCmdMsg=emptyRangeCmd.createMessage();
  RangeSliceCommand regRangeCmd=new RangeSliceCommand(Statics.KS,"Standard1",null,nonEmptyRangePred,bounds,100);
  MessageOut<RangeSliceCommand> regRangeCmdMsg=regRangeCmd.createMessage();
  RangeSliceCommand namesCmdSup=new RangeSliceCommand(Statics.KS,"Super1",Statics.SC,namesPred,bounds,100);
  MessageOut<RangeSliceCommand> namesCmdSupMsg=namesCmdSup.createMessage();
  RangeSliceCommand emptyRangeCmdSup=new RangeSliceCommand(Statics.KS,"Super1",Statics.SC,emptyRangePred,bounds,100);
  MessageOut<RangeSliceCommand> emptyRangeCmdSupMsg=emptyRangeCmdSup.createMessage();
  RangeSliceCommand regRangeCmdSup=new RangeSliceCommand(Statics.KS,"Super1",Statics.SC,nonEmptyRangePred,bounds,100);
  MessageOut<RangeSliceCommand> regRangeCmdSupMsg=regRangeCmdSup.createMessage();
  DataOutputStream out=getOutput("db.RangeSliceCommand.bin");
  namesCmdMsg.serialize(out,getVersion());
  emptyRangeCmdMsg.serialize(out,getVersion());
  regRangeCmdMsg.serialize(out,getVersion());
  namesCmdSupMsg.serialize(out,getVersion());
  emptyRangeCmdSupMsg.serialize(out,getVersion());
  regRangeCmdSupMsg.serialize(out,getVersion());
  out.close();
  testSerializedSize(namesCmd,RangeSliceCommand.serializer);
  testSerializedSize(emptyRangeCmd,RangeSliceCommand.serializer);
  testSerializedSize(regRangeCmd,RangeSliceCommand.serializer);
  testSerializedSize(namesCmdSup,RangeSliceCommand.serializer);
  testSerializedSize(emptyRangeCmdSup,RangeSliceCommand.serializer);
  testSerializedSize(regRangeCmdSup,RangeSliceCommand.serializer);
}
