{
  RowMutation emptyRm=new RowMutation(Statics.KS,Statics.Key);
  RowMutation standardRowRm=new RowMutation(Statics.KS,Statics.StandardRow);
  RowMutation superRowRm=new RowMutation(Statics.KS,Statics.SuperRow);
  RowMutation standardRm=new RowMutation(Statics.KS,Statics.Key);
  standardRm.add(Statics.StandardCf);
  RowMutation superRm=new RowMutation(Statics.KS,Statics.Key);
  superRm.add(Statics.SuperCf);
  Map<Integer,ColumnFamily> mods=new HashMap<Integer,ColumnFamily>();
  mods.put(Statics.StandardCf.metadata().cfId,Statics.StandardCf);
  mods.put(Statics.SuperCf.metadata().cfId,Statics.SuperCf);
  RowMutation mixedRm=new RowMutation(Statics.KS,Statics.Key,mods);
  DataOutputStream out=getOutput("db.RowMutation.bin");
  RowMutation.serializer().serialize(emptyRm,out);
  RowMutation.serializer().serialize(standardRowRm,out);
  RowMutation.serializer().serialize(superRowRm,out);
  RowMutation.serializer().serialize(standardRm,out);
  RowMutation.serializer().serialize(superRm,out);
  RowMutation.serializer().serialize(mixedRm,out);
  Message.serializer().serialize(emptyRm.getMessage(MessagingService.version_),out);
  Message.serializer().serialize(standardRowRm.getMessage(MessagingService.version_),out);
  Message.serializer().serialize(superRowRm.getMessage(MessagingService.version_),out);
  Message.serializer().serialize(standardRm.getMessage(MessagingService.version_),out);
  Message.serializer().serialize(superRm.getMessage(MessagingService.version_),out);
  Message.serializer().serialize(mixedRm.getMessage(MessagingService.version_),out);
  out.close();
}
