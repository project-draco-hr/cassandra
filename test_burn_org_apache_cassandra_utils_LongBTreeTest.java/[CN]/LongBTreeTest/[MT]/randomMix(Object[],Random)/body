{
  final float proportion=rnd.nextFloat();
  return Iterables.transform(new BTreeSet<>(iter,ICMP),new Function<Integer,Integer>(){
    long last=Integer.MIN_VALUE;
    public Integer apply(    Integer v){
      long last=this.last;
      this.last=v;
      if (rnd.nextFloat() < proportion)       return v;
      return (int)((v - last) / 2);
    }
  }
);
}
