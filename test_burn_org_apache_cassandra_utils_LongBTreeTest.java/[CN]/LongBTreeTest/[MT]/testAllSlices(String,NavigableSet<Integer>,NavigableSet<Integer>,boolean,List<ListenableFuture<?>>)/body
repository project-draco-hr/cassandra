{
  testOneSlice(id,btree,canon,results);
  for (  Integer lb : range(canon.size(),Integer.MIN_VALUE,ascending)) {
    testOneSlice(String.format("%s->[..%d)",id,lb),btree.headSet(lb,true),canon.headSet(lb,true),results);
    testOneSlice(String.format("%s->(..%d)",id,lb),btree.headSet(lb,false),canon.headSet(lb,false),results);
    testOneSlice(String.format("%s->(%d..]",id,lb),btree.tailSet(lb,true),canon.tailSet(lb,true),results);
    testOneSlice(String.format("%s->(%d..]",id,lb),btree.tailSet(lb,false),canon.tailSet(lb,false),results);
    for (    Integer ub : range(canon.size(),lb,ascending)) {
      testOneSlice(String.format("%s->[%d..%d]",id,lb,ub),btree.subSet(lb,true,ub,true),canon.subSet(lb,true,ub,true),results);
      testOneSlice(String.format("%s->(%d..%d]",id,lb,ub),btree.subSet(lb,false,ub,true),canon.subSet(lb,false,ub,true),results);
      testOneSlice(String.format("%s->[%d..%d)",id,lb,ub),btree.subSet(lb,true,ub,false),canon.subSet(lb,true,ub,false),results);
      testOneSlice(String.format("%s->(%d..%d)",id,lb,ub),btree.subSet(lb,false,ub,false),canon.subSet(lb,false,ub,false),results);
    }
  }
}
