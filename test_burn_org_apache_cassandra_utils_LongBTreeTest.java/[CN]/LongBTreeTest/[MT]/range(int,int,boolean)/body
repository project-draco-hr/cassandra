{
  return new Iterable<Integer>(){
    int cur;
    int delta;
    int end;
{
      if (ascending) {
        end=size + 1;
        cur=from == Integer.MIN_VALUE ? -1 : from;
        delta=1;
      }
 else {
        end=-2;
        cur=from == Integer.MIN_VALUE ? size : from;
        delta=-1;
      }
    }
    @Override public Iterator<Integer> iterator(){
      return new Iterator<Integer>(){
        @Override public boolean hasNext(){
          return cur != end;
        }
        @Override public Integer next(){
          Integer r=cur;
          cur+=delta;
          return r;
        }
        @Override public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
  }
;
}
