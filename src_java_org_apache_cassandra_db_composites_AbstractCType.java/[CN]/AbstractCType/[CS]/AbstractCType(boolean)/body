{
  reverseComparator=new Comparator<Composite>(){
    public int compare(    Composite c1,    Composite c2){
      return AbstractCType.this.compare(c2,c1);
    }
  }
;
  indexComparator=new Comparator<IndexInfo>(){
    public int compare(    IndexInfo o1,    IndexInfo o2){
      return AbstractCType.this.compare(o1.lastName,o2.lastName);
    }
  }
;
  indexReverseComparator=new Comparator<IndexInfo>(){
    public int compare(    IndexInfo o1,    IndexInfo o2){
      return AbstractCType.this.compare(o1.firstName,o2.firstName);
    }
  }
;
  serializer=new Serializer(this);
  indexSerializer=new IndexInfo.Serializer(this);
  sliceSerializer=new ColumnSlice.Serializer(this);
  sliceQueryFilterSerializer=new SliceQueryFilter.Serializer(this);
  deletionInfoSerializer=new DeletionInfo.Serializer(this);
  rangeTombstoneSerializer=new RangeTombstone.Serializer(this);
  rowIndexEntrySerializer=new RowIndexEntry.Serializer(this);
  this.isByteOrderComparable=isByteOrderComparable;
}
