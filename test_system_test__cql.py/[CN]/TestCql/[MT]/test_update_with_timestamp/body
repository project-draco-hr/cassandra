def test_update_with_timestamp(self):
    'update statement should support setting timestamp'
    cursor = init()
    cursor.compression = 'NONE'
    cursor.execute("UPDATE StandardString1 USING TIMESTAMP 1303743619771318 SET name = 'name here' WHERE KEY = 'TimestampedUser2'")
    cursor.execute("SELECT * FROM StandardString1 WHERE KEY = 'TimestampedUser2'")
    assert (cursor.rowcount == 1), ('expected 1 results, got %d' % cursor.rowcount)
    colnames = [col_d[0] for col_d in cursor.description]
    assert (colnames[1] == 'name'), ("unrecognized name '%s'" % colnames[1])
    r = cursor.fetchone()
    assert (r[1] == 'name here'), ("unrecognized value '%s'" % r[1])
    cursor.execute("UPDATE StandardString1 USING CONSISTENCY ONE AND TIMESTAMP 1303743619771318 SET name = 'name here' WHERE KEY = 'TimestampedUser3'")
    cursor.execute("SELECT * FROM StandardString1 WHERE KEY = 'TimestampedUser3'")
    assert (cursor.rowcount == 1), ('expected 1 results, got %d' % cursor.rowcount)
    colnames = [col_d[0] for col_d in cursor.description]
    assert (colnames[1] == 'name'), ("unrecognized name '%s'" % colnames[1])
    r = cursor.fetchone()
    assert (r[1] == 'name here'), ("unrecognized value '%s'" % r[1])
