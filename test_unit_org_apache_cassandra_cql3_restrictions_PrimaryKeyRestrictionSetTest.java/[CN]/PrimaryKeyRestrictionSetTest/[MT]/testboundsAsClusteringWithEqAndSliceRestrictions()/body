{
  CFMetaData cfMetaData=newCFMetaData(2);
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  ByteBuffer value3=ByteBufferUtil.bytes(3);
  Restriction eq=newSingleEq(cfMetaData,0,value3);
  Restriction slice=newSingleSlice(cfMetaData,1,Bound.START,false,value1);
  PrimaryKeyRestrictions restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(eq).mergeWith(slice);
  SortedSet<Slice.Bound> bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),false,value3,value1);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),true,value3);
  slice=newSingleSlice(cfMetaData,1,Bound.START,true,value1);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(eq).mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),true,value3,value1);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),true,value3);
  slice=newSingleSlice(cfMetaData,1,Bound.END,true,value1);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(eq).mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),true,value3);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),true,value3,value1);
  slice=newSingleSlice(cfMetaData,1,Bound.END,false,value1);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(eq).mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),true,value3);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),false,value3,value1);
  slice=newSingleSlice(cfMetaData,1,Bound.START,false,value1);
  Restriction slice2=newSingleSlice(cfMetaData,1,Bound.END,false,value2);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(eq).mergeWith(slice).mergeWith(slice2);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),false,value3,value1);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),false,value3,value2);
  slice=newSingleSlice(cfMetaData,1,Bound.START,true,value1);
  slice2=newSingleSlice(cfMetaData,1,Bound.END,true,value2);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(eq).mergeWith(slice).mergeWith(slice2);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertStartBound(get(bounds,0),true,value3,value1);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEndBound(get(bounds,0),true,value3,value2);
}
