{
  CFMetaData cfMetaData=newCFMetaData(1);
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  Restriction slice=newSingleSlice(cfMetaData,0,Bound.START,false,value1);
  PrimaryKeyRestrictions restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(slice);
  List<Composite> bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,EOC.END);
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEmptyComposite(bounds.get(0));
  slice=newSingleSlice(cfMetaData,0,Bound.START,true,value1);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,EOC.NONE);
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEmptyComposite(bounds.get(0));
  slice=newSingleSlice(cfMetaData,0,Bound.END,true,value1);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEmptyComposite(bounds.get(0));
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,EOC.END);
  slice=newSingleSlice(cfMetaData,0,Bound.END,false,value1);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertEmptyComposite(bounds.get(0));
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,EOC.START);
  slice=newSingleSlice(cfMetaData,0,Bound.START,false,value1);
  Restriction slice2=newSingleSlice(cfMetaData,0,Bound.END,false,value2);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(slice).mergeWith(slice2);
  bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,EOC.END);
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value2,EOC.START);
  slice=newSingleSlice(cfMetaData,0,Bound.START,true,value1);
  slice2=newSingleSlice(cfMetaData,0,Bound.END,true,value2);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(slice).mergeWith(slice2);
  bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,EOC.NONE);
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value2,EOC.END);
}
