{
  CFMetaData cfMetaData=newCFMetaData(Sort.ASC,Sort.DESC,Sort.ASC,Sort.DESC);
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  ByteBuffer value3=ByteBufferUtil.bytes(3);
  ByteBuffer value4=ByteBufferUtil.bytes(4);
  Restriction slice=newMultiSlice(cfMetaData,0,Bound.START,false,value1,value2,value3,value4);
  PrimaryKeyRestrictions restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(slice);
  SortedSet<Slice.Bound> bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(4,bounds.size());
  assertStartBound(get(bounds,0),true,value1);
  assertStartBound(get(bounds,1),true,value1,value2,value3);
  assertStartBound(get(bounds,2),false,value1,value2,value3);
  assertStartBound(get(bounds,3),false,value1);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(4,bounds.size());
  assertEndBound(get(bounds,0),false,value1,value2);
  assertEndBound(get(bounds,1),false,value1,value2,value3,value4);
  assertEndBound(get(bounds,2),true,value1,value2);
  assertEmptyEnd(get(bounds,3));
  Restriction eq=newSingleEq(cfMetaData,0,value1);
  slice=newMultiSlice(cfMetaData,1,Bound.START,false,value2,value3,value4);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(slice);
  restrictions=restrictions.mergeWith(eq);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(3,bounds.size());
  assertStartBound(get(bounds,0),true,value1);
  assertStartBound(get(bounds,1),true,value1,value2,value3);
  assertStartBound(get(bounds,2),false,value1,value2,value3);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(3,bounds.size());
  assertEndBound(get(bounds,0),false,value1,value2);
  assertEndBound(get(bounds,1),false,value1,value2,value3,value4);
  assertEndBound(get(bounds,2),true,value1,value2);
  slice=newMultiSlice(cfMetaData,0,Bound.START,true,value1,value2);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(2,bounds.size());
  assertStartBound(get(bounds,0),true,value1);
  assertStartBound(get(bounds,1),false,value1);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(2,bounds.size());
  assertEndBound(get(bounds,0),true,value1,value2);
  assertEmptyEnd(get(bounds,1));
  slice=newMultiSlice(cfMetaData,0,Bound.START,true,value1,value2,value3,value4);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(4,bounds.size());
  assertStartBound(get(bounds,0),true,value1);
  assertStartBound(get(bounds,1),true,value1,value2,value3);
  assertStartBound(get(bounds,2),false,value1,value2,value3);
  assertStartBound(get(bounds,3),false,value1);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(4,bounds.size());
  assertEndBound(get(bounds,0),false,value1,value2);
  assertEndBound(get(bounds,1),true,value1,value2,value3,value4);
  assertEndBound(get(bounds,2),true,value1,value2);
  assertEmptyEnd(get(bounds,3));
  slice=newMultiSlice(cfMetaData,0,Bound.END,true,value1,value2,value3,value4);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(4,bounds.size());
  assertEmptyStart(get(bounds,0));
  assertStartBound(get(bounds,1),true,value1,value2);
  assertStartBound(get(bounds,2),true,value1,value2,value3,value4);
  assertStartBound(get(bounds,3),false,value1,value2);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(4,bounds.size());
  assertEndBound(get(bounds,0),false,value1);
  assertEndBound(get(bounds,1),false,value1,value2,value3);
  assertEndBound(get(bounds,2),true,value1,value2,value3);
  assertEndBound(get(bounds,3),true,value1);
  slice=newMultiSlice(cfMetaData,0,Bound.END,false,value1,value2,value3,value4);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(slice);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(4,bounds.size());
  assertEmptyStart(get(bounds,0));
  assertStartBound(get(bounds,1),true,value1,value2);
  assertStartBound(get(bounds,2),false,value1,value2,value3,value4);
  assertStartBound(get(bounds,3),false,value1,value2);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(4,bounds.size());
  assertEndBound(get(bounds,0),false,value1);
  assertEndBound(get(bounds,1),false,value1,value2,value3);
  assertEndBound(get(bounds,2),true,value1,value2,value3);
  assertEndBound(get(bounds,3),true,value1);
  slice=newMultiSlice(cfMetaData,0,Bound.START,false,value1,value2,value3,value4);
  Restriction slice2=newMultiSlice(cfMetaData,0,Bound.END,false,value2,value3);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(slice).mergeWith(slice2);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(5,bounds.size());
  assertStartBound(get(bounds,0),true,value1);
  assertStartBound(get(bounds,1),true,value1,value2,value3);
  assertStartBound(get(bounds,2),false,value1,value2,value3);
  assertStartBound(get(bounds,3),false,value1);
  assertStartBound(get(bounds,4),false,value2,value3);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(5,bounds.size());
  assertEndBound(get(bounds,0),false,value1,value2);
  assertEndBound(get(bounds,1),false,value1,value2,value3,value4);
  assertEndBound(get(bounds,2),true,value1,value2);
  assertEndBound(get(bounds,3),false,value2);
  assertEndBound(get(bounds,4),true,value2);
  slice=newMultiSlice(cfMetaData,0,Bound.START,true,value1,value2,value3,value4);
  slice2=newMultiSlice(cfMetaData,0,Bound.END,true,value4,value3,value2,value1);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator,false);
  restrictions=restrictions.mergeWith(slice).mergeWith(slice2);
  bounds=restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT);
  assertEquals(7,bounds.size());
  assertStartBound(get(bounds,0),true,value1);
  assertStartBound(get(bounds,1),true,value1,value2,value3);
  assertStartBound(get(bounds,2),false,value1,value2,value3);
  assertStartBound(get(bounds,3),false,value1);
  assertStartBound(get(bounds,4),true,value4,value3);
  assertStartBound(get(bounds,5),true,value4,value3,value2,value1);
  assertStartBound(get(bounds,6),false,value4,value3);
  bounds=restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT);
  assertEquals(7,bounds.size());
  assertEndBound(get(bounds,0),false,value1,value2);
  assertEndBound(get(bounds,1),true,value1,value2,value3,value4);
  assertEndBound(get(bounds,2),true,value1,value2);
  assertEndBound(get(bounds,3),false,value4);
  assertEndBound(get(bounds,4),false,value4,value3,value2);
  assertEndBound(get(bounds,5),true,value4,value3,value2);
  assertEndBound(get(bounds,6),true,value4);
}
