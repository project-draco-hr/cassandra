{
  CFMetaData cfMetaData=newCFMetaData(Sort.ASC,Sort.ASC,Sort.ASC,Sort.ASC);
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  ByteBuffer value3=ByteBufferUtil.bytes(3);
  ByteBuffer value4=ByteBufferUtil.bytes(4);
  ByteBuffer value5=ByteBufferUtil.bytes(5);
  Restriction multiEq=newMultiEq(cfMetaData,0,value1,value2);
  Restriction multiSlice=newMultiSlice(cfMetaData,2,Bound.START,false,value3,value4);
  PrimaryKeyRestrictions restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(multiEq).mergeWith(multiSlice);
  List<Composite> bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.END);
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,EOC.END);
  multiEq=newMultiEq(cfMetaData,0,value1,value2);
  Restriction multiIN=newMultiIN(cfMetaData,2,asList(value3,value4),asList(value4,value5));
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(multiEq).mergeWith(multiIN);
  bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(2,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.START);
  assertComposite(bounds.get(1),value1,value2,value4,value5,EOC.START);
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(2,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.END);
  assertComposite(bounds.get(1),value1,value2,value4,value5,EOC.END);
  multiEq=newMultiEq(cfMetaData,0,value1,value2);
  Restriction multiEq2=newMultiEq(cfMetaData,2,value3,value4);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(multiEq).mergeWith(multiEq2);
  bounds=restrictions.boundsAsComposites(Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.START);
  bounds=restrictions.boundsAsComposites(Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.END);
}
