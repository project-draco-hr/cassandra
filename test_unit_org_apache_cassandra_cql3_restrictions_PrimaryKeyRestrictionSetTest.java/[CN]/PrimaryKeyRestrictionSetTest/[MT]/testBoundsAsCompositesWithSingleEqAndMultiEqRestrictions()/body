{
  CFMetaData cfMetaData=newCFMetaData(Sort.ASC,Sort.ASC,Sort.ASC,Sort.ASC);
  ByteBuffer value1=ByteBufferUtil.bytes(1);
  ByteBuffer value2=ByteBufferUtil.bytes(2);
  ByteBuffer value3=ByteBufferUtil.bytes(3);
  ByteBuffer value4=ByteBufferUtil.bytes(4);
  Restriction singleEq=newSingleEq(cfMetaData,0,value1);
  Restriction multiEq=newMultiEq(cfMetaData,1,value2,value3);
  PrimaryKeyRestrictions restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(singleEq).mergeWith(multiEq);
  List<Composite> bounds=restrictions.boundsAsComposites(cfMetaData,Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,EOC.START);
  bounds=restrictions.boundsAsComposites(cfMetaData,Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,EOC.END);
  singleEq=newSingleEq(cfMetaData,0,value1);
  Restriction singleEq2=newSingleEq(cfMetaData,1,value2);
  multiEq=newMultiEq(cfMetaData,2,value3,value4);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(singleEq).mergeWith(singleEq2).mergeWith(multiEq);
  bounds=restrictions.boundsAsComposites(cfMetaData,Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.START);
  bounds=restrictions.boundsAsComposites(cfMetaData,Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.END);
  singleEq=newSingleEq(cfMetaData,2,value3);
  multiEq=newMultiEq(cfMetaData,0,value1,value2);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(singleEq).mergeWith(multiEq);
  bounds=restrictions.boundsAsComposites(cfMetaData,Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,EOC.START);
  bounds=restrictions.boundsAsComposites(cfMetaData,Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,EOC.END);
  singleEq=newSingleEq(cfMetaData,0,value1);
  singleEq2=newSingleEq(cfMetaData,3,value4);
  multiEq=newMultiEq(cfMetaData,1,value2,value3);
  restrictions=new PrimaryKeyRestrictionSet(cfMetaData.comparator);
  restrictions=restrictions.mergeWith(singleEq).mergeWith(multiEq).mergeWith(singleEq2);
  bounds=restrictions.boundsAsComposites(cfMetaData,Bound.START,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.START);
  bounds=restrictions.boundsAsComposites(cfMetaData,Bound.END,QueryOptions.DEFAULT);
  assertEquals(1,bounds.size());
  assertComposite(bounds.get(0),value1,value2,value3,value4,EOC.END);
}
